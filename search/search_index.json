{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to How2CentOS","title":"Home"},{"location":"#welcome-to-how2centos","text":"","title":"Welcome to How2CentOS"},{"location":"301-redirect/","text":"Source Search engines may think www.example.co.za and example.co.za are two different sites.You should set up a permanent redirect (technically called a 301 redirect) between these sites. Once you do that, you will get full search engine credit for your work on these sites. In example.co.za html root folder create the following: vi .htaccess RewriteEngine on rewritecond %{http_host} ^example.co.za [nc] rewriterule ^(.*)$ http://www.example.co.za/$1 [r=301,nc]","title":"301 Redirect"},{"location":"adding-centos-5-3-to-a-local-yum-repository/","text":"Source CentOS 5.3 has just been released and that means it's time to update our Local CentOS 5.x YUM repo . Adding CentOS 5.3 to the YUM repository script Create the following additional Directories: mkdir -p /var/www/html/centos/5.3/os/i386 mkdir -p /var/www/html/centos/5.3/updates/i386 mkdir -p /var/www/html/centos/5.3/os/x86_64 mkdir -p /var/www/html/centos/5.3/updates/x86_64 Add the CentOS 5.3 repo to the bash script which will rsync your local YUM Repo server with a CentOS 5.3 YUM mirror. CentOS Mirror list http://www.centos.org/modules/tinycontent/index.php?id=30 vi yum-repo-update.sh #!/bin/sh rsync=\"rsync -avrt --bwlimit=256\" mirror=ftp.is.co.za::IS-Mirror/centos verlist=\"5 5.2 5.3&lt;/span>\" archlist=\"i386 x86_64\" baselist=\"os updates\" local=/var/www/html/centos/ for ver in $verlist do for arch in $archlist do for base in $baselist do remote=$mirror/$ver/$base/$arch/ $rsync $remote $local/$ver/$base/$arch/ done done done NB! Please read creating a Local CentOS YUM repository on CentOS 5.x before implementing. Upgrading from CentOS 5.2 ( or CentOS 5.0 / 5.1 ): If you are already running CentOS 5.3 or an older CentOS 5 distro, all you need to do is update your machine via yum by running : yum update","title":"Adding CentOS 5.3 to a local YUM Repository"},{"location":"adding-centos-5-3-to-a-local-yum-repository/#adding-centos-53-to-the-yum-repository-script","text":"Create the following additional Directories: mkdir -p /var/www/html/centos/5.3/os/i386 mkdir -p /var/www/html/centos/5.3/updates/i386 mkdir -p /var/www/html/centos/5.3/os/x86_64 mkdir -p /var/www/html/centos/5.3/updates/x86_64 Add the CentOS 5.3 repo to the bash script which will rsync your local YUM Repo server with a CentOS 5.3 YUM mirror. CentOS Mirror list http://www.centos.org/modules/tinycontent/index.php?id=30 vi yum-repo-update.sh #!/bin/sh rsync=\"rsync -avrt --bwlimit=256\" mirror=ftp.is.co.za::IS-Mirror/centos verlist=\"5 5.2 5.3&lt;/span>\" archlist=\"i386 x86_64\" baselist=\"os updates\" local=/var/www/html/centos/ for ver in $verlist do for arch in $archlist do for base in $baselist do remote=$mirror/$ver/$base/$arch/ $rsync $remote $local/$ver/$base/$arch/ done done done NB! Please read creating a Local CentOS YUM repository on CentOS 5.x before implementing.","title":"Adding CentOS 5.3 to the YUM repository script"},{"location":"adding-centos-5-3-to-a-local-yum-repository/#upgrading-from-centos-52-or-centos-50-51","text":"If you are already running CentOS 5.3 or an older CentOS 5 distro, all you need to do is update your machine via yum by running : yum update","title":"Upgrading from CentOS 5.2 ( or CentOS 5.0 / 5.1 ):"},{"location":"adding-centos-5-4-to-a-local-yum-repository/","text":"Source What is CentOS CentOS is 100% compatible rebuild of the Red Hat Enterprise Linux, in full compliance with Red Hat's redistribution requirements. CentOS is for people who need an enterprise class operating system stability without the cost of certification and support. Following the release of RHEL 5.4, CentOS 5.4 has just hit the CentOS mirrors. Time to update the Local CentOS YUM repository script. Adding CentOS 5.4 to the YUM repository script Create the following additional Directories for CentOS 5.4: mkdir -p /var/www/html/centos/5.4/os/i386 mkdir -p /var/www/html/centos/5.4/updates/i386 mkdir -p /var/www/html/centos/5.4/os/x86_64 mkdir -p /var/www/html/centos/5.4/updates/x86_64 Add the CentOS 5.4 repository to the bash script which will rsync your local YUM repository server with a CentOS 5.4 YUM mirror. CentOS Mirror list http://www.centos.org/modules/tinycontent/index.php?id=30 vi yum-repo-update.sh #!/bin/sh rsync=\"rsync -avrt --bwlimit=256\" mirror=ftp.is.co.za::IS-Mirror/centos verlist=\"5.3 5.4\" archlist=\"i386 x86_64\" baselist=\"os updates\" local=/var/www/html/centos/ for ver in $verlist do for arch in $archlist do for base in $baselist do remote=$mirror/$ver/$base/$arch/ $rsync $remote $local/$ver/$base/$arch/ done done done NB! Please read creating a Local CentOS YUM repository on CentOS 5.x before implementing. Upgrading from CentOS 5.3 ( or CentOS 5.0 / 5.1 / 5.2 ) If you are already running CentOS 5.3 or an older CentOS 5 distro, all you need to do is update your machine via yum by running : yum update","title":"Adding CentOS 5.4 to a local YUM Repository"},{"location":"adding-centos-5-4-to-a-local-yum-repository/#what-is-centos","text":"CentOS is 100% compatible rebuild of the Red Hat Enterprise Linux, in full compliance with Red Hat's redistribution requirements. CentOS is for people who need an enterprise class operating system stability without the cost of certification and support. Following the release of RHEL 5.4, CentOS 5.4 has just hit the CentOS mirrors. Time to update the Local CentOS YUM repository script.","title":"What is CentOS"},{"location":"adding-centos-5-4-to-a-local-yum-repository/#adding-centos-54-to-the-yum-repository-script","text":"Create the following additional Directories for CentOS 5.4: mkdir -p /var/www/html/centos/5.4/os/i386 mkdir -p /var/www/html/centos/5.4/updates/i386 mkdir -p /var/www/html/centos/5.4/os/x86_64 mkdir -p /var/www/html/centos/5.4/updates/x86_64 Add the CentOS 5.4 repository to the bash script which will rsync your local YUM repository server with a CentOS 5.4 YUM mirror. CentOS Mirror list http://www.centos.org/modules/tinycontent/index.php?id=30 vi yum-repo-update.sh #!/bin/sh rsync=\"rsync -avrt --bwlimit=256\" mirror=ftp.is.co.za::IS-Mirror/centos verlist=\"5.3 5.4\" archlist=\"i386 x86_64\" baselist=\"os updates\" local=/var/www/html/centos/ for ver in $verlist do for arch in $archlist do for base in $baselist do remote=$mirror/$ver/$base/$arch/ $rsync $remote $local/$ver/$base/$arch/ done done done NB! Please read creating a Local CentOS YUM repository on CentOS 5.x before implementing.","title":"Adding CentOS 5.4 to the YUM repository script"},{"location":"adding-centos-5-4-to-a-local-yum-repository/#upgrading-from-centos-53-or-centos-50-51-52","text":"If you are already running CentOS 5.3 or an older CentOS 5 distro, all you need to do is update your machine via yum by running : yum update","title":"Upgrading from CentOS 5.3 ( or CentOS 5.0 / 5.1 / 5.2 )"},{"location":"adding-centos-5-5-to-a-local-yum-repository/","text":"Source What is CentOS? CentOS is 100% compatible rebuild of the Red Hat Enterprise Linux, in full compliance with Red Hat's redistribution requirements. CentOS is for people who need an enterprise class operating system stability without the cost of certification and support. CentOS Website What is YUM? The Yellowdog Updater, Modified (YUM) is an open-source command-line package-management utility for RPM-compatible Linux operating systems and has been released under the GNU General Public License. It was developed by Seth Vidal and a group of volunteer programmers. Though yum has a command-line interface, several other tools provide graphical user interfaces to yum functionality. Yum Website Following the release of RHEL 5.5, CentOS 5.5 has just hit the CentOS 5.5 download mirrors. Time to update the Local CentOS YUM repository script. This update script, via Rsync, will create a local CentOS 5.5 download mirror. Your local CentOS 5.5 Servers will then be able to to update from this local repository. Adding CentOS 5.5 to the YUM repository script Create the following additional Directories for CentOS 5.5: mkdir -pv /var/www/html/centos/5.5/{os,updates}/{i386,x86_64} Add the CentOS 5.5 repository to the bash script which will rsync your local YUM repository server with a CentOS 5.5 YUM mirror. CentOS Mirror list http://www.centos.org/modules/tinycontent/index.php?id=30 vi yum-repo-update.sh #!/bin/sh # This script will create a local CentOS mirror via Rsync # Note: This script will download CentOS 5.5 and 5.4 # rsync=\"rsync -avrt --bwlimit=256\" mirror=ftp.is.co.za::IS-Mirror/centos verlist=\"5.4 5.5\" archlist=\"i386 x86_64\" baselist=\"os updates\" local=/var/www/html/centos/ for ver in $verlist do for arch in $archlist do for base in $baselist do remote=$mirror/$ver/$base/$arch/ $rsync $remote $local/$ver/$base/$arch/ done done done NB! Please read creating a Local CentOS YUM repository on CentOS 5.x before implementing. Upgrading from CentOS 5.4 ( or CentOS 5.0 / 5.1 / 5.2 / 5.3): If you are already running CentOS 5.4 or an older CentOS 5 distro, all you need to do is update your machine via yum by running: yum update","title":"Adding CentOS 5.5 to a local YUM Repository"},{"location":"adding-centos-5-5-to-a-local-yum-repository/#what-is-centos","text":"CentOS is 100% compatible rebuild of the Red Hat Enterprise Linux, in full compliance with Red Hat's redistribution requirements. CentOS is for people who need an enterprise class operating system stability without the cost of certification and support. CentOS Website","title":"What is CentOS?"},{"location":"adding-centos-5-5-to-a-local-yum-repository/#what-is-yum","text":"The Yellowdog Updater, Modified (YUM) is an open-source command-line package-management utility for RPM-compatible Linux operating systems and has been released under the GNU General Public License. It was developed by Seth Vidal and a group of volunteer programmers. Though yum has a command-line interface, several other tools provide graphical user interfaces to yum functionality. Yum Website Following the release of RHEL 5.5, CentOS 5.5 has just hit the CentOS 5.5 download mirrors. Time to update the Local CentOS YUM repository script. This update script, via Rsync, will create a local CentOS 5.5 download mirror. Your local CentOS 5.5 Servers will then be able to to update from this local repository.","title":"What is YUM?"},{"location":"adding-centos-5-5-to-a-local-yum-repository/#adding-centos-55-to-the-yum-repository-script","text":"Create the following additional Directories for CentOS 5.5: mkdir -pv /var/www/html/centos/5.5/{os,updates}/{i386,x86_64} Add the CentOS 5.5 repository to the bash script which will rsync your local YUM repository server with a CentOS 5.5 YUM mirror. CentOS Mirror list http://www.centos.org/modules/tinycontent/index.php?id=30 vi yum-repo-update.sh #!/bin/sh # This script will create a local CentOS mirror via Rsync # Note: This script will download CentOS 5.5 and 5.4 # rsync=\"rsync -avrt --bwlimit=256\" mirror=ftp.is.co.za::IS-Mirror/centos verlist=\"5.4 5.5\" archlist=\"i386 x86_64\" baselist=\"os updates\" local=/var/www/html/centos/ for ver in $verlist do for arch in $archlist do for base in $baselist do remote=$mirror/$ver/$base/$arch/ $rsync $remote $local/$ver/$base/$arch/ done done done NB! Please read creating a Local CentOS YUM repository on CentOS 5.x before implementing.","title":"Adding CentOS 5.5 to the YUM repository script"},{"location":"adding-centos-5-5-to-a-local-yum-repository/#upgrading-from-centos-54-or-centos-50-51-52-53","text":"If you are already running CentOS 5.4 or an older CentOS 5 distro, all you need to do is update your machine via yum by running: yum update","title":"Upgrading from CentOS 5.4 ( or CentOS 5.0 / 5.1 / 5.2 / 5.3):"},{"location":"adding-centos-5-6-to-a-local-yum-repository/","text":"Source NB! Please read creating a Local CentOS YUM repository on CentOS 5.x before implementing. Adding CentOS 5.6 to the YUM repository script Create the following additional directories for CentOS 5.6: mkdir -pv /var/www/html/centos/5.6/{os,updates}/{i386,x86_64} Add the CentOS 5.6 repository to the bash script which will rsync your local YUM repository server with a CentOS 5.6 YUM mirror. CentOS Mirror list http://www.centos.org/modules/tinycontent/index.php?id=30 vi yum-repo-update.sh #!/bin/sh # This script will create a local CentOS mirror via Rsync # Note: This script will download CentOS 5.6 # rsync=\"rsync -avrt --bwlimit=256\" mirror=ftp.is.co.za::IS-Mirror/centos verlist=\"5.6\" archlist=\"i386 x86_64\" baselist=\"os updates\" local=/var/www/html/centos/ for ver in $verlist do for arch in $archlist do for base in $baselist do remote=$mirror/$ver/$base/$arch/ $rsync $remote $local/$ver/$base/$arch/ done done done Upgrading from CentOS 5.5 If you are already running CentOS 5.5 or an older CentOS 5 distro, all you need to do is update your machine via yum by running : yum update","title":"Adding CentOS 5.6 to a local YUM Repository"},{"location":"adding-centos-5-6-to-a-local-yum-repository/#adding-centos-56-to-the-yum-repository-script","text":"Create the following additional directories for CentOS 5.6: mkdir -pv /var/www/html/centos/5.6/{os,updates}/{i386,x86_64} Add the CentOS 5.6 repository to the bash script which will rsync your local YUM repository server with a CentOS 5.6 YUM mirror. CentOS Mirror list http://www.centos.org/modules/tinycontent/index.php?id=30 vi yum-repo-update.sh #!/bin/sh # This script will create a local CentOS mirror via Rsync # Note: This script will download CentOS 5.6 # rsync=\"rsync -avrt --bwlimit=256\" mirror=ftp.is.co.za::IS-Mirror/centos verlist=\"5.6\" archlist=\"i386 x86_64\" baselist=\"os updates\" local=/var/www/html/centos/ for ver in $verlist do for arch in $archlist do for base in $baselist do remote=$mirror/$ver/$base/$arch/ $rsync $remote $local/$ver/$base/$arch/ done done done","title":"Adding CentOS 5.6 to the YUM repository script"},{"location":"adding-centos-5-6-to-a-local-yum-repository/#upgrading-from-centos-55","text":"If you are already running CentOS 5.5 or an older CentOS 5 distro, all you need to do is update your machine via yum by running : yum update","title":"Upgrading from CentOS 5.5"},{"location":"apache-with-mod-pagespeed-on-centos-5-5/","text":"Source mod_pagespeed is an open-source Apache module that automatically optimizes web pages and resources on them. It does this by rewriting the resources using filters that implement web performance best practices. Read more http://code.google.com/speed/page-speed/docs/module.html This tutorial will show you how to install Apache with mod_pagespeed on CentOS 5.5. Let's begin. Installing Apache yum install yum-priorities yum install httpd Add the mod_pagespeed YUM repository vi /etc/yum.repos.d/mod-pagespeed.repo CentOS 5.5 32 Bit [mod-pagespeed] name=mod-pagespeed baseurl=http://dl.google.com/linux/mod-pagespeed/rpm/stable/i386 enabled=1 gpgcheck=0 CentOS 5.5 64 Bit [mod-pagespeed] name=mod-pagespeed baseurl=http://dl.google.com/linux/mod-pagespeed/rpm/stable/x86_64 enabled=1 gpgcheck=0 Installing mod_pagespeed yum install mod-pagespeed-beta Done! All that is left is to read more about using mod_pagespeed, its configuration and configuring handlers at Using mod_pagespeed","title":"Apache with mod_pagespeed on CentOS 5.5"},{"location":"apache-with-mod-pagespeed-on-centos-5-5/#installing-apache","text":"yum install yum-priorities yum install httpd","title":"Installing Apache"},{"location":"apache-with-mod-pagespeed-on-centos-5-5/#add-the-mod_pagespeed-yum-repository","text":"vi /etc/yum.repos.d/mod-pagespeed.repo CentOS 5.5 32 Bit [mod-pagespeed] name=mod-pagespeed baseurl=http://dl.google.com/linux/mod-pagespeed/rpm/stable/i386 enabled=1 gpgcheck=0 CentOS 5.5 64 Bit [mod-pagespeed] name=mod-pagespeed baseurl=http://dl.google.com/linux/mod-pagespeed/rpm/stable/x86_64 enabled=1 gpgcheck=0","title":"Add the mod_pagespeed YUM repository"},{"location":"apache-with-mod-pagespeed-on-centos-5-5/#installing-mod_pagespeed","text":"yum install mod-pagespeed-beta Done! All that is left is to read more about using mod_pagespeed, its configuration and configuring handlers at Using mod_pagespeed","title":"Installing mod_pagespeed"},{"location":"assp-anti-spam-smtp-proxy-on-centos-5-4-part-2/","text":"This is a follow up post to Fight Spam With #ASSP (Anti-Spam SMTP Proxy) On CentOS 5.4 . If you haven\u2019t already installed ASSP do so before continuing with this How To and remember that you need a working installation of Microsoft Exchange 2007 Server as well. This How To can be implemented on a live Microsoft Exchange 2007 server while it\u2019s running. Leave the original ports (25 In and 25 Out, OWA and/or internal usage ports) alone and create new ones. Once you\u2019re ready to go simply activate the new ports, then deactivate the original ports, your users will never see a glitch in service and will make rolling back just as seamless. Preliminary Note: I am using a CentOS 5.4 i386 base installation with ASSP (Anti-Spam SMTP Proxy) and Microsoft Exchange 2007 Server already installed and configured in this tutorial. assp001.example.co.za (IP 10.0.0.100): CentOS 5.4 i386 ASSP installation exchange001.example.co.za (IP 10.0.0.101): Microsoft Exchange 2007 server Setup Sendmail as your MTA relay In the previous How To we disabled Sendmail because it used the same port that we wanted ASSP to listen on. What we need to do is some configuration changes and start/install it again to be our MTA. Edit your sendmail.mc configuration file and change the following values (replace example.co.za with your domain). If you uninstalled Sendmail as per the previous How To then reinstall it. # yum install sendmail sendmail-cf Lets edit the Sendmail configuration file. # vi /etc/mail/sendmail.mc DAEMON_OPTIONS(`Name=MTA,Port=125') MASQUERADE_AS(`example.co.za')dnl FEATURE(masquerade_entire_domain)dnl MASQUERADE_DOMAIN(example.co.za)dnl # echo \"example.co.za\" >> /etc/mail/relay-domains Finally build the Sendmail database. # m4 /etc/mail/sendmail.mc > /etc/mail/sendmail.cf Lets start Sendmail and test that it\u2019s listening on the correct port. # service sendmail start # chkconfig sendmail on # telnet localhost 125 Trying 127.0.0.1... Connected to localhost.localdomain (127.0.0.1). Escape character is '^]'. 220 assp001.example.co.za ESMTP Sendmail 8.13.8/8.13.8; Thu, 1 Apr 2010 08:09:30 +0200 So that\u2019s the Sendmail MTA setup done, now onto the Exchange 2007 configuration. Setup Exchange 2007 Remember that this setup assumes that you already have a working installation of Microsoft Exchange 2007 1) Create an additional incoming (i.e. \u201cASSP Inbound\u201d on port 125) using the Exchange Management Console. 2) Create an additional outgoing connector (i.e. \u201cASSP Outbound\u201d) using the Exchange Management Console. Set the outbound connector to transfer to a smarthost on 192.168.0.2 (ASSP) and check the box for to use the remote server DNS on the smarthost. The outbound connector will default to port 25 which we will change in the next step. 3) Change the outbound connector \u201cASSP Outbound\u201d port to 325 via the Exchange Management Shell using the Set-SendConnector command. Set-SendConnector -identity \"ASSP Outbound\" -port 325. In ASSP Admin panel, make the following changes ** In NETWORK SETUP 1) Insure the SMTP LISTEN PORT is 10.0.0.100:25 2) Insure the SMTP DESTINATION is 10.0.0.101:125 ** In RELAYING 3) Insure the RELAY PORT is 10.0.0.100:325 4) Insure the RELAY HOST is 10.0.0.100:125 Here is a flow description of how everything fits together ** Incoming Mail Internet to Firewall on 25 \u2013> Firewall passes to ASSP on 10.0.0.100 Port 25 \u2013> relays to Exchange listening on 10.0.0.101 port 125 ** Outgoing Mail Exchange from 10.0.0.101 port 325 smarthosts \u2013> ASSP listening on 10.0.0.100 port 325 and relays \u2013> to Sendmail MTA on listening on 10.0.0.100 port 125 \u2013> MTA transmits to the internet. ** Exchange Settings \u2013 Final 1) Disable outbound connector on port 25 in and enable \u201cASSP Outbound\u201d connector in the Exchange Management Console.","title":"ASSP (Anti-Spam SMTP Proxy) On CentOS 5.4 part 2"},{"location":"asterisk-libpri-outbound-moh-fix/","text":"Source This is a very simple and effective 'work around' for the popular Asterisk outbound Music on Hold (MOH) issue. This is a default Asterisk setting that will play your own MOH on an outbound call, which has proved to be problematic. More often than not, and all the time with certain dialed numbers (depending on the dialed company's PBX system), the caller (you) is put on hold, and your Asterisk system plays your [default] MOH music. When the call is unholded by the remote party, the call on your side is not retrieved, resulting in your MOH being played indefinitely, loosing the call - very unprofessional, and you are guaranteed this will happen to your CEO, to his most frequent dialed business partners ! Reason: Within the Asterisk Kernel, it is coded to play the [default] Message on Hold (MOH) class, which is the same for all calls made internally to another extension. You can create many MOH classes, but only the [default] is used for external calls. It is also a bug in the way LibPRI processes ISDN on-hold frames, and won\u2019t be fixed in current Asterisk 1.4, but will be an option to turn this off in DAHDI Asterisk 1.6 (so I have read). We have tried and tested 1.6, and was introduced to a whole new range of problems (other advice - stick to 1.4!). Asterisk also has issues interpreting certain DTMF tones, so does not know when to unhold a call, because never receives or interprets the unhold tone sent by remote PBX system. On the 'Outbound Routes' option in FreePBX, you can set the MOH to none, but does not work, still uses default. Relates to: AsteriskNOW Trixbox Elastix - My best choice of a complete Asterisk PBX Solution! Other Asterisk installed by source, possibly on Ubuntu All the above are available for ISO download, and based on CentOS 5 Core. Create a new Music on Hold class, and configure the music Firstly browser to your FreePBX GUI, navigate to Music on Hold , select Add Music Category , and give it a name. For now I will name it CompanyA. In your Linux console, this will create a folder in /var/lib/asterisk/mohmp3/CompanyA/ ll /var/lib/asterisk/mohmp3/ Copy your music from /var/lib/asterisk/mohmp3/ to this new directory: cp /var/lib/asterisk/mohmp3/*.mp3 /var/lib/asterisk/mohmp3/CompanyA Change ALL your Inbound Lines and Queues Next Change ALL your Inbound Lines and Queues within FreePBX GUI to use this new MOH class 'CompanyA'. You dont have to do this for inbound Fax lines if you are making use of Fax to Email, like Hylafax. I left mine as Default. You can script this, but its a much longer process to create a script, rather than simply doing it via the GUI. If you backup your asterisk folder, or rsync it, then change a field or two in FreePBX, then run rsync again or diff on the files, it changes more than one config file, and just becomes confusing. Get your IT desktop guy to do the manual work, otherwise please post the script! Edit config file and restart Asterisk Finally all you need to do is edit a config file, reload Asterisk, and you're done! vim /etc/asterisk/musiconhold_additional.conf Comment out the [default] MOH class to point to /dev/null (this deactivates the MOH feature completely for this class). Comment out and add for easy roll-back, always think ahead! [CompanyA] mode=files directory=/var/lib/asterisk/mohmp3/CompanyA/ random=yes [default] mode=files directory=/dev/null ;[default] ;mode=files ;directory=/var/lib/asterisk/mohmp3/ FINALLY - in FreePBX, Reload Asterisk and you're done! From here, when you make an outbound call, and you are put on hold, you will hear the dialed party's Music on Hold (or whatever they have) instead of yours. This reassures you that the call has not dropped, and you are still on hold. There is no DTMF tones or frames that your Asterisk box has to interpret, taking the fault away from your side.","title":"Asterisk LibPRI outbound MOH fix"},{"location":"asterisk-libpri-outbound-moh-fix/#create-a-new-music-on-hold-class-and-configure-the-music","text":"Firstly browser to your FreePBX GUI, navigate to Music on Hold , select Add Music Category , and give it a name. For now I will name it CompanyA. In your Linux console, this will create a folder in /var/lib/asterisk/mohmp3/CompanyA/ ll /var/lib/asterisk/mohmp3/ Copy your music from /var/lib/asterisk/mohmp3/ to this new directory: cp /var/lib/asterisk/mohmp3/*.mp3 /var/lib/asterisk/mohmp3/CompanyA","title":"Create a new Music on Hold class, and configure the music"},{"location":"asterisk-libpri-outbound-moh-fix/#change-all-your-inbound-lines-and-queues","text":"Next Change ALL your Inbound Lines and Queues within FreePBX GUI to use this new MOH class 'CompanyA'. You dont have to do this for inbound Fax lines if you are making use of Fax to Email, like Hylafax. I left mine as Default. You can script this, but its a much longer process to create a script, rather than simply doing it via the GUI. If you backup your asterisk folder, or rsync it, then change a field or two in FreePBX, then run rsync again or diff on the files, it changes more than one config file, and just becomes confusing. Get your IT desktop guy to do the manual work, otherwise please post the script!","title":"Change ALL your Inbound Lines and Queues"},{"location":"asterisk-libpri-outbound-moh-fix/#edit-config-file-and-restart-asterisk","text":"Finally all you need to do is edit a config file, reload Asterisk, and you're done! vim /etc/asterisk/musiconhold_additional.conf Comment out the [default] MOH class to point to /dev/null (this deactivates the MOH feature completely for this class). Comment out and add for easy roll-back, always think ahead! [CompanyA] mode=files directory=/var/lib/asterisk/mohmp3/CompanyA/ random=yes [default] mode=files directory=/dev/null ;[default] ;mode=files ;directory=/var/lib/asterisk/mohmp3/ FINALLY - in FreePBX, Reload Asterisk and you're done! From here, when you make an outbound call, and you are put on hold, you will hear the dialed party's Music on Hold (or whatever they have) instead of yours. This reassures you that the call has not dropped, and you are still on hold. There is no DTMF tones or frames that your Asterisk box has to interpret, taking the fault away from your side.","title":"Edit config file and restart Asterisk"},{"location":"bios-and-firmware-updates-using-dell-linux-repository/","text":"You can update your CentOS 6 system to the latest version or to a specific version of the BIOS and firmware available in the Dell Linux online repository. You can inventory your CentOS 6 system, scan the repository for matching firmware with newer version using repository management software such as yum. Firmware-tools are used to update BIOS and firmware on your system. Using a repository management software, you can easily update your BIOS and firmware to the latest or specific versions on your system. Setting Up/Bootstrapping the Repository To setup/bootstrap the Dell Linux online repository on your CentOS 6 sever, run the following command at the command prompt: # wget -q -O - http://linux.dell.com/repo/hardware/latest/bootstrap.cgi | bash The system is configured to access the Dell Linux online repository using supported repository management software. The Dell GPG keys and libsmbios (BIOS library) are also installed. Installing Firmware Tools # yum install dell_ft_install Downloading Applicable Firmware # yum install $(bootstrap_firmware) You can also inventory your system for the list of existing versions of BIOS and firmware using the following command: # inventory_firmware Updating BIOS and Firmware Using CLI Run the following command to inventory the system and scan the repository for new versions of components: # update_firmware This command provides information about the existing versions of components on your system and the list of component versions that are available to be installed. To install all applicable BIOS and firmware updates on your system, run the following command: # update_firmware --yes Once the devices are updated, the \u201cExecution Success\u201d message is displayed. Automatically Update Firmware By default, installing a BIOS or firmware RPM does not apply the update to the hardware. The update is manually applied using the update_firmware command. However, you can automatically update the hardware during RPM installation by configuring the /etc/firmware/firmware.conf file. To automatically install BIOS and firmware updates, ensure that rpm_mode is set to auto in the firmware.conf file as shown: [main] # Automatically install BIOS updates when an RPM BIOS Update file is installed # values: 'auto', 'manual' # default: 'manual' rpm_mode=auto Viewing Log Information # cat /var/log/firmware-updates.log","title":"BIOS and Firmware Updates Using Dell Linux Repository"},{"location":"bios-and-firmware-updates-using-dell-linux-repository/#setting-upbootstrapping-the-repository","text":"To setup/bootstrap the Dell Linux online repository on your CentOS 6 sever, run the following command at the command prompt: # wget -q -O - http://linux.dell.com/repo/hardware/latest/bootstrap.cgi | bash The system is configured to access the Dell Linux online repository using supported repository management software. The Dell GPG keys and libsmbios (BIOS library) are also installed.","title":"Setting Up/Bootstrapping the Repository"},{"location":"bios-and-firmware-updates-using-dell-linux-repository/#installing-firmware-tools","text":"# yum install dell_ft_install","title":"Installing Firmware Tools"},{"location":"bios-and-firmware-updates-using-dell-linux-repository/#downloading-applicable-firmware","text":"# yum install $(bootstrap_firmware) You can also inventory your system for the list of existing versions of BIOS and firmware using the following command: # inventory_firmware","title":"Downloading Applicable Firmware"},{"location":"bios-and-firmware-updates-using-dell-linux-repository/#updating-bios-and-firmware-using-cli","text":"Run the following command to inventory the system and scan the repository for new versions of components: # update_firmware This command provides information about the existing versions of components on your system and the list of component versions that are available to be installed. To install all applicable BIOS and firmware updates on your system, run the following command: # update_firmware --yes Once the devices are updated, the \u201cExecution Success\u201d message is displayed.","title":"Updating BIOS and Firmware Using CLI"},{"location":"bios-and-firmware-updates-using-dell-linux-repository/#automatically-update-firmware","text":"By default, installing a BIOS or firmware RPM does not apply the update to the hardware. The update is manually applied using the update_firmware command. However, you can automatically update the hardware during RPM installation by configuring the /etc/firmware/firmware.conf file. To automatically install BIOS and firmware updates, ensure that rpm_mode is set to auto in the firmware.conf file as shown: [main] # Automatically install BIOS updates when an RPM BIOS Update file is installed # values: 'auto', 'manual' # default: 'manual' rpm_mode=auto","title":"Automatically Update Firmware"},{"location":"bios-and-firmware-updates-using-dell-linux-repository/#viewing-log-information","text":"# cat /var/log/firmware-updates.log","title":"Viewing Log Information"},{"location":"centos-5-4-released-to-mirrors/","text":"The anticipation for the release of CentOS 5.4 has been an exciting wait. So believe me when I say I was excited to read a blog post by Dag Wieers posted today \u201cSo, CentOS 5.4 has been released to mirrors\u201d. So time to knuckle down and start planning the update from CentOS 5.3 to CentOS 5.4, first step is adding the CentOS 5.4 yum repository to our local yum repository. So, CentOS 5.4 has been released to mirrors Submitted by dag on Wed, 2009/10/14 - 01:15 So, CentOS 5.4 has been released to mirrors and will be available soon as updates to your existing systems. This ends about 6 weeks of suspended security fixes, although some security fixes were released in the CentOS 5.3 repository before the actual 5.4 release was ready. Most of what is new can be found from my earlier RHEL5.4 release blog post. Enjoy! The original blog post from Dag Wieers","title":"CentOS 5.4 released to mirrors"},{"location":"centos-5-5-close-to-release/","text":"Starting to get excited about the release of the CentOS 5.5 download. At the rate it\u2019s going we\u2019re looking at a CentOS 5.5 release date mid to end May but we stand to be corrected. For those of you not following CentOS on Twitter you should do so to get the latest updates as they happen ( @CentOS ). Here are some tweets from @CentOS to get you all excited: \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014- 5.5/i386 and 5.5/x86_64 are now in QA \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014- getting ready for the final iso build process for CentOS 5.5 \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014- The first round of builds are nearly complete, we should start doing QA on 5.5 fairly soon now \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014- CentOS-5.5 is now cooking! \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014-","title":"CentOS 5.5 close to release"},{"location":"centos-5-7-released/","text":"CentOS 5.7 is now available (see download link at the end of the article) for both 32-bit and 64-bit architectures and it is based on the upstream release of Red Hat Enterprise Linux 5.7. It contains lots of updates, bugfixes and new features. CentOS 5.7 Downloads You can download CentOS Linux 6 via the web/ftp server or via BitTorrent (recommended) client. CentOS 5.7 DVD ISO downloads Download CentOS 5.7 32 bit i386 DVD ISO Local Mirror Download CentOS 5.7 64 bit x86_64 DVD ISO Local Mirror CentOS 5.7 DVD ISO Torrents Torrent files for the DVD\u2019s are available at the following location: Download 32 bit i386 torrent file Download 64 bit x86_64 torrent file","title":"CentOS 5.7 Released"},{"location":"centos-5-7-released/#centos-57-downloads","text":"You can download CentOS Linux 6 via the web/ftp server or via BitTorrent (recommended) client.","title":"CentOS 5.7 Downloads"},{"location":"centos-5-7-released/#centos-57-dvd-iso-downloads","text":"Download CentOS 5.7 32 bit i386 DVD ISO Local Mirror Download CentOS 5.7 64 bit x86_64 DVD ISO Local Mirror","title":"CentOS 5.7 DVD ISO downloads"},{"location":"centos-5-7-released/#centos-57-dvd-iso-torrents","text":"Torrent files for the DVD\u2019s are available at the following location: Download 32 bit i386 torrent file Download 64 bit x86_64 torrent file","title":"CentOS 5.7 DVD ISO Torrents"},{"location":"centos-5-change-hostname/","text":"In this CentOS tutorial we will be showing you how to find and change the hostname of your system. The assumption is that you are running as root and have a basic understanding of the software required but if you follow this tutorial you should be able to complete the task successfully. Let us begin by finding the CentOS systems fully qualified domain name (FQDN) by seeing how it identifies itself. Print the network node hostname # uname -n centos01.how2centos.com Show the systems DNS domain name # dnsdomainname how2centos.com There are a couple of ways to change the hostname. Edit /etc/sysconfig/network # vi /etc/sysconfig/network NETWORKING=yes NETWORKING_IPV6=no HOSTNAME=centos01.how2centos.com or run System Config # system-config-network Select Edit DNS configuration \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00a4 Select Action \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2 \u00e2 Edit a device params \u00e2 Edit DNS configuration \u00e2 \u00e2 \u00e2 \u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2 \u00e2 Save&Quit \u00e2 \u00e2 Quit \u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2 \u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00a4 DNS configuration \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2 \u00e2 \u00e2 Hostname centos01.how2ce \u00e2 Primary DSN 10.0.0.10______ \u00e2 Secondary DNS _______________ \u00e2 Tertiary DNS _______________ \u00e2 Search how2centos.com_ \u00e2 \u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2 \u00e2 Ok \u00e2 \u00e2 Cancel \u00e2 \u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2 \u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 Edit the hostname and select OK and then Save&Quit Dont forget to change the hostname in your hosts file # vi /etc/hosts # Do not remove the following line, or various programs # that require network functionality will fail. 127.0.0.1 centos01.how2centos.com centos01 localhost.localdomain localhost ::1 localhost6.localdomain6 localhost6 However we\u2019re not finished. The machine wont normally see the updated hostname until about it reboots, but we can force it to update. # source /etc/sysconfig/network # hostname $HOSTNAME","title":"CentOS 5 Change Hostname"},{"location":"centos-5-change-hostname/#print-the-network-node-hostname","text":"# uname -n centos01.how2centos.com","title":"Print the network node hostname"},{"location":"centos-5-change-hostname/#show-the-systems-dns-domain-name","text":"# dnsdomainname how2centos.com There are a couple of ways to change the hostname. Edit /etc/sysconfig/network # vi /etc/sysconfig/network NETWORKING=yes NETWORKING_IPV6=no HOSTNAME=centos01.how2centos.com or run System Config # system-config-network Select Edit DNS configuration \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00a4 Select Action \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2 \u00e2 Edit a device params \u00e2 Edit DNS configuration \u00e2 \u00e2 \u00e2 \u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2 \u00e2 Save&Quit \u00e2 \u00e2 Quit \u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2 \u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00a4 DNS configuration \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2 \u00e2 \u00e2 Hostname centos01.how2ce \u00e2 Primary DSN 10.0.0.10______ \u00e2 Secondary DNS _______________ \u00e2 Tertiary DNS _______________ \u00e2 Search how2centos.com_ \u00e2 \u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2 \u00e2 Ok \u00e2 \u00e2 Cancel \u00e2 \u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 \u00e2 \u00e2 \u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2\u00e2 Edit the hostname and select OK and then Save&Quit Dont forget to change the hostname in your hosts file # vi /etc/hosts # Do not remove the following line, or various programs # that require network functionality will fail. 127.0.0.1 centos01.how2centos.com centos01 localhost.localdomain localhost ::1 localhost6.localdomain6 localhost6 However we\u2019re not finished. The machine wont normally see the updated hostname until about it reboots, but we can force it to update. # source /etc/sysconfig/network # hostname $HOSTNAME","title":"Show the systems DNS domain name"},{"location":"centos-5-disable-selinux/","text":"NSA Security-Enhanced Linux (SELinux) is an implementation of a flexible mandatory access control architecture in the Linux operating system. The SELinux architecture provides general support for the enforcement of many kinds of mandatory access control policies, including those based on the concepts of Type Enforcement(R), Role Based Access Control, and Multi-Level Security. Background information and technical documentation about SELinux can be found at http://www.nsa.gov/research/selinux/index.shtml # man selinux If you really need to disable SELinux on your system please consider the following: or you\u2019re considering one of the alternates: AppArmor http://www.novell.com/linux/security/apparmor/ Bastille Linux http://bastille-linux.sourceforge.net/ grsecurity http://grsecurity.net/ # vi /etc/selinux/config Change SELINUX=enforcing # This file controls the state of SELinux on the system. # SELINUX= can take one of these three values: # enforcing - SELinux security policy is enforced. # permissive - SELinux prints warnings instead of enforcing. # disabled - SELinux is fully disabled. SELINUX=enforcing # SELINUXTYPE= type of policy in use. Possible values are: # targeted - Only targeted network daemons are protected. # strict - Full SELinux protection. SELINUXTYPE=targeted [/bash] to SELINUX=disabled # This file controls the state of SELinux on the system. # SELINUX= can take one of these three values: # enforcing - SELinux security policy is enforced. # permissive - SELinux prints warnings instead of enforcing. # disabled - SELinux is fully disabled. SELINUX=disabled # SELINUXTYPE= type of policy in use. Possible values are: # targeted - Only targeted network daemons are protected. # strict - Full SELinux protection. SELINUXTYPE=targeted [/bash] This will disable SELinux on your next reboot.","title":"CentOS 5 Disable SELinux"},{"location":"centos-6-3-released/","text":"CentOS 6.3 has been released. CentOS-6.3 is based on the upstream release EL 6.3 and includes packages from all variants. All upstream repositories have been combined into one, to make it easier for end users to work with. CentOS 6.3 Downloads You can download CentOS 6.3 via the web/ftp server or via BitTorrent (recommended) client. CentOS 6.3 DVD ISO downloads Choose a CentOS mirror close to you : CentOS 6.3 Mirrors CentOS 6.3 DVD ISO Torrents Torrent files for the DVD\u2019s are available at the following location: Download 32 bit i386 torrent file Download 64 bit x86_64 torrent file Upgrading from CentOS-6.0 / 6.1 or 6.2 Unless you have edited your yum configs, a \u2018yum update\u2019 should move your machine seamlessly from any previous CentOS-6.x release to CentOS-6.3","title":"CentOS 6.3 Released"},{"location":"centos-6-3-released/#centos-63-downloads","text":"You can download CentOS 6.3 via the web/ftp server or via BitTorrent (recommended) client.","title":"CentOS 6.3 Downloads"},{"location":"centos-6-3-released/#centos-63-dvd-iso-downloads","text":"Choose a CentOS mirror close to you : CentOS 6.3 Mirrors","title":"CentOS 6.3 DVD ISO downloads"},{"location":"centos-6-3-released/#centos-63-dvd-iso-torrents","text":"Torrent files for the DVD\u2019s are available at the following location: Download 32 bit i386 torrent file Download 64 bit x86_64 torrent file","title":"CentOS 6.3 DVD ISO Torrents"},{"location":"centos-6-3-released/#upgrading-from-centos-60-61-or-62","text":"Unless you have edited your yum configs, a \u2018yum update\u2019 should move your machine seamlessly from any previous CentOS-6.x release to CentOS-6.3","title":"Upgrading from CentOS-6.0 / 6.1 or 6.2"},{"location":"centos-6-channel-bonding/","text":"CentOS 6 Channel Bonding allows administrators to bind multiple network interfaces together into a single channel using the bonding kernel module and a special network interface called a channel bonding interface. Channel bonding enables two or more network interfaces to act as one, simultaneously increasing the bandwidth and providing redundancy. CentOS 6 Channel Bonding Channel bonding (also known as \u201cEthernet bonding\u201d) is a computer networking arrangement in which two or more network interfaces on a host computer are combined for redundancy or increased throughput. mode=0 (Balance-rr) \u2013 This mode provides load balancing and fault tolerance. mode=1 (active-backup) \u2013 This mode provides fault tolerance. mode=2 (balance-xor) \u2013 This mode provides load balancing and fault tolerance. mode=3 (broadcast) \u2013 This mode provides fault tolerance. mode=4 (802.3ad) \u2013 This mode provides load balancing and fault tolerance. mode=5 (balance-tlb) \u2013 Prerequisite: Ethtool support in the base drivers for retrieving the speed of each slave. mode=6 (balance-alb) \u2013 Prerequisite: Ethtool support in the base drivers for retrieving the speed of each slave. Note: Always append extra configuration in case of a rollback. Configuring Channel Bonding # cd /etc/sysconfig/network-scripts/ # vi ifcfg-bond0 We\u2019ll be using mode=6 (balance-alb) DEVICE=bond0 USERCTL=no BOOTPROTO=none ONBOOT=yes IPADDR=10.0.0.10 NETMASK=255.255.0.0 NETWORK=10.0.0.0 BONDING_OPTS=\"miimon=100 mode=balance-alb\" TYPE=Unknown IPV6INIT=no # vi ifcfg-eth0 DEVICE=eth0 BOOTPROTO=none ONBOOT=yes MASTER=bond0 SLAVE=yes USERCTL=no # vi ifcfg-eth1 DEVICE=eth1 BOOTPROTO=none ONBOOT=yes MASTER=bond0 SLAVE=yes USERCTL=no # vi ifcfg-eth2 DEVICE=eth2 BOOTPROTO=none ONBOOT=yes MASTER=bond0 SLAVE=yes USERCTL=no Due to the fact that /etc/modprobe.conf has been deprecated in CentOS 6, the process of bonding network interfaces has changed a bit. Now instead of defining your bond in your /etc/modprobe.conf, you define it in /etc/modprobe.d/bonding.conf # vi /etc/modprobe.d/bonding.conf Append the following onto the end out your modprobe config file alias bond0 bonding # service network restart","title":"CentOS 6 Channel Bonding"},{"location":"centos-6-channel-bonding/#centos-6-channel-bonding","text":"Channel bonding (also known as \u201cEthernet bonding\u201d) is a computer networking arrangement in which two or more network interfaces on a host computer are combined for redundancy or increased throughput. mode=0 (Balance-rr) \u2013 This mode provides load balancing and fault tolerance. mode=1 (active-backup) \u2013 This mode provides fault tolerance. mode=2 (balance-xor) \u2013 This mode provides load balancing and fault tolerance. mode=3 (broadcast) \u2013 This mode provides fault tolerance. mode=4 (802.3ad) \u2013 This mode provides load balancing and fault tolerance. mode=5 (balance-tlb) \u2013 Prerequisite: Ethtool support in the base drivers for retrieving the speed of each slave. mode=6 (balance-alb) \u2013 Prerequisite: Ethtool support in the base drivers for retrieving the speed of each slave. Note: Always append extra configuration in case of a rollback.","title":"CentOS 6 Channel Bonding"},{"location":"centos-6-channel-bonding/#configuring-channel-bonding","text":"# cd /etc/sysconfig/network-scripts/ # vi ifcfg-bond0 We\u2019ll be using mode=6 (balance-alb) DEVICE=bond0 USERCTL=no BOOTPROTO=none ONBOOT=yes IPADDR=10.0.0.10 NETMASK=255.255.0.0 NETWORK=10.0.0.0 BONDING_OPTS=\"miimon=100 mode=balance-alb\" TYPE=Unknown IPV6INIT=no # vi ifcfg-eth0 DEVICE=eth0 BOOTPROTO=none ONBOOT=yes MASTER=bond0 SLAVE=yes USERCTL=no # vi ifcfg-eth1 DEVICE=eth1 BOOTPROTO=none ONBOOT=yes MASTER=bond0 SLAVE=yes USERCTL=no # vi ifcfg-eth2 DEVICE=eth2 BOOTPROTO=none ONBOOT=yes MASTER=bond0 SLAVE=yes USERCTL=no Due to the fact that /etc/modprobe.conf has been deprecated in CentOS 6, the process of bonding network interfaces has changed a bit. Now instead of defining your bond in your /etc/modprobe.conf, you define it in /etc/modprobe.d/bonding.conf # vi /etc/modprobe.d/bonding.conf Append the following onto the end out your modprobe config file alias bond0 bonding # service network restart","title":"Configuring Channel Bonding"},{"location":"centos-6-ntp-server/","text":"It is important for systems administrators to make sure that mission-critical servers are always using the correct system time. The ntpd (Network Time Protocol daemon) program is an operating system daemon which sets and maintains the system time of day in synchronism with Internet standard time servers. Make sure that the time zone configuration of your computer is correct. ntpd itself does not do anything about the time zones, it just uses UTC internally. Install Network Time Protocol (NTP) daemon # yum install ntp Add NTP daemon to startup # chkconfig ntpd on Edit the NTPD config file Here you can either use the default NTP public servers or add servers closer to your region. Visit http://www.pool.ntp.org/en/ and either considder joining or getting your regional NTP pool servers # vi /etc/ntp.conf # Use public servers from the pool.ntp.org project. # Please consider joining the pool (http://www.pool.ntp.org/join.html). server 0.centos.pool.ntp.org server 1.centos.pool.ntp.org server 2.centos.pool.ntp.org Start the NTP daemon # service ntpd start Standard NTP query program (ntpq) Print a list of the peers known to the server as well as a summary of their state. # ntpq -p remote refid st t when poll reach delay offset jitter ============================================================================== *javanese.kjsl.c 69.36.224.15 2 u 108 128 377 1.401 3.392 4.779 +66-191-139-149. 132.163.4.101 2 u 70 128 377 46.044 11.205 5.378 +ntp.sunflower.c 132.236.56.250 3 u 85 128 377 50.962 -2.129 14.112 Managing NTPd with Puppet If you\u2019re running Puppet we have included the manifest for installing Varnish on CentOS 6. If you\u2019re not running Puppet then you can install it by following the instructions outlined in our CentOS 6 Puppet Install . This is only the manifest and doesn\u2019t include any of the files (i.e. ntp.conf). class ntpd::install { $packagelist = [\"ntp\"] package { $packagelist: ensure => installed } } class ntpd::service { service { \"ntpd\": ensure => true, enable => true, hasrestart => true, hasstatus => true, require => Class [\"ntpd::install\"] } } class ntpd::conf { File { require => Class [\"ntpd::install\"], owner => \"root\", group => \"root\", mode => 644, notify => Class [\"ntpd::service\"] } file { \"/etc/ntp.conf\": source => \"puppet:///modules/ntpd/ntp.conf\" } } class ntpd { include ntpd::install, ntpd::service, ntpd::conf }","title":"CentOS 6 NTP Server"},{"location":"centos-6-ntp-server/#install-network-time-protocol-ntp-daemon","text":"# yum install ntp","title":"Install Network Time Protocol (NTP) daemon"},{"location":"centos-6-ntp-server/#add-ntp-daemon-to-startup","text":"# chkconfig ntpd on","title":"Add NTP daemon to startup"},{"location":"centos-6-ntp-server/#edit-the-ntpd-config-file","text":"Here you can either use the default NTP public servers or add servers closer to your region. Visit http://www.pool.ntp.org/en/ and either considder joining or getting your regional NTP pool servers # vi /etc/ntp.conf # Use public servers from the pool.ntp.org project. # Please consider joining the pool (http://www.pool.ntp.org/join.html). server 0.centos.pool.ntp.org server 1.centos.pool.ntp.org server 2.centos.pool.ntp.org","title":"Edit the NTPD config file"},{"location":"centos-6-ntp-server/#start-the-ntp-daemon","text":"# service ntpd start","title":"Start the NTP daemon"},{"location":"centos-6-ntp-server/#standard-ntp-query-program-ntpq","text":"Print a list of the peers known to the server as well as a summary of their state. # ntpq -p remote refid st t when poll reach delay offset jitter ============================================================================== *javanese.kjsl.c 69.36.224.15 2 u 108 128 377 1.401 3.392 4.779 +66-191-139-149. 132.163.4.101 2 u 70 128 377 46.044 11.205 5.378 +ntp.sunflower.c 132.236.56.250 3 u 85 128 377 50.962 -2.129 14.112","title":"Standard NTP query program (ntpq)"},{"location":"centos-6-ntp-server/#managing-ntpd-with-puppet","text":"If you\u2019re running Puppet we have included the manifest for installing Varnish on CentOS 6. If you\u2019re not running Puppet then you can install it by following the instructions outlined in our CentOS 6 Puppet Install . This is only the manifest and doesn\u2019t include any of the files (i.e. ntp.conf). class ntpd::install { $packagelist = [\"ntp\"] package { $packagelist: ensure => installed } } class ntpd::service { service { \"ntpd\": ensure => true, enable => true, hasrestart => true, hasstatus => true, require => Class [\"ntpd::install\"] } } class ntpd::conf { File { require => Class [\"ntpd::install\"], owner => \"root\", group => \"root\", mode => 644, notify => Class [\"ntpd::service\"] } file { \"/etc/ntp.conf\": source => \"puppet:///modules/ntpd/ntp.conf\" } } class ntpd { include ntpd::install, ntpd::service, ntpd::conf }","title":"Managing NTPd with Puppet"},{"location":"centos-6-puppet-install/","text":"In this tutorial we\u2019ll be covering the very basics of installing and configuring Puppet. Puppet is a system for automating system administration tasks. Its automation saves you countless hours of frustration, monotony and reinventing the wheel. It lets you perform administrative task from a central systems to any number of systems running any variant of operating system. For a more complete description visit Puppet Labs. Installing the Puppet CentOS 6 packages Install the Puppet Repository # rpm -ivh http://yum.puppetlabs.com/el/6/products/i386/puppetlabs-release-6-7.noarch.rpm Install the EPEL x86_64 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm Install the Puppet Master packages # yum install puppet-server Install the Puppet Client packages # yum install puppet A Simple Manifest: Managing Ownership of a File Step 1: Create a minimal manifest file called site.pp in /etc/puppet/manifests with the following content: # vi /etc/puppet/manifests/site.pp # /etc/puppet/manifests/site.pp import \"classes/*\" node default { include sudo } Step 2: Next create the sudo.pp class in /etc/puppet/manifests/classes/ with the following content: # vi /etc/puppet/manifests/classes/sudo.pp # /etc/puppet/manifests/classes/sudo.pp class sudo { file { \"/etc/sudoers\": owner => \"root\", group => \"root\", mode => 440, } } This class which will ensure that the owner, group, and mode of the /etc/sudoers file will be set consistently across all systems that belong to that class. Step 3: Start the Puppet Master service and enable startup on boot # service puppetmaster start # chkconfig puppetmaster on Configuring Puppet Configure the puppet client to connect to the server and enable logging. Edit the file /etc/sysconfig/puppet and uncomment the PUPPET_LOG and PUPPET_SERVER line specifying the servers address. # vi /etc/sysconfig/puppet # The puppetmaster server PUPPET_SERVER=PuppetMaster # If you wish to specify the port to connect to do so here #PUPPET_PORT=8140 # Where to log to. Specify syslog to send log messages to the system log. PUPPET_LOG=/var/log/puppet/puppet.log # You may specify other parameters to the puppet client here #PUPPET_EXTRA_OPTS=--waitforcert=500 The client will automatically pull configuration from the server every 30 minutes, start it as a service and enable startup on boot # service puppet start # chkconfig puppet on Sign the SSL key request from the Puppet Client In order for the two systems to communicate securely we need to create signed SSL certificates. You should be logged into both the Puppet Master and Puppet machines for this next step. # puppetca --list server2.example.co.za # puppetca --sign server2.example.co.za Signed server2.example.co.za +George Rushby","title":"CentOS 6 Puppet Install"},{"location":"centos-6-puppet-install/#installing-the-puppet-centos-6-packages","text":"","title":"Installing the Puppet CentOS 6 packages"},{"location":"centos-6-puppet-install/#install-the-puppet-repository","text":"# rpm -ivh http://yum.puppetlabs.com/el/6/products/i386/puppetlabs-release-6-7.noarch.rpm","title":"Install the Puppet Repository"},{"location":"centos-6-puppet-install/#install-the-epel-x86_64-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm","title":"Install the EPEL x86_64 YUM Repository"},{"location":"centos-6-puppet-install/#install-the-puppet-master-packages","text":"# yum install puppet-server","title":"Install the Puppet Master packages"},{"location":"centos-6-puppet-install/#install-the-puppet-client-packages","text":"# yum install puppet","title":"Install the Puppet Client packages"},{"location":"centos-6-puppet-install/#a-simple-manifest-managing-ownership-of-a-file","text":"Step 1: Create a minimal manifest file called site.pp in /etc/puppet/manifests with the following content: # vi /etc/puppet/manifests/site.pp # /etc/puppet/manifests/site.pp import \"classes/*\" node default { include sudo } Step 2: Next create the sudo.pp class in /etc/puppet/manifests/classes/ with the following content: # vi /etc/puppet/manifests/classes/sudo.pp # /etc/puppet/manifests/classes/sudo.pp class sudo { file { \"/etc/sudoers\": owner => \"root\", group => \"root\", mode => 440, } } This class which will ensure that the owner, group, and mode of the /etc/sudoers file will be set consistently across all systems that belong to that class. Step 3: Start the Puppet Master service and enable startup on boot # service puppetmaster start # chkconfig puppetmaster on","title":"A Simple Manifest: Managing Ownership of a File"},{"location":"centos-6-puppet-install/#configuring-puppet","text":"Configure the puppet client to connect to the server and enable logging. Edit the file /etc/sysconfig/puppet and uncomment the PUPPET_LOG and PUPPET_SERVER line specifying the servers address. # vi /etc/sysconfig/puppet # The puppetmaster server PUPPET_SERVER=PuppetMaster # If you wish to specify the port to connect to do so here #PUPPET_PORT=8140 # Where to log to. Specify syslog to send log messages to the system log. PUPPET_LOG=/var/log/puppet/puppet.log # You may specify other parameters to the puppet client here #PUPPET_EXTRA_OPTS=--waitforcert=500 The client will automatically pull configuration from the server every 30 minutes, start it as a service and enable startup on boot # service puppet start # chkconfig puppet on","title":"Configuring Puppet"},{"location":"centos-6-puppet-install/#sign-the-ssl-key-request-from-the-puppet-client","text":"In order for the two systems to communicate securely we need to create signed SSL certificates. You should be logged into both the Puppet Master and Puppet machines for this next step. # puppetca --list server2.example.co.za # puppetca --sign server2.example.co.za Signed server2.example.co.za +George Rushby","title":"Sign the SSL key request from the Puppet Client"},{"location":"centos-6-release-date/","text":"UPDATE 10 July 2011: CentOS 6 released UPDATE 04 July 2011: According to http://qaweb.dev.centos.org/qa/calendar CentOS 6 release date will be on the 05 July 2011 UPDATE 22 June 2011: According to http://qaweb.dev.centos.org/qa/calendar CentOS 6 release date will be on the 27th June 2011.","title":"CentOS 6 release date?"},{"location":"centos-6-released/","text":"CentOS 6 has been released. This is, some might say, the most anticipated release to date with CentOS pushing out the date numerous times. Finally CentOS 6, an Enterprise-class Linux Distribution, is available for download to the public. NB CentOS 6 Downloads are no longer available Download CentOS 6.2 instead CentOS 6 Downloads You can download CentOS Linux 6 via the web/ftp server or via BitTorrent (recommended) client. CentOS 6 DVD ISO downloads Download CentOS 6 32 bit i386 DVD ISO image 1 (4.4 GB) Download CentOS 6 64 bit x86_64 DVD ISO image 1 (3.9 GB) and image 2 (1.1GB) CentOS 6 DVD ISO Torrents Torrent files for the DVD\u2019s are available at the following location: Download 32 bit i386 torrent file Download 64 bit x86_64 torrent file","title":"CentOS 6 Released"},{"location":"centos-6-released/#centos-6-downloads","text":"You can download CentOS Linux 6 via the web/ftp server or via BitTorrent (recommended) client.","title":"CentOS 6 Downloads"},{"location":"centos-6-released/#centos-6-dvd-iso-downloads","text":"Download CentOS 6 32 bit i386 DVD ISO image 1 (4.4 GB) Download CentOS 6 64 bit x86_64 DVD ISO image 1 (3.9 GB) and image 2 (1.1GB)","title":"CentOS 6 DVD ISO downloads"},{"location":"centos-6-released/#centos-6-dvd-iso-torrents","text":"Torrent files for the DVD\u2019s are available at the following location: Download 32 bit i386 torrent file Download 64 bit x86_64 torrent file","title":"CentOS 6 DVD ISO Torrents"},{"location":"centos-6-webmin-install/","text":"This brief yet effective tutorial will instruct you on how to install Webmin , a web-based interface for system administration for Linux, on CentOS 6 The assumption for this Webmin, CentOS 6 tutorial is that you are running as root and have a basic understanding of the software required but if you follow this tutorial you should be able to complete the task successfully. Learn more about Webmin: http://www.webmin.com/ Install the Webmin YUM Repository # cat > /etc/yum.repos.d/webmin.repo << EOF [Webmin] name=Webmin Distribution Neutral #baseurl=http://download.webmin.com/download/yum mirrorlist=http://download.webmin.com/download/yum/mirrorlist enabled=1 EOF Add the GPG Key and Install Webmin # rpm --import http://www.webmin.com/jcameron-key.asc # yum install webmin or if you prefer using an editor # vi /etc/yum.repos.d/webmin.repo [Webmin] name=Webmin Distribution Neutral #baseurl=http://download.webmin.com/download/yum mirrorlist=http://download.webmin.com/download/yum/mirrorlist enabled=1 Installing Webmin, CentOS 6 # yum install webmin Finally browse to your machine on port 10000 http://centos01.how2centos.com:10000","title":"Webmin CentOS 6 Install"},{"location":"centos-6-webmin-install/#install-the-webmin-yum-repository","text":"# cat > /etc/yum.repos.d/webmin.repo << EOF [Webmin] name=Webmin Distribution Neutral #baseurl=http://download.webmin.com/download/yum mirrorlist=http://download.webmin.com/download/yum/mirrorlist enabled=1 EOF","title":"Install the Webmin YUM Repository"},{"location":"centos-6-webmin-install/#add-the-gpg-key-and-install-webmin","text":"# rpm --import http://www.webmin.com/jcameron-key.asc # yum install webmin or if you prefer using an editor # vi /etc/yum.repos.d/webmin.repo [Webmin] name=Webmin Distribution Neutral #baseurl=http://download.webmin.com/download/yum mirrorlist=http://download.webmin.com/download/yum/mirrorlist enabled=1","title":"Add the GPG Key and Install Webmin"},{"location":"centos-6-webmin-install/#installing-webmin-centos-6","text":"# yum install webmin Finally browse to your machine on port 10000 http://centos01.how2centos.com:10000","title":"Installing Webmin, CentOS 6"},{"location":"centos-announce-release-centos-6-5-i386-x86_64/","text":"Message from Karanbir Singh on the CentOS lists \u2014\u2013 Karanbir Singh < kbsingh at centos.org > The CentOS Project { http://www.centos.org} irc: z00dax at irc.freenode.net ( #centos, #centos-devel ) \u2014\u2013 We are pleased to announce the immediate availability of CentOS-6.5 install media for i386 and x86_64 Architectures. Release Notes for 6.5 are available at http://wiki.centos.org/Manuals/ReleaseNotes/CentOS6.5 \u2013 we recommend everyone looks through those once. CentOS-6.5 is based on the upstream release EL 6.5 and includes packages from all variants. All upstream repositories have been combined into one, to make it easier for end users to work with. There are many fundamental changes in this release, compared with the past CentOS-6 releases, and we highly recommend everyone stufy the Release Notes as well as the upstream Techical Notes about the changes and how they might impact your installation. All updates released since upstream 6.5 release are also released to the CentOS-6.5 mirrors. Everyone who has centos-cr repositories enabled and in use, would already be running CentOs-6.5 as of one week ago and will notice only the centos-release rpm update today. +++++++++++++++++++++++ Upgrading from CentOS-4 or CentOS-5: We recommend everyone run through a reinstall rather than attempt an inplace upgrade from CentOS-4 or CentOS-5. +++++++++++++++++++++++ Upgrading from CentOS-6.0 / 6.1 / 6.2 / 6.3 or 6.4 Unless you have edited your yum configs, a \u2018yum update\u2019 should move your machine seamlessly from any previous CentOS-6.x release to CentOS-6.5 +++++++++++++++++++++++ Downloading CentOS-6.5 for new installs: When possible, consider using torrents to run the downloads. Usually its also the fastest means to download the distro. Torrent files for the DVD\u2019s are available at : http://mirror.centos.org/centos/6.5/isos/i386/CentOS-6.5-i386-bin-DVD1to2.torrent http://mirror.centos.org/centos/6.5/isos/x86_64/CentOS-6.5-x86_64-bin-DVD1to2.torrent You can also use a mirror close to you : http://www.centos.org/modules/tinycontent/index.php?id=30 Most mirrors will allow direct DVD downloads over http, ftp and rsync. Please keep in mind that not all mirrors are currently updated, some might take upto another 24 hours before they have all the content. We have also made efforts to try and ensure that most install types and roles can be run from DVD-1 itself. +++++++++++++++++++++++ sha1sum for the CentOS-6.5 ISOS: i386: 67ea68068ae53d1f23431072ec0288b3e1abfe4d CentOS-6.5-i386-bin-DVD1.iso 70fe3b01ce8133fa7e6e7dbfcb9f1acdb1e9981f CentOS-6.5-i386-bin-DVD2.iso 3cf41ef12362ad363ff0650c703d3d045bcbfa7a CentOS-6.5-i386-LiveCD.iso 73d6444e2576e1169035d2444f872ff622ed85b6 CentOS-6.5-i386-LiveDVD.iso 4f900bba81d0e3c5cc5354a94984ed2fa03d4061 CentOS-6.5-i386-minimal.iso e2e637dfbb08c04a478362733ee906ba9485771d CentOS-6.5-i386-netinstall.iso x86_64: 32c7695b97f7dcd1f59a77a71f64f2957dddf738 CentOS-6.5-x86_64-bin-DVD1.iso 25e5de362ba6c75d793dbeb060b27ba1865cb5df CentOS-6.5-x86_64-bin-DVD2.iso 690ccc84926a46152543a3cad57d983c9004638d CentOS-6.5-x86_64-LiveCD.iso 3ac5eb9a6dcbf5f2b4cfd2432cccd84cd722840d CentOS-6.5-x86_64-LiveDVD.iso f21a71e8e31df73297bdd1ccd4a64a36831284bd CentOS-6.5-x86_64-minimal.iso 3a9662cb65f9d59677d76acfdb73289da43b4599 CentOS-6.5-x86_64-netinstall.iso +++++++++++++++++++++++ LiveCD and LiveDVD LiveCD and LiveDVD media is also released into the ISOS/ directory. You can download these from either a mirror close to you or the torrents listed here : http://mirror.centos.org/centos/6.5/isos/i386/CentOS-6.5-i386-LiveCD.torrent http://mirror.centos.org/centos/6.5/isos/i386/CentOS-6.5-i386-LiveDVD.torrent http://mirror.centos.org/centos/6.5/isos/x86_64/CentOS-6.5-x86_64-LiveCD.torrent http://mirror.centos.org/centos/6.5/isos/x86_64/CentOS-6.5-x86_64-LiveDVD.torrent +++++++++++++++++++++++ Cloud Images Images for various on-preimse and off-premise Cloud environments are currently under development for CentOS-6.5 and will be released in the coming days. Everyone looking to join and help with the CentOS Cloud efforts is encouraged to join the CentOS-Virt list where such issues are discussed ( http://lists.centos.org/mailman/listinfo/centos-virt ). +++++++++++++++++++++++ Getting Help: The best place to start when looking for help with CentOS is at the wiki ( http://wiki.centos.org/GettingHelp ) which lists various options and communities who might be able to help. If you think there is a bug in the system, do report it at http://bugs.centos.org/ \u2013 but keep in mind that the bugs system is *not* a support mechanism. +++++++++++++++++++++++ Metups and training sessions The next CentOS Dojo is going to take place at Austin, TX, USA on the 6th December 2013. Details on the day, venue and registration are available at http://wiki.centos.org/Events/Dojo/Austin2013 As 2014 comes up, we\u2019ve started planning for the Dojo Schedules for the next year. If you would like to get involved in helping organising, running, presenting or sponsoring a Dojo or even just want more detail do get in touch with us at the CentOS Promo list ( http://lists.centos.org/mailman/listinfo/centos-promo ) +++++++++++++++++++++++ Contributing and joining the project: We are always looking for people to join and help with various things in the project. If you are keen to help out a good place to start is the wiki page at http://wiki.centos.org/Contribute . If you have questions or a specific area you would like to contribute towards that is not covered on that page, feel free to drop in on # centos-devel at irc.freenode.net for a chat or email the centos-devel list ( http://lists.centos.org ). +++++++++++++++++++++++ Thanks to everyone who contributed towards making CentOS 6.5, specially the effort put in, as always, by the QA and Build team. A special shout out to all the donors who have contributed hardware, network connectivity, hosting and resources over the years. The CentOS project now has a fairly well setup resource pool, purely thanks to the donors. Enjoy! \u2013 \u2014 Karanbir Singh < kbsingh at centos.org > The CentOS Project { http://www.centos.org} irc: z00dax at irc.freenode.net ( #centos, #centos-devel )","title":"[CentOS-announce] Release for CentOS-6.5 i386 and x86_64"},{"location":"centos-change-timezone/","text":"After installing CentOS we sometimes see that the date is not in our desired timezone, instead it defaulted to the PST timezone. Correcting your timezone is an easy operation, so here is a quick guide to change your CentOS timezone configuration file. Firstly you\u2019ll need to know your timezone and/or country, a list can be found in /usr/share/zoneinfo/ The more generic procedure to change the timezone is to create a symlink to file /etc/localtime # ln -sf /usr/share/zoneinfo/Africa/Johannesburg /etc/localtime OR you can copy and replace the current localtime setting # cp /usr/share/zoneinfo/Africa/Johannesburg /etc/localtime To verify that your timezone is changed use the date command: # date","title":"CentOS Change Timezone"},{"location":"centos-configure-network/","text":"This tutorial is intended for system administrators wanting to either change the IP address or add additional LAN cards (NIC) on their CentOS 5 system. There are a couple of ways to configure the network card using the command line but only some commands will take immediate effect on kernel. If you are doing this remotely remember that you will lose connectivity or if your configuration on your network is incorrect be unable to connect. Configure network with immediate effect Using a single command line to configure the network # ifconfig eth0 192.168.0.10 netmask 255.255.255.0 [or] # ip addr add 192.168.0.10 dev eth0 Configure network with setup or netconfig If you are using netconfig (or) setup utility it will only overwrite the /etc/sysconfig/network-scripts/ifcfg-eth0 file. Then , after that u have to restart the network service like follow, # setup Network configuration -> Edit Devices -> eth0 (eth0) \u2013 Intel Corporation 82540EM Gigabit Ethernet Controller Save your settings and quit [or] # system-config-network Edit Devices -> eth0 (eth0) \u2013 Intel Corporation 82540EM Gigabit Ethernet Controller Save your settings and quit Restart your network in order for your configuration to take effect. # /etc/init.d/network restart Configure network by editing configuration Lastly you can configure the network by editing the configuration files stored in the /etc/sysconfig/network-scripts/ directory. # cd /etc/sysconfig/network-scripts/ # vi ifcfg-eth0 Append/modify as follows: # Intel Corporation 82540EM Gigabit Ethernet Controller DEVICE=eth0 BOOTPROTO=none ONBOOT=yes HWADDR=06:01:78:a7:00:33 NETMASK=255.255.255.0 IPADDR=192.168.0.10 TYPE=Ethernet Save and close the file. Define default gateway and hostname in /etc/sysconfig/network configuration file # vi /etc/sysconfig/network Append/modify configuration as follows: NETWORKING=yes NETWORKING_IPV6=no HOSTNAME=centos.how2centos.com GATEWAY=192.168.0.1 Save and close the file. Restart networking: # /etc/init.d/network restart","title":"CentOS: Configure network"},{"location":"centos-configure-network/#configure-network-with-immediate-effect","text":"Using a single command line to configure the network # ifconfig eth0 192.168.0.10 netmask 255.255.255.0 [or] # ip addr add 192.168.0.10 dev eth0","title":"Configure network with immediate effect"},{"location":"centos-configure-network/#configure-network-with-setup-or-netconfig","text":"If you are using netconfig (or) setup utility it will only overwrite the /etc/sysconfig/network-scripts/ifcfg-eth0 file. Then , after that u have to restart the network service like follow, # setup Network configuration -> Edit Devices -> eth0 (eth0) \u2013 Intel Corporation 82540EM Gigabit Ethernet Controller Save your settings and quit [or] # system-config-network Edit Devices -> eth0 (eth0) \u2013 Intel Corporation 82540EM Gigabit Ethernet Controller Save your settings and quit Restart your network in order for your configuration to take effect. # /etc/init.d/network restart","title":"Configure network with setup or netconfig"},{"location":"centos-configure-network/#configure-network-by-editing-configuration","text":"Lastly you can configure the network by editing the configuration files stored in the /etc/sysconfig/network-scripts/ directory. # cd /etc/sysconfig/network-scripts/ # vi ifcfg-eth0 Append/modify as follows: # Intel Corporation 82540EM Gigabit Ethernet Controller DEVICE=eth0 BOOTPROTO=none ONBOOT=yes HWADDR=06:01:78:a7:00:33 NETMASK=255.255.255.0 IPADDR=192.168.0.10 TYPE=Ethernet Save and close the file. Define default gateway and hostname in /etc/sysconfig/network configuration file # vi /etc/sysconfig/network Append/modify configuration as follows: NETWORKING=yes NETWORKING_IPV6=no HOSTNAME=centos.how2centos.com GATEWAY=192.168.0.1 Save and close the file. Restart networking: # /etc/init.d/network restart","title":"Configure network by editing configuration"},{"location":"centos-lvm-resizing-guide/","text":"Since the release of CentOS 5.5 we noticed that the default CentOS install assigns a considerable amount of its available storage space to Swap. If you don\u2019t catch this during the installation don\u2019t worry, Logical Volume Manager or LVM will rectify this post install. LVM is a logical volume manager for the Linux kernel; it manages disk drives and similar mass-storage devices, in particular large ones. The term \u201cvolume\u201d refers to a disk drive or partition thereof. Before we start just some general housekeeping. The XEN virtual CentOS 5.5 server (base install) in this tutorial was assigned 10GB of storage with the default partitioning layout. Let check the amount of disk space available on the file system. # df -h Filesystem Size Used Avail Use% Mounted on /dev/mapper/VolGroup00-LogVol00 4.9G 2.4G 2.3G 51% / /dev/xvda1 99M 23M 72M 25% /boot tmpfs 4.0G 0 4.0G 0% /dev/shm Let see the attributes of the logical volumes like size, read/write status, snapshot information # lvdisplay --- Logical volume --- LV Name /dev/VolGroup00/LogVol00 VG Name VolGroup00 LV UUID oFXKGg-nBPo-Fk27-3ino-zaHZ-cEcv-fk0dS0 LV Write Access read/write LV Status available # open 1 LV Size 5.00 GB Current LE 160 Segments 1 Allocation inherit Read ahead sectors auto - currently set to 256 Block device 253:0 --- Logical volume --- LV Name /dev/VolGroup00/LogVol01 VG Name VolGroup00 LV UUID Ntffw7-dqPh-Rjhy-rWLv-BGA0-iGik-LoyHET LV Write Access read/write LV Status available # open 1 LV Size 4.88 GB Current LE 156 Segments 1 Allocation inherit Read ahead sectors auto - currently set to 256 Block device 253:1 Let\u2019s begin but first turning off swap on the Swap Logical Volume # swapoff /dev/VolGroup00/LogVol01 Once swap is off let\u2019s take the disk space we require. # lvresize -L -4GB /dev/VolGroup00/LogVol01 WARNING: Reducing active logical volume to 896.00 MB THIS MAY DESTROY YOUR DATA (filesystem etc.) Do you really want to reduce LogVol01? [y/n]: y Reducing logical volume LogVol01 to 896.00 MB Logical volume LogVol01 successfully resized Now let\u2019s add what we removed to the main Logical Volume. # lvresize -L +4GB /dev/VolGroup00/LogVol00 Extending logical volume LogVol00 to 9.00 GB Logical volume LogVol00 successfully resized Resize the File System # resize2fs -p /dev/VolGroup00/LogVol00 resize2fs 1.39 (29-May-2006) Filesystem at /dev/VolGroup00/LogVol00 is mounted on /; on-line resizing required Performing an on-line resize of /dev/VolGroup00/LogVol00 to 2359296 (4k) blocks. The filesystem on /dev/VolGroup00/LogVol00 is now 2359296 blocks long. Rebuild the swap partition. # mkswap /dev/VolGroup00/LogVol01 Setting up swapspace version 1, size = 939520 kB Turn swap on. # swapon /dev/VolGroup00/LogVol01 Let\u2019s check the amount of disk space available and LVM attributes to see if our changes took effect. # df -h Filesystem Size Used Avail Use% Mounted on /dev/mapper/VolGroup00-LogVol00 8.8G 2.4G 6.0G 28% / /dev/xvda1 99M 23M 72M 25% /boot tmpfs 4.0G 0 4.0G 0% /dev/shm # lvdisplay --- Logical volume --- LV Name /dev/VolGroup00/LogVol00 VG Name VolGroup00 LV UUID oFXKGg-nBPo-Fk27-3ino-zaHZ-cEcv-fk0dS0 LV Write Access read/write LV Status available # open 1 LV Size 9.00 GB Current LE 288 Segments 2 Allocation inherit Read ahead sectors auto - currently set to 256 Block device 253:0 --- Logical volume --- LV Name /dev/VolGroup00/LogVol01 VG Name VolGroup00 LV UUID Ntffw7-dqPh-Rjhy-rWLv-BGA0-iGik-LoyHET LV Write Access read/write LV Status available # open 1 LV Size 896.00 MB Current LE 28 Segments 1 Allocation inherit Read ahead sectors auto - currently set to 256 Block device 253:1","title":"CentOS LVM Resize"},{"location":"centos-the-most-popular-linux-distribution-for-web-servers/","text":"It\u2019s a great day for CentOS and its community because, according to Web Technology Surveys , in July 2010, \u201cFor the first time, CentOS is now leading the Linux distribution statistics on web servers with almost 30% of all Linux servers.\u201d Read more at W3Techs","title":"CentOS: The most popular Linux distribution for web servers"},{"location":"centos-warning-rpmdb-altered-outside-of-yum/","text":"Yum is an automatic updater and package installer/remover for rpm-based systems. It automatically computes dependencies and figures out what things should occur in order to safely install, remove, and update rpm packages. Yum also efficiently and easily retrieves information on any package installed or available in a repository to the installer. When trying to update your server via the yum command you might see the following error / warning message: Warning: RPMDB altered outside of yum. # yum install nethogs Loaded plugins: fastestmirror Loading mirror speeds from cached hostfile * base: mirror.cogentco.com * epel: mirror.cogentco.com * extras: mirror.vcu.edu * ius: mirror.rackspace.com * updates: centos.aol.com Setting up Install Process Resolving Dependencies --> Running transaction check ---> Package nethogs.x86_64 0:0.8.0-1.el6 set to be updated --> Finished Dependency Resolution Dependencies Resolved ==================================================================== Package Arch Version Repository Size ==================================================================== Installing: nethogs x86_64 0.8.0-1.el6 epel 28 k Transaction Summary ==================================================================== Install 1 Package(s) Upgrade 0 Package(s) Total download size: 28 k Installed size: 53 k Is this ok [y/N]: y Downloading Packages: nethogs-0.8.0-1.el6.x86_64.rpm | 28 kB 00:00 Running rpm_check_debug Running Transaction Test Transaction Test Succeeded Running Transaction Warning: RPMDB altered outside of yum. Installing : nethogs-0.8.0-1.el6.x86_64 1/1 Installed: nethogs.x86_64 0:0.8.0-1.el6 Complete! How do you fix this problem? # yum clean all +George Rushby","title":"CentOS Warning: RPMDB altered outside of yum"},{"location":"create-fedora-13-local-yum-repository/","text":"Fedora 13 (Goddard) is out and it\u2019s time to add it to our arsenal of local yum repositories. We all know the importance of creating a local YUM repository on your LAN. Not only do you decrease the time it takes to download and install updates, you also decrease bandwidth usage. Fedora 13 (Goddard) release notes This How To will show you a simple yet effective way to create your local Fedora 13 YUM repository and client. TIP: Distribute your Fedora YUM configuration via your Puppet Master Preliminary Note: I am using two Fedora 13 installations in this tutorial with server1.example.co.za configured with Apache httpd server1.example.co.za (IP 10.0.0.100): Fedora 13 YUM Repository and httpd server server2.example.co.za (IP 10.0.0.102): Fedora 13 YUM client Configure Fedora YUM repo and httpd server as follows: Create the following Directories: # mkdir -p /var/www/html/fedora/13/os/i386 # mkdir -p /var/www/html/fedora/13/os/x86_64 Create a bash script that will rsync your local YUM Repository server with your local YUM mirror (Make sure the mirror supports rsync). Fedora Mirror list \u2013 http://mirrors.fedoraproject.org/publiclist # vi fedora-repo-update.sh #!/bin/sh # This script will create a local Fedora 13 mirror via Rsync # Note: This script will download Fedora 13 # rsync=\"rsync -avrt --bwlimit=256\" mirror=mirrors.kernel.org::mirrors/fedora verlist=\"13\" archlist=\"i386 x86_64\" baselist=\"os\" local=/var/www/html/fedora/ for ver in $verlist do for arch in $archlist do for base in $baselist do remote=$mirror/releases/$ver/Fedora/$arch/$base/ $rsync $remote $local/$ver/$base/$arch/ done done done # chmod 755 fedora-repo-update.sh Add the bash script to your crontab to update your local repository every night (01H00 in this case) # crontab -e # minute (0-59), # | hour (0-23), # | | day of the month (1-31), # | | | month of the year (1-12), # | | | | day of the week (0-6 with 0=Sunday). # | | | | | commands # -----------[ cron jobs ]------------ # # Update Local YUM repo update from fedora.mirror.facebook.net 0 1 * * * /path/to/fedora-repo-update.sh Configure Fedora YUM client servers as follows: Rename all existing yum repositories from *.repo to *.old # vi /etc/yum.repos.d/localFedora.repo [base] name=Fedora $releasever - $basearch failovermethod=priority baseurl=http://server1.example.co.za/fedora/$releasever/$basearch/os/ enabled=1 gpgcheck=0 Test your setup by running a yum update on your client machine. # yum update Loading \"fastestmirror\" plugin Loading mirror speeds from cached hostfile * update: server1.example.co.za * base: server1.example.co.za","title":"Create Fedora 13 local Yum Repository"},{"location":"creating-a-local-fedora-11-yum-repository/","text":"We all know the importance of creating a local YUM repository on your LAN. Not only do you decrease the time it takes to download and install updates, you also decrease bandwidth usage. This How To will show you a simple yet effective way of setting up your local Fedora YUM server and client. TIP: Distribute your Fedora YUM configuration via your Puppet Master Preliminary Note: I\u00e2\u20ac\u2122m using two Fedora 11 installations in this tutorial with server1.example.co.za configured with Apache httpd server1.example.co.za (IP 10.0.0.100): Fedora YUM Repo and httpd server server2.example.co.za (IP 10.0.0.102): Fedora YUM client Configure Fedora YUM repo and httpd server as follows: Create the following Directories: # mkdir -p /var/www/html/fedora/11/os/i386 # mkdir -p /var/www/html/fedora/11/os/x86_64 Create a bash script that will rsync your local YUM Repo server with your local YUM mirror (Make sure the mirror supports rsync). Fedora Mirror list \u2013 http://mirrors.fedoraproject.org/publiclist # vi fedora-repo-update.sh #!/bin/sh rsync=\"rsync -avrt --bwlimit=256\" mirror=mirror.facebook.com::fedora-enchilada/linux verlist=\"11\" archlist=\"i386 x86_64\" baselist=\"os\" local=/var/www/html/fedora/ for ver in $verlist do for arch in $archlist do for base in $baselist do remote=$mirror/releases/$ver/Fedora/$arch/$base/ $rsync $remote $local/$ver/$base/$arch/ done done done # chmod 755 fedora-repo-update.sh Add the bash script to your crontab to update your local repository every night (01H00 in this case) # crontab -e # minute (0-59), # | hour (0-23), # | | day of the month (1-31), # | | | month of the year (1-12), # | | | | day of the week (0-6 with 0=Sunday). # | | | | | commands # -----------[ cron jobs ]------------ # # Update Local YUM repo update from fedora.mirror.facebook.net 0 1 * * * /path/to/fedora-repo-update.sh Configure Fedora YUM client servers as follows: Rename all existing yum repositories from *.repo to *.old # vi /etc/yum.repos.d/localFedora.repo [base] name=Fedora $releasever - $basearch failovermethod=priority baseurl=http://server1.example.co.za/fedora/$releasever/$basearch/os/ enabled=1 gpgcheck=0 Test your setup by running a yum update on your client machine. # yum update Loading \"fastestmirror\" plugin Loading mirror speeds from cached hostfile * update: server1.example.co.za * base: server1.example.co.za","title":"Creating a Local Fedora 11 Yum Repository"},{"location":"creating-a-local-fedora-12-yum-repository/","text":"Fedora 12 has just been released so it\u2019s time to add it to our arsenal of local yum repositories. We all know the importance of creating a local YUM repository on your LAN. Not only do you decrease the time it takes to download and install updates, you also decrease bandwidth usage. This How To will show you a simple yet effective way of setting up your local Fedora 12 YUM repository and client. TIP: Distribute your Fedora YUM configuration via your Puppet Master Preliminary Note: I am using two Fedora 12 installations in this tutorial with server1.example.co.za configured with Apache httpd server1.example.co.za (IP 10.0.0.100): Fedora 12 YUM Repository and httpd server server2.example.co.za (IP 10.0.0.102): Fedora 12 YUM client Configure Fedora YUM repo and httpd server as follows: Create the following Directories: # mkdir -p /var/www/html/fedora/12/os/i386 # mkdir -p /var/www/html/fedora/12/os/x86_64 Create a bash script that will rsync your local YUM Repository server with your local YUM mirror (Make sure the mirror supports rsync). Fedora Mirror list \u2013 http://mirrors.fedoraproject.org/publiclist # vi fedora-repo-update.sh #!/bin/sh rsync=\"rsync -avrt --bwlimit=256\" mirror=mirrors.kernel.org::mirrors/fedora verlist=\"12\" archlist=\"i386 x86_64\" baselist=\"os\" local=/var/www/html/fedora/ for ver in $verlist do for arch in $archlist do for base in $baselist do remote=$mirror/releases/$ver/Fedora/$arch/$base/ $rsync $remote $local/$ver/$base/$arch/ done done done # chmod 755 fedora-repo-update.sh Add the bash script to your crontab to update your local repository every night (01H00 in this case) # crontab -e # minute (0-59), # | hour (0-23), # | | day of the month (1-31), # | | | month of the year (1-12), # | | | | day of the week (0-6 with 0=Sunday). # | | | | | commands # -----------[ cron jobs ]------------ # # Update Local YUM repo update from fedora.mirror.facebook.net 0 1 * * * /path/to/fedora-repo-update.sh Configure Fedora YUM client servers as follows: Rename all existing yum repositories from *.repo to *.old # vi /etc/yum.repos.d/localFedora.repo [base] name=Fedora $releasever - $basearch failovermethod=priority baseurl=http://server1.example.co.za/fedora/$releasever/$basearch/os/ enabled=1 gpgcheck=0 Test your setup by running a yum update on your client machine. # yum update Loading \"fastestmirror\" plugin Loading mirror speeds from cached hostfile * update: server1.example.co.za * base: server1.example.co.za","title":"Creating a Local Fedora 12 Yum Repository"},{"location":"creating-a-local-yum-repository-on-centos-5x/","text":"Reducing the costs of I.T without reducing the functionally of your systems is one of the major obstacles to overcome. One of these costs is bandwidth, especially in South Africa. One of the first bandwidth saving tips any organization should know is the importance of creating a local YUM repository on your LAN. Not only do you decrease the time it takes to download and install updates, you also decrease bandwidth usage. This saving will definitely please the suites of any organization. This How To show\u2019s you a simple yet effective way of setting up your local YUM server and client. TIP: Distribute your YUM configuration via your Puppet Master Preliminary Note: We are using two empty CentOS 5.2 servers in this tutorial: server1.example.co.za (IP 10.0.0.100): YUM Repo server server2.example.co.za (IP 10.0.0.102): YUM client Configure YUM repo server as follows: Create the following Directories: # mkdir -p /var/www/html/centos/5.3/os/i386 # mkdir -p /var/www/html/centos/5.3/updates/i386 # mkdir -p /var/www/html/centos/5.3/os/x86_64 # mkdir -p /var/www/html/centos/5.3/updates/x86_64 # mkdir -p /var/www/html/centos/5.2/os/i386 # mkdir -p /var/www/html/centos/5.2/updates/i386 # mkdir -p /var/www/html/centos/5.2/os/x86_64 # mkdir -p /var/www/html/centos/5.2/updates/x86_64 # mkdir -p /var/www/html/centos/5/os/i386 # mkdir -p /var/www/html/centos/5/updates/i386 # mkdir -p /var/www/html/centos/5/os/x86_64 # mkdir -p /var/www/html/centos/5/updates/x86_64 Create a bash script that will rsync your local YUM Repo server with your local YUM mirror (Internet Solutions \u2013 ftp.is.co.za). CentOS Mirror list \u2013 http://www.centos.org/modules/tinycontent/index.php?id=30 # vi yum-repo-update.sh #!/bin/sh rsync=\"rsync -avrt --bwlimit=256\" mirror=ftp.is.co.za::IS-Mirror/centos verlist=\"5 5.2 5.3\" archlist=\"i386 x86_64\" baselist=\"os updates\" local=/var/www/html/centos/ for ver in $verlist do for arch in $archlist do for base in $baselist do remote=$mirror/$ver/$base/$arch/ $rsync $remote $local/$ver/$base/$arch/ done done done # chmod 755 yum-repo-update.sh Add the bash script to your crontab to update your local repository every night (01H00 in this case) # crontab -e # minute (0-59), # | hour (0-23), # | | day of the month (1-31), # | | | month of the year (1-12), # | | | | day of the week (0-6 with 0=Sunday). # | | | | | commands # -----------[ cron jobs ]------------ # # Update Local YUM repo update from ftp.is.co.za 0 1 * * * /path/to/yum-repo-update.sh Configure YUM client servers as follows: Rename all existing yum repositories from *.repo to *.old # vi /etc/yum.repos.d/localCentOS-Base.repo [base] name=CentOS-$releasever - Base baseurl=http://server1.example.co.za/centos/$releasever/os/$basearch/ gpgcheck=0 [update] name=CentOS-$releasever - Updates baseurl=http://server1.example.co.za/centos/$releasever/updates/$basearch/ gpgcheck=0 [extras] name=CentOS-$releasever - Extras mirrorlist=http://server1.example.co.za/?release=$releasever&arch=$basearch&repo=extras gpgcheck=0 enabled=0 Test your setup by running a yum update on your client machine. # yum update Loading \"fastestmirror\" plugin Loading mirror speeds from cached hostfile * update: server1.example.co.za * base: server1.example.co.za","title":"Creating A Local Yum Repository on CentOS 5.x"},{"location":"dell-and-centos-the-perfect-combination/","text":"A quick post to share this mostly unknown gem that Dell manages it\u2019s own Open Manage Linux Repository. Read more: http://linux.dell.com/wiki/index.php/Repository/OMSA To get your CentOS server installed with Server Administrator set up the Dell Open Manage Repository like so: # wget -q -O - http://linux.dell.com/repo/hardware/latest/bootstrap.cgi | bash Then install the Server Administrator # yum install srvadmin-all Finally browse to your newly installed Open Manage Server Administrator and monitor your Dell hardware. https://your.Centos.Server:1311/ Log on screen \u2013 Use your root username and password Main Screen after log on TIP: After installing the Dell Server Administrator get your service tag number from your CentOS Linux server by running # dmidecode -s system-serial-number ABCDEF1","title":"Dell and CentOS the Perfect Combination"},{"location":"disable-selinux-centos-6/","text":"You need to be aware that by disabling SELinux you will be removing a security mechanism on your CentOS system. Think about this carefully, and if your system is on the Internet and accessed by the public, then think about it some more. Applications should be fixed to work with SELinux, rather than disabling the OS security mechanism. You could even switch to Permissive mode where every operation is allowed. Operations that would be denied are allowed and a message is logged identifying that it would be denied. If you really need to disable SELinux on CentOS 6 please consider the following: # vi /etc/selinux/config Change SELINUX=enforcing # This file controls the state of SELinux on the system. # SELINUX= can take one of these three values: # enforcing - SELinux security policy is enforced. # permissive - SELinux prints warnings instead of enforcing. # disabled - No SELinux policy is loaded. SELINUX=enforcing # SELINUXTYPE= can take one of these two values: # targeted - Targeted processes are protected, # mls - Multi Level Security protection. SELINUXTYPE=targeted to SELINUX=disabled # This file controls the state of SELinux on the system. # SELINUX= can take one of these three values: # enforcing - SELinux security policy is enforced. # permissive - SELinux prints warnings instead of enforcing. # disabled - SELinux is fully disabled. SELINUX=disabled # SELINUXTYPE= type of policy in use. Possible values are: # targeted - Only targeted network daemons are protected. # strict - Full SELinux protection. SELINUXTYPE=targeted This will disable SELinux on your next reboot.","title":"Disable SELinux CentOS 6"},{"location":"download-centos-6-2-iso/","text":"CentOS 6.2 Downloads You can download CentOS 6.2 via the web/ftp server or via BitTorrent (recommended) client. CentOS 6.2 DVD ISO downloads Download CentOS 6.2 32 bit DVD ISO CentOS-6.2-i386-bin-DVD1.iso and CentOS-6.2-i386-bin-DVD2.iso Download CentOS 6.2 64 bit DVD ISO CentOS-6.2-x86_64-bin-DVD1.iso and CentOS-6.2-x86_64-bin-DVD2.iso CentOS 6.2 DVD ISO Torrents Torrent files for the DVD\u2019s are available at the following location: Download CentOS 64 i386 torrent file Download CentOS 64 x86_64 torrent file","title":"Download CentOS 6.2 iso"},{"location":"download-centos-6-2-iso/#centos-62-downloads","text":"You can download CentOS 6.2 via the web/ftp server or via BitTorrent (recommended) client.","title":"CentOS 6.2 Downloads"},{"location":"download-centos-6-2-iso/#centos-62-dvd-iso-downloads","text":"Download CentOS 6.2 32 bit DVD ISO CentOS-6.2-i386-bin-DVD1.iso and CentOS-6.2-i386-bin-DVD2.iso Download CentOS 6.2 64 bit DVD ISO CentOS-6.2-x86_64-bin-DVD1.iso and CentOS-6.2-x86_64-bin-DVD2.iso","title":"CentOS 6.2 DVD ISO downloads"},{"location":"download-centos-6-2-iso/#centos-62-dvd-iso-torrents","text":"Torrent files for the DVD\u2019s are available at the following location: Download CentOS 64 i386 torrent file Download CentOS 64 x86_64 torrent file","title":"CentOS 6.2 DVD ISO Torrents"},{"location":"enabling-multimedia-support-on-centos-5-5/","text":"The CentOS base repository has no way to install the codecs and utilities we need to be able to play an MP3 or watch a DIVX movie. In this guide I will show you how to get all the multimedia support you want, as well as being able to use flash to view flash enabled websites. Firstly we need to install the RPMForge repository, so that we can get access to all the codecs and applications we need. The repository comes in two flavors, namely 64-bit and 32-bit. Make sure you select the correct repository to install. When in doubt, select 32-bit. For 32-bit installations (i.e. CentOS 5.x 32-bit installed), enter the following into your console/terminal: # wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.5.1-1.el5.rf.i386.rpm # su -c 'rpm -Uvh rpmforge-release-0.5.1-1.el5.rf.i386.rpm' Enter your root password to complete the installation. For 64-bit installations (i.e. CentOS 5.x 64-bit installed), enter the following into your console/terminal:: # wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.5.1-1.el5.rf.x86_64.rpm # su -c 'rpm -Uvh rpmforge-release-0.5.1-1.el5.rf.x86_64.rpm' Enter your root password to complete the installation. Next we need to install the Macromedia repository which will give us the ability to install the latest flash player. Enter the following into your console/terminal: # su -c 'rpm -Uhv http://linuxdownload.adobe.com/adobe-release/adobe-release-i386-1.0-1.noarch.rpm' Enter your root password to complete the installation. The next thing we need to do is install all the multimedia applications that we want to use. Enter the following into your console/terminal: # su -c 'yum -y install libdvdcss libdvdread libdvdplay libdvdnav lsdvd mplayerplug-in mplayer mplayer-gui compat-libstdc++-33 flash-plugin gstreamer-plugins-bad gstreamer-plugins-ugly' Enter your root password to complete the installation. Now we need to install all the codecs we want to use, luckily this step provides all the codecs we will ever need. Enter the following into your console/terminal: # wget www1.mplayerhq.hu/MPlayer/releases/codecs/mplayer-codecs-20061022-1.i386.rpm # su -c 'rpm -ivh mplayer-codecs-20061022-1.i386.rpm' # wget www1.mplayerhq.hu/MPlayer/releases/codecs/mplayer-codecs-extra-20061022-1.i386.rpm # su -c 'rpm -ivh mplayer-codecs-extra-20061022-1.i386.rpm' Enter your root password to complete the installation. Well done! You should now have all the multimedia support you would ever want. Double click your MP3 or Movie to start having some fun. Thank you for reading this guide, please leave me some comments.","title":"Enabling Multimedia support on CentOS 5.5"},{"location":"fedora-11-reign-released/","text":"Daxos: I see I was wrong to expect Sparta\u2019s Linux commitment to at least match our own. King Leonidas: Doesn\u2019t it? [points to Arcadian linux user behind Daxos] King Leonidas: You there, what is your Distro? Free Greek-Slackware user: I am a Slackware user\u2026 sir. King Leonidas: [points to another linux user] And you, Arcadian, what is your Distro? Free Greek-Debian user: Debian, sir. King Leonidas: Debian. [turns to a third linux user] King Leonidas: You? Free Greek-Ubuntu user : Ubuntu. King Leonidas: [turns back shouting] Spartans! What is your Distro? Spartans: FE-DOOR-RA! FE-DOOR-RA! FE-DOOR-RA! King Leonidas: You see, old friend? I brought a better Distro than you did. Fedora is a Linux-based operating system that showcases the latest in free and open source software. Fedora is always free for anyone to use, modify, and distribute. It is built by people across the globe who work together as a community. Their latest release Fedora 11: Leonidas is available for download Download Fedora 11: Leonidas The following are major features for Fedora 11: Automatic font and mime-type installation \u2013 PackageKit was introduced in Fedora 9 as a cross-distro software management application for users. The capabilities it offers thanks to integration with the desktop became more visible in Fedora 10, where it provided automatic codec installation. Now in Fedora 11, PackageKit extends this functionality with the ability to automatically install fonts where needed for viewing and editing documents. It also includes the capability to install handlers for specific content types as needed. Some work is still being completed to provide automatic installation of applications. Volume Control \u2013 Currently, people using Fedora have to go through many levels of mixers in different applications to properly set up sound sources. These are all exposed in the volume control on the desktop, making for a very confusing user experience. PulseAudio allows us to unify the volume controls in one interface that makes setting up sound easier and more pain-free. Intel, ATI and Nvidia kernel modsetting \u2013 Fedora 10 provided the first steps by a major distribution into using the kernel modesetting (KMS) feature to speed up graphical boot. We indicated at the time that we would be adding greater support for additional video cards as time went on. KMS originally was featured only on some ATI cards. In Fedora 11, this work is extended to include many more video cards, including Intel and Nvidia, and additional ATI as well. Although not fully complete, we have increased enormously the video card coverage of the KMS feature, with more to come. Fingerprint \u2013 Extensive work has been done to make fingerprint readers easy to use as an authentication mechanism. Currently, using fingerprint readers is a bit of a pain, and installing/using fprint and its pam module take more time than should ever be necessary. The goal of this feature is to make it painless by providing all the required pieces in Fedora, together with nicely integrated configuration. To enable this functionality the user will register their fingerprints on the system as part of user account creation. After doing so, they will easily be able to log in and authenticate seamlessly using a simple finger swipe. This greatly simplifies one element of identity management and is a great step in the evolution of the linux desktop. IBus input method system \u2013 ibus has been rewritten in C and is the new default input method for Asian languages. It allows input methods to be added and removed dynamically during a desktop session. It supports Chinese (pinyin, libchewing, tables), Indic (m17n), Japanese (anthy), Korean (libhangul), and more. There are still some features missing compared to scim so testing is strongly encouraged and reports of problems and suggestions for improvements welcome. Presto \u2013 Normally when you update a package in Fedora, you download an entire replacement package. Most of the time (especially for the larger packages), most of the actual data in the updated package is the same as the original package, but you still end up downloading the full package. Presto allows you to download the difference (called the delta) between the package you have installed and the one you want to update to. This can reduce the download size of updates by 60% \u00e2\u20ac\u201c 80%. It is not enabled by default for this release. To make use of this feature you must install the yum-presto plugin with yum install yum-presto. Some other features in this release include: Ext4 filesystem \u2013 The ext3 file system has remained the mature standard in Linux for a long time. The ext4 file system is a major update that has an improved design, even better performance and reliability, support for much larger storage, and very fast file system checks and file deletions. It is now the default filesystem for new installations. Virt Improved Console \u2013 In Fedora 10 and earlier the virtual guest console is limited to a screen resolution of 800\u00d7600. In Fedora 11 the goal is to have the screen default to at least 1024\u00d7768 resolution out of the box. New installations of F11 provide the ability to use other interface devices in the virtual guest, such as a USB tablet, which the guest will automatically detect and configure. Among the results is a mouse pointer that tracks the local client pointer one-for-one, and providing expanded capabilities. MinGW (Windows cross compiler) \u2013 Fedora 11 provides MinGW, a development environment for Fedora users who wish to cross-compile their programs to run on Windows without having to use Windows. In the past developers have had to port and compile all of the libraries and tools they have needed, and this huge effort has happened independently many times over. MinGW eliminates duplication of work for application developers by providing a range of libraries and development tools already ported to the cross-compiler environment. Developers don\u2019t have to recompile the application stack themselves, but can concentrate just on the changes needed to their own application. Read more on the Fedora Project Website","title":"Fedora 11: Leonidas \u2013 Released"},{"location":"fedora-12-constantine-released-to-repositories/","text":"Fedora 12 Overview As always, Fedora continues to develop ( http://www.fedoraproject.org/wiki/Red_Hat_contributions ) and integrate the latest free and open source software ( http://www.fedoraproject.org/wiki/Features ). The following sections provide a brief overview of major changes from the previous release of Fedora. For more details about other features that are included in Fedora 12 refer to their individual wiki pages that detail feature goals and progress: http://www.fedoraproject.org/wiki/Releases/12/FeatureList Throughout the release cycle, there are interviews with the developers behind key features giving out the inside story: http://www.fedoraproject.org/wiki/Interviews The following are major features for Fedora 12: Improved WebCam support Better Video Codec Audio Improvements Better Power Management Some other features in this release include: Automatic bug reporting tool Bluetooth on demand Many, many virtualization enhancements Still more security improvements Features for Fedora 12 tracked on the feature list page: http://www.fedoraproject.org/wiki/Releases/12/FeatureList A discussion putting these features in context may be found at: http://www.fedoraproject.org/wiki/Fedora_12_Talking_Points Original Document: http://docs.fedoraproject.org/release-notes/f12/en-US/html/","title":"Fedora 12: Constantine \u2013 Released to repositories"},{"location":"fight-spam-with-assp-anti-spam-smtp-proxy-on-centos-5-4/","text":"The Anti-Spam SMTP Proxy (ASSP) server project is an Open Source, Perl based, platform-independent transparent SMTP proxy server that leverages numerous methodologies and technologies to both rigidly and adaptively identify e-mail spam. ASSP is easy to set up because it requires only minor changes to the configuration of your your Mail Transfer Agent. Also please read the ASSP documentation Preliminary Note In this tutorial I use a base 32 bit server install with the hostname server1.example.co.za with the IP address 10.0.0.10. These settings might differ for you, so you have to replace them where appropriate. Adjust any package names if installing the EL4 or 64 bit packages. If any dependencies are unsatisfied, install the required packages and retry If you have already installed the RPM Forge repository do so by running the following command # rpm -Uhv http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.3.6-1.el5.rf.i386.rpm Now lets install the Perl components needed to run ASSP (Anti-Spam SMTP Proxy) on CentOS 5.4. Firstly we upgrade Perl and then install the Perl modules. # yum upgrade perl # yum install perl-IO-Compress perl-Net-DNS perl-Email-Valid perl-File-ReadBackwards perl-Mail-SPF-Query perl-Mail-SRS perl-LDAP perl-MIME-tools perl-File-Scan-ClamAV If and in order to run ClamAV anti-virus along with ASSP (Anti-Spam SMTP Proxy) install the ClamAV RPM # yum install clamd # chkconfig clamd on # service clamd start Next we\u2019ll download and install ASSP (Anti-Spam SMTP Proxy) Firstly check and grab the link for the latest version of ASSP on thier website, the version used in this post is ASSP Version: 1.6.5.5(1.0.02). Copy the direct download link for the latest version and download it. Lets get ASSP. # wget http://downloads.sourceforge.net/project/assp/ASSP%20Installation/ASSP%201.6.5.5/ASSP_1.6.5.5-Install.zip?use_mirror=ufpr Make some preparations. Create the following directories that ASSP (Anti-Spam SMTP Proxy) will use to maintain the SPAM # mkdir -p /usr/share/assp/spam # mkdir /usr/share/assp/notspam # mkdir /usr/share/assp/errors # mkdir /usr/share/assp/errors/spam # mkdir /usr/share/assp/errors/notspam Now unpack ASSP. # unzip ASSP_1.6.5.5-Install.zip # cd ASSP_1.6.5.5-Install And put ASSP in place. # mv -f ASSP/* /usr/share/assp Create following startup scripts. # vi /etc/init.d/assp #!/bin/bash # # chkconfig: 2345 80 05 # Description: ASSP init.d script # Hacked by : How2CentOS - http://www.how2centos.com # Get function from functions library . /etc/init.d/functions # Start the service ASSP start() { echo -n \"Starting ASSP server: \" cd /usr/share/assp perl assp.pl 2>&1 > /dev/null & ### Create the lock file ### touch /var/lock/subsys/ASSP success $\"ASSP server startup\" echo } # Restart the service ASSP stop() { echo -n \"Stopping ASSP server: \" kill -9 `ps ax | grep \"perl assp.pl\" | grep -v grep | awk '{ print $1 }'` ### Now, delete the lock file ### rm -f /var/lock/subsys/ASSP success $\"ASSP server shutdown\" echo } ### main logic ### case \"$1\" in start) start ;; stop) stop ;; status) status ASSP ;; restart|reload|condrestart) stop start ;; *) echo $\"Usage: $0 {start|stop|restart|reload|status}\" exit 1 esac exit 0 Lets start ASSP for the first time. # cd /usr/share/assp # perl assp.pl You should be able to connect to ASSP web interface at this point. http://server1.example.co.za:55555. Specify anything for \u201cusername\u201d, default \u201cpassword\u201d is nospam4me At this point you shall see that ASSP is unable to bind to port 25. We need to stop and disable CentOS default mailer Sendmail. # service sendmail stop # chkconfig sendmail off or # yum remove sendmail Now let\u2019s shutdown ASSP with \u201cCtrl-C\u201d. Now add the init script to chkconfig, set the run levels and start ASSP. # chmod 755 /etc/init.d/assp # chkconfig --add assp # chkconfig assp on # service assp start Now lets do some minimal ASSP Configuration, point you browser to http://server1.example.co.za:55555 Network Setup SMTP Listen Port 25 SMTP Destination 25 SMTP Session Limits Testmode All Testmode ON \u2013 Running in this mode for two weeks to build the spamdb and whitelist SPAM Control Prepend Spam Subject {ASSP-SPAM} Copy Spam & Ham Spam Lover/Hater No Processing Redlisting/Whitelisting Relaying Recipients Validate Helo Validate Sender IP Blocking Penalty Box Delaying SPF/SRS DNSSBL URIBL Attachment Blocking ClamAV Port or file socket for ClamAV (AvClamdPort) \u2013 /var/run/clamav/clamd.sock Regex Filters / Spambomb Bayesian Options Backscatter Detection Email Interface File Paths Collecting Logging LDAP Setup DNS Setup Server Setup After a week rebuild the bayes database. Check the directories /usr/share/assp/spam and nospam for wrong entries, if good mail ends up in the spam directory please move it to the nospam directory and vice versa. After that do: # cd /usr/share/assp # perl rebuildspamdb.pl Finally let\u2019s add the bayes database rebuild to crontab. # crontab -e # minute (0-59), # | hour (0-23), # | | day of the month (1-31), # | | | month of the year (1-12), # | | | | day of the week (0-6 with 0=Sunday). # | | | | | commands # -----------[ cron jobs ]------------ # # Weekly rebuild of the bayes database 0 */2 * * * cd /usr/share/assp && perl rebuildspamdb.pl","title":"Fight Spam: ASSP (Anti-Spam SMTP Proxy) On CentOS 5.4"},{"location":"firewall-migration-and-planning-guide/","text":"Plan and document existing firewall Planning and documenting the migration of the firewall is critical, without it you\u2019re doomed. Over time configurations grow as rules and networks are added for specific purposes are often superseded or simply forgotten. You need to document these as well as any other additional services or features (i.e. DHCP, DNS or VPN). This will assist you while you recreate the policies behind the firewall rules. You can download a sample Firewall Planning Guide here: [download id=\u201d4\u2033] Review policy changes Before you begin review your Planning guides and decide if they\u2019re 1) Still valid? or 2) Is this what the customer needs? The replacement of a key firewall is the perfect time to consider whether the current policy is the current best practice and/or whether it still fits the security needs of the company. Determine any rule changes Once you\u2019re agreed on policy, check the existing firewall rules and functions to see what is in conformance, what is superfluous, and what needs to be added. Test the new configuration on the firewall This is an important step. Change your gateway to the new firewall which is running concurrently with the old and test. Firstly, this will let you determine whether or not the new rules are complete and working. Secondly, it won\u2019t interrupt day to day operations. Move to the new firewall If all is well migrate to the new firewall either by switching IP\u2019s or changing the default gateway in DHCP. Once the firewall is in place, acceptance testing will of course need to be carried out. In case of emergency, the fact that you have the old firewall and new firewall set up allows you to quickly roll back to the old firewall and pull the new one out of service for checking and reconfiguration. Having this option available should reduce network downtime if there\u2019s a show stopper. Adding new services Wait until the new firewall is stable before adding new functions as this simplifies testing. Finally complete the migration by adding any new services that were requested, and since the configuration is known to be good and stable before adding the new services, any introduced instability should be easy to isolate and fix.","title":"Firewall Migration and Planning Guide"},{"location":"gentoo-lost-and-debian-losing-to-centos/","text":"If Linux distributions were stocks and you an investor you wish you\u2019d have invested in CentOS. Time to sell what\u2019s left and get yourself some steady and stable CentOS stocks, well at least according to Google Insights.","title":"Gentoo lost and Debian losing to CentOS"},{"location":"google-insights-and-trends-for-centos-6/","text":"CentOS 6 is just round the corner and what better way to watch the build up than Google Insights and Twitter. Below are two widgets of interest first being Google Insights with the search term \u201cCentOS 6\u201d and the second is a Twitter widget from TweetGrid searching for the hash tag #CentOS6","title":"Google Insights and Tweets for CentOS 6"},{"location":"google-trends-centos/","text":"RT @CentOS: 5.4 is baked! CentOS internal network will start syncing up today. Release ~ soon! CentOS 5.4 will be hitting our local CentOS mirrors and YUM repositories shortly, so in anticipation for the release lets take a look at the history and trends of CentOS 5 releases. The Google Trend graph below shows a nice steady upwards trend on the generic CentOS search phrase which is a good indication of a growing and stable Linux distribution. The below Google Trend graph compares the different versions of CentOS 5. What\u2019s great to see is that there is a steady overall growth in the CentOS camp and with every new release, with the previous version tailing off, the newer CentOS version takes the lead and continues the steady upwards trend.","title":"Google Trends \u2013 CentOS"},{"location":"how-to-check-your-centos-version/","text":"Most Red Hat-based distributions, like CentOS, should have a file called redhat-release which will contain the CentOS version. # cat /etc/redhat-release CentOS release 5.5 (Final) or # rpm -q centos-release centos-release-5-5.el5.centos.1 and finally # lsb_release -i Distributor ID: CentOS # lsb_release -r Release: 5.5 # lsb_release -d Description: CentOS release 5.5 (Final)","title":"How to check your CentOS version"},{"location":"how-to-install-xen-3-4-1-on-centos-5-4/","text":"What is Xen? The Xen hypervisor, the powerful open source industry standard for virtualization, offers a powerful, efficient, and secure feature set for virtualization of x86, x86_64, IA64, ARM, and other CPU architectures. It supports a wide range of guest operating systems including Windows, Linux, Solaris, and various versions of the BSD operating systems. Preliminary Note: I\u2019m using a CentOS 5.4 x86_64 base installation in this tutorial server1.example.co.za (IP 10.0.0.100): CentOS 5.4 x86_64 Base installation Install the Gitco repository Browse to http://www.gitco.de/repo/ and grab the latest repo for your arch. (in this case x86_64) # cd /etc/yum.repos.d/ # wget http://www.gitco.de/repo/GITCO-XEN3.4.1_x86_64.repo Remove previous installations of XEN before re-installing XEN 3.4.1 # yum groupremove Virtualization # yum groupinstall Virtualization Edit grub.conf to reflect the correct default Kernel # vi /etc/grub.conf # grub.conf generated by anaconda # # Note that you do not have to rerun grub after making changes to this file # NOTICE: You have a /boot partition. This means that # all kernel and initrd paths are relative to /boot/, eg. # root (hd0,0) # kernel /vmlinuz-version ro root=/dev/VolGroup00/LogVol00 # initrd /initrd-version.img #boot=/dev/sda default=0 timeout=5 splashimage=(hd0,0)/grub/splash.xpm.gz hiddenmenu title CentOS (2.6.18-128.7.1.el5xen) root (hd0,0) kernel /xen.gz-3.4.1 module /vmlinuz-2.6.18-128.7.1.el5xen ro root=/dev/VolGroup00/LogVol00 module /initrd-2.6.18-128.7.1.el5xen.img title CentOS (2.6.18-128.1.16.el5xen) root (hd0,0) kernel /xen.gz-3.4.1 module /vmlinuz-2.6.18-128.1.16.el5xen ro root=/dev/VolGroup00/LogVol00 module /initrd-2.6.18-128.1.16.el5xen.img title CentOS (2.6.18-128.el5xen) root (hd0,0) kernel /xen.gz-3.4.1 module /vmlinuz-2.6.18-128.el5xen ro root=/dev/VolGroup00/LogVol00 module /initrd-2.6.18-128.el5xen.img title CentOS (2.6.18-164.el5xen) root (hd0,0) kernel /xen.gz-3.4.1 module /vmlinuz-2.6.18-164.el5xen ro root=/dev/VolGroup00/LogVol00 module /initrd-2.6.18-164.el5xen.img Reboot the machine for new XEN kernel to take effect # reboot After the reboot check the Kernel to reflect the change # uname -r 2.6.18-128.7.1.el5xen","title":"How to install XEN 3.4.1 on CentOS 5.4"},{"location":"how-to-keep-a-detailed-audit-trail-on-your-centos-5-4-servers/","text":"The psacct package contains several utilities for monitoring process activities, including ac, lastcomm, accton and sa. The ac command displays statistics about how long users have been logged on. The lastcomm command displays information about previous executed commands. The accton command turns process accounting on or off. The sa command summarizes information about previously executed commmands. Install the psacct package if you\u2019d like to use its utilities for monitoring process activities on your CentOS 5.4 system. Installing the psacct package Use yum command if you are using CentOS 5.4 / Fedora 11 / RHEL 5.4: # yum install psacct Start psacct service By default service is not started on RHEL 5.4 / Fedora 11 / CentOS 5.4 you need to start psacct service manually. Type the following two commands to create /var/account/pacct file and start services: # chkconfig psacct on # service psacct start Display statistics about users\u2019 connect time ac prints out a report of connect time (in hours) based on the logins/logouts in the current wtmp file. A total is also printed out. # ac total 95.08 Print totals for each day rather than just one big total at the end. # ac -d Jul 3 total 1.17 Jul 4 total 2.10 Jul 5 total 8.23 Jul 6 total 2.10 Jul 7 total 0.30 Print time totals for each user in addition to the usual everything-lumped-into-one value. # ac -p bob 8.06 goff 0.60 maley 7.37 root 0.12 total 16.15 Find out information about previously executed user commands lastcomm prints out information about previously executed commands. If no arguments are specified, lastcomm will print info about all of the commands in acct (the record file). # lastcomm root userhelper S X root pts/0 0.00 secs Mon Nov 13 23:58 userhelper S root pts/0 0.00 secs Mon Nov 13 23:45 rpmq root pts/0 0.01 secs Mon Nov 13 23:45 rpmq root pts/0 0.00 secs Mon Nov 13 23:45 rpmq root pts/0 0.01 secs Mon Nov 13 23:45 gcc root pts/0 0.00 secs Mon Nov 13 23:45 which root pts/0 0.00 secs Mon Nov 13 23:44 bash F root pts/0 0.00 secs Mon Nov 13 23:44 ls root pts/0 0.00 secs Mon Nov 13 23:43 rm root pts/0 0.00 secs Mon Nov 13 23:43 vi root pts/0 0.00 secs Mon Nov 13 23:43 ping S root pts/0 0.00 secs Mon Nov 13 23:42 ping S root pts/0 0.00 secs Mon Nov 13 23:42 ping S root pts/0 0.00 secs Mon Nov 13 23:42 cat root pts/0 0.00 secs Mon Nov 13 23:42 netstat root pts/0 0.07 secs Mon Nov 13 23:42 su S root pts/0 0.00 secs Mon Nov 13 23:38 For each entry the following information is printed: + command name of the process + flags, as recorded by the system accounting routines: S -- command executed by super-user F -- command executed after a fork but without a following exec C -- command run in PDP-11 compatibility mode (VAX only) D -- command terminated with the generation of a core file X -- command was terminated with the signal SIGTERM + the name of the user who ran the process + time the process exited Search the accounting logs by command name: # lastcomm rm # lastcomm passwd rm root pts/0 0.00 secs Tue Nov 3 07:34 rm root pts/0 0.00 secs Tue Nov 3 07:34 rm root pts/0 0.00 secs Tue Nov 3 07:33 rm root pts/0 0.00 secs Tue Nov 3 07:33 rm root pts/0 0.00 secs Tue Nov 3 07:14 rm root pts/0 0.00 secs Tue Nov 3 07:14 Search the accounting logs by terminal name pts/0 # lastcomm pts/0 Summarizes accounting information sa summarizes information about previously executed commands as recorded in the acct file. In addition, it condenses this data into a summary file named savacct which contains the number of times the command was called and the system resources used. The information can also be summarized on a per-user basis; sa will save this information into a file named usracct. # sa 26100 26.62re 0.00cp 931k who 75980 161.69re 0.00cp 979k grep 23756 3.93re 0.00cp 938k cut 1283 815.91re 0.00cp 1327k crond* 6 4.89re 0.00cp 2102k sshd* 4 0.01re 0.00cp 1274k grotty 2 33.19re 0.00cp 1624k scp 25 0.04re 0.00cp 447k mail 15 0.05re 0.00cp 472k ntpdate Take example of first line: 26100 26.62re 0.00cp 931k who Where, 26.62re \u201creal time\u201d in wall clock minutes 0.00cp sum of system and user time in cpu minutes 931k cpu-time averaged core usage, in 1k units who command name For each command in the accounting file, print the userid and command name. # sa -u root 0.00 cpu 595k mem accton root 0.00 cpu 12488k mem initlog root 0.00 cpu 12488k mem initlog root 0.00 cpu 12482k mem touch root 0.00 cpu 13226k mem psacct root 0.00 cpu 595k mem consoletype root 0.00 cpu 13192k mem psacct * root 0.00 cpu 13226k mem psacct root 0.00 cpu 12492k mem chkconfig Print the number of processes and number of CPU minutes on a per-user basis. # sa -m 973902 107317.71re 1337.92cp 2101k root 781510 95856.57re 559.01cp 1795k apache 334 9007.96re 513.05cp 25916k nagios 192035 2447.62re 265.85cp 3303k smmsp 17 0.67re 0.00cp 2033k sshd 6 4.89re 0.00cp 2102k","title":"How to keep a detailed audit trail on your CentOS 5.4 servers"},{"location":"how-to-set-up-network-bonding-with-centos-5x/","text":"Ever wonder what to do with those extra NIC\u2019s in your CentOS server? Why not bond them to add that extra throughput or load balancing and fault tolerance. What is Bonding and it\u2019s Modes? Bonding, the process in which multiple NIC\u2019s are combined to function as one interface Modes of bonding: mode=0 (Balance-rr) \u2013 This mode provides load balancing and fault tolerance. mode=1 (active-backup) \u2013 This mode provides fault tolerance. mode=2 (balance-xor) \u2013 This mode provides load balancing and fault tolerance. mode=3 (broadcast) \u2013 This mode provides fault tolerance. mode=4 (802.3ad) \u2013 This mode provides load balancing and fault tolerance. mode=5 (balance-tlb) \u2013 Prerequisite: Ethtool support in the base drivers for retrieving the speed of each slave. mode=6 (Balance-alb) \u2013 Prerequisite: Ethtool support in the base drivers for retrieving the speed of each slave. Read more\u2026. Note: Always append extra configuration in case of a rollback. Preliminary Note: We will be using the CentOS 5.2 YUM server in this tutorial: server1.example.co.za (IP 10.0.0.100): YUM Repo server Bond0 We need to increase the throughput of our local YUM repo so we\u2019re bonding four of it\u2019s six NIC\u2019s Configuring the bond # cd /etc/sysconfig/network-scripts/ # vi ifcfg-bond0 DEVICE=bond0 BOOTPROTO=none ONBOOT=yes #Fake MAC address HWADDR=00:00:01:00:01:00 NETWORK=10.0.0.0 NETMASK=255.255.0.0 IPADDR=10.0.0.100 USERCTL=no # vi ifcfg-eth2 DEVICE=eth2 BOOTPROTO=none ONBOOT=yes MASTER=bond0 SLAVE=yes USERCTL=no # vi ifcfg-eth3 DEVICE=eth3 BOOTPROTO=none ONBOOT=yes MASTER=bond0 SLAVE=yes USERCTL=no # vi ifcfg-eth4 DEVICE=eth4 BOOTPROTO=none ONBOOT=yes MASTER=bond0 SLAVE=yes USERCTL=no # vi ifcfg-eth5 DEVICE=eth5 BOOTPROTO=none ONBOOT=yes MASTER=bond0 SLAVE=yes USERCTL=no # vi /etc/modprobe.conf We\u2019ll be using mode=6 (Balance-alb) Append the following onto the end out your modprobe config file alias bond0 bonding options bond0 mode=6 miimon=100 # servive network restart","title":"How to Set up Network Bonding on CentOS 5.x Tutorial"},{"location":"install-nginx-centos-6-4/","text":"Nginx (pronounced \u201cengine x\u201d) is a free, open-source, high-performance HTTP server. Nginx is known for its stability, rich feature set, simple configuration, and low resource consumption. This tutorial will guide you through setting up Nginx as a reverse proxy in front of a Apache back-end. The assumption for installing Nginx on CentOS 6.4 is that you are running as root and have a basic understanding of the software required but if you follow this tutorial you should be able to complete the task successfully. Install Yum Priorities For a brief overview on and how to configure Yum Priorities you can follow the instructions outlined in our Install YUM Priorities on CentOS tutorial. # yum install yum-priorities Installing Nginx on CentOS 6.4 x86_64 Install the EPEL x86_64 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm Install the IUS x86_64 YUM Repository # rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/6/x86_64/ius-release-1.0-10.ius.el6.noarch.rpm Install Nginx (and Apache if you haven\u2019t already) # yum install nginx # yum install httpd Configure Nginx # vim /etc/nginx/conf.d/how2centos.conf ## Apache backend for http://www.how2centos.com/ ## upstream apachebackend { server 127.0.0.1:8080; #apachebackend } ## Start http://www.how2centos.com/ ## server { listen 80 default; server_name www.how2centos.com how2centos.com; access_log /var/log/nginx/how2centos.com.access.log main; error_log /var/log/nginx/how2centos.com.error.log; root /usr/share/nginx/html; index index.html index.htm index.php; ## send request back to apachebackend ## location / { proxy_pass http://apachebackend; proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504; proxy_redirect off; proxy_buffering on; proxy_buffers 12 12k; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $remote_addr; } } ## End http://www.how2centos.com/ ## Configure Apache Edit the httpd.conf file so that Apache listens on port 8080 otherwise you\u2019ll have a conflict with Nginx # vim /etc/httpd/conf/httpd.conf # Listen: Allows you to bind Apache to specific IP addresses and/or # ports, in addition to the default. See also the <VirtualHost> # directive. # # Change this to Listen on specific IP addresses as shown below to # prevent Apache from glomming onto all bound IP addresses (0.0.0.0) # #Listen 80 Listen 8080 Add Apache and Nginx to the system startup # chkconfig httpd on # chkconfig nginx on Restart Apache and Nginx # service httpd restart # service nginx restart","title":"Install Nginx CentOS 6.4 (reverse proxy)"},{"location":"install-nginx-centos-6-4/#install-yum-priorities","text":"For a brief overview on and how to configure Yum Priorities you can follow the instructions outlined in our Install YUM Priorities on CentOS tutorial. # yum install yum-priorities","title":"Install Yum Priorities"},{"location":"install-nginx-centos-6-4/#installing-nginx-on-centos-64-x86_64","text":"","title":"Installing Nginx on CentOS 6.4 x86_64"},{"location":"install-nginx-centos-6-4/#install-the-epel-x86_64-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm","title":"Install the EPEL x86_64 YUM Repository"},{"location":"install-nginx-centos-6-4/#install-the-ius-x86_64-yum-repository","text":"# rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/6/x86_64/ius-release-1.0-10.ius.el6.noarch.rpm","title":"Install the IUS x86_64 YUM Repository"},{"location":"install-nginx-centos-6-4/#install-nginx-and-apache-if-you-havent-already","text":"# yum install nginx # yum install httpd","title":"Install Nginx (and Apache if you haven&#8217;t already)"},{"location":"install-nginx-centos-6-4/#configure-nginx","text":"# vim /etc/nginx/conf.d/how2centos.conf ## Apache backend for http://www.how2centos.com/ ## upstream apachebackend { server 127.0.0.1:8080; #apachebackend } ## Start http://www.how2centos.com/ ## server { listen 80 default; server_name www.how2centos.com how2centos.com; access_log /var/log/nginx/how2centos.com.access.log main; error_log /var/log/nginx/how2centos.com.error.log; root /usr/share/nginx/html; index index.html index.htm index.php; ## send request back to apachebackend ## location / { proxy_pass http://apachebackend; proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504; proxy_redirect off; proxy_buffering on; proxy_buffers 12 12k; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $remote_addr; } } ## End http://www.how2centos.com/ ##","title":"Configure Nginx"},{"location":"install-nginx-centos-6-4/#configure-apache","text":"Edit the httpd.conf file so that Apache listens on port 8080 otherwise you\u2019ll have a conflict with Nginx # vim /etc/httpd/conf/httpd.conf # Listen: Allows you to bind Apache to specific IP addresses and/or # ports, in addition to the default. See also the <VirtualHost> # directive. # # Change this to Listen on specific IP addresses as shown below to # prevent Apache from glomming onto all bound IP addresses (0.0.0.0) # #Listen 80 Listen 8080","title":"Configure Apache"},{"location":"install-nginx-centos-6-4/#add-apache-and-nginx-to-the-system-startup","text":"# chkconfig httpd on # chkconfig nginx on","title":"Add Apache and Nginx to the system startup"},{"location":"install-nginx-centos-6-4/#restart-apache-and-nginx","text":"# service httpd restart # service nginx restart","title":"Restart Apache and Nginx"},{"location":"install-nginx-php-fpm-centos-6/","text":"What is Nginx? Nginx (pronounced \u201cengine x\u201d) is a free, open-source, high-performance HTTP server. Nginx is known for its stability, rich feature set, simple configuration, and low resource consumption. What is PHP-FPM? PHP-FPM (FastCGI Process Manager) is an alternative PHP FastCGI implementation with some additional features useful for sites of any size, especially busier sites. Install the EPEL x86_64 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm Install Nginx # yum install nginx Install PHP and PHP-FPM # yum install php php-mysql php-fpm php-common Configure Nginx and PHP-FPM Edit the www.conf pool and comment out the listen on TCP socket and add a unix socket listen = /var/run/php5-fpm.sock # vi /etc/php-fpm.d/www.conf ; Start a new pool named 'www'. [www] ; The address on which to accept FastCGI requests. ; Valid syntaxes are: ; 'ip.add.re.ss:port' - to listen on a TCP socket to a specific address on ; a specific port; ; 'port' - to listen on a TCP socket to all addresses on a ; specific port; ; '/path/to/unix/socket' - to listen on a unix socket. ; Note: This value is mandatory. ;listen = 127.0.0.1:9000 listen = /var/run/php5-fpm.sock Create a Nginx config file based on your individual site. Below is a config file specific to WordPress running the W3 Total Cache plugin. Note the fastcgi_pass is the same as the unix socket specified in the php-fpm www.conf pool. # vim /etc/nginx/conf.d/how2centos.conf server { # Redirect how2centos.com to www.how2centos.com server_name how2centos.com; rewrite ^(.*) http://www.how2centos.com$1 permanent; } server { server_name www.how2centos.com; access_log /var/log/nginx/how2centos.com/access.log; error_log /var/log/nginx/how2centos.com/error.log; root /var/www/www.how2centos.com; index index.php; gzip on; gzip_disable \"msie6\"; gzip_vary on; gzip_proxied any; gzip_comp_level 5; gzip_buffers 16 8k; gzip_http_version 1.0; gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/png image/gif image/jpeg; set $cache_uri $request_uri; # POST requests and urls with a query string should always go to PHP if ($request_method = POST) { set $cache_uri 'null cache'; } if ($query_string != \"\") { set $cache_uri 'null cache'; } # Don't cache uris containing the following segments if ($request_uri ~* \"(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)\") { set $cache_uri 'null cache'; } # Don't use the cache for logged in users or recent commenters if ($http_cookie ~* \"comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_logged_in\") { set $cache_uri 'null cache'; } # Use cached or actual file if they exists, otherwise pass request to WordPress location / { try_files /wp-content/cache/page_enhanced/${host}${cache_uri}_index.html $uri $uri/ /index.php?$args ; } location ~ ^/wp-content/cache/minify/[^/]+/(.*)$ { try_files $uri /wp-content/plugins/w3-total-cache/pub/minify.php?file=$1; } location = /favicon.ico { log_not_found off; access_log off; } location = /robots.txt { log_not_found off; access_log off; } location ~ .php$ { fastcgi_index index.php; fastcgi_pass unix:/var/run/php5-fpm.sock; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; fastcgi_param SCRIPT_NAME $fastcgi_script_name; } # Cache static files for as long as possible location ~* .(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ { expires max; log_not_found off; access_log off; } } Don\u2019t forget to create your log directory if you\u2019re not using the defualt. # mkdir /var/log/nginx/how2centos.com/ Check your configuration for any errors. # nginx -t nginx: the configuration file /etc/nginx/nginx.conf syntax is ok nginx: configuration file /etc/nginx/nginx.conf test is successful Enable php-fpm and Nginx at startup. # chkconfig nginx on # chkconfig php-fpm on Start php-fpm and Nginx. # service php-fpm start # service nginx start","title":"Install Nginx with PHP-FPM on CentOS 6"},{"location":"install-nginx-php-fpm-centos-6/#what-is-nginx","text":"Nginx (pronounced \u201cengine x\u201d) is a free, open-source, high-performance HTTP server. Nginx is known for its stability, rich feature set, simple configuration, and low resource consumption.","title":"What is Nginx?"},{"location":"install-nginx-php-fpm-centos-6/#what-is-php-fpm","text":"PHP-FPM (FastCGI Process Manager) is an alternative PHP FastCGI implementation with some additional features useful for sites of any size, especially busier sites.","title":"What is PHP-FPM?"},{"location":"install-nginx-php-fpm-centos-6/#install-the-epel-x86_64-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm","title":"Install the EPEL x86_64 YUM Repository"},{"location":"install-nginx-php-fpm-centos-6/#install-nginx","text":"# yum install nginx","title":"Install Nginx"},{"location":"install-nginx-php-fpm-centos-6/#install-php-and-php-fpm","text":"# yum install php php-mysql php-fpm php-common","title":"Install PHP and PHP-FPM"},{"location":"install-nginx-php-fpm-centos-6/#configure-nginx-and-php-fpm","text":"Edit the www.conf pool and comment out the listen on TCP socket and add a unix socket listen = /var/run/php5-fpm.sock # vi /etc/php-fpm.d/www.conf ; Start a new pool named 'www'. [www] ; The address on which to accept FastCGI requests. ; Valid syntaxes are: ; 'ip.add.re.ss:port' - to listen on a TCP socket to a specific address on ; a specific port; ; 'port' - to listen on a TCP socket to all addresses on a ; specific port; ; '/path/to/unix/socket' - to listen on a unix socket. ; Note: This value is mandatory. ;listen = 127.0.0.1:9000 listen = /var/run/php5-fpm.sock Create a Nginx config file based on your individual site. Below is a config file specific to WordPress running the W3 Total Cache plugin. Note the fastcgi_pass is the same as the unix socket specified in the php-fpm www.conf pool. # vim /etc/nginx/conf.d/how2centos.conf server { # Redirect how2centos.com to www.how2centos.com server_name how2centos.com; rewrite ^(.*) http://www.how2centos.com$1 permanent; } server { server_name www.how2centos.com; access_log /var/log/nginx/how2centos.com/access.log; error_log /var/log/nginx/how2centos.com/error.log; root /var/www/www.how2centos.com; index index.php; gzip on; gzip_disable \"msie6\"; gzip_vary on; gzip_proxied any; gzip_comp_level 5; gzip_buffers 16 8k; gzip_http_version 1.0; gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/png image/gif image/jpeg; set $cache_uri $request_uri; # POST requests and urls with a query string should always go to PHP if ($request_method = POST) { set $cache_uri 'null cache'; } if ($query_string != \"\") { set $cache_uri 'null cache'; } # Don't cache uris containing the following segments if ($request_uri ~* \"(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)\") { set $cache_uri 'null cache'; } # Don't use the cache for logged in users or recent commenters if ($http_cookie ~* \"comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_logged_in\") { set $cache_uri 'null cache'; } # Use cached or actual file if they exists, otherwise pass request to WordPress location / { try_files /wp-content/cache/page_enhanced/${host}${cache_uri}_index.html $uri $uri/ /index.php?$args ; } location ~ ^/wp-content/cache/minify/[^/]+/(.*)$ { try_files $uri /wp-content/plugins/w3-total-cache/pub/minify.php?file=$1; } location = /favicon.ico { log_not_found off; access_log off; } location = /robots.txt { log_not_found off; access_log off; } location ~ .php$ { fastcgi_index index.php; fastcgi_pass unix:/var/run/php5-fpm.sock; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; fastcgi_param SCRIPT_NAME $fastcgi_script_name; } # Cache static files for as long as possible location ~* .(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ { expires max; log_not_found off; access_log off; } } Don\u2019t forget to create your log directory if you\u2019re not using the defualt. # mkdir /var/log/nginx/how2centos.com/ Check your configuration for any errors. # nginx -t nginx: the configuration file /etc/nginx/nginx.conf syntax is ok nginx: configuration file /etc/nginx/nginx.conf test is successful Enable php-fpm and Nginx at startup. # chkconfig nginx on # chkconfig php-fpm on Start php-fpm and Nginx. # service php-fpm start # service nginx start","title":"Configure Nginx and PHP-FPM"},{"location":"install-percona-xtradb-cluster-on-centos-6-2/","text":"Percona XtraDB Cluster is a new high availability and high scalability solution for MySQL users. XtraDB Cluster integrates Percona Server with the Galera library of high availability solutions in a single product package. Percona XtraDB is an enhanced version of the InnoDB storage engine for MySQL and MariaDB. It has much faster performance than InnoDB and better scalability on modern hardware. This tutorial is how to setup a 3-node XtraDB cluster, assuming you are running CentOS Linux 6.2 64-bit. Install Percona\u2019s CentOS 6 repositories: # rpm -Uhv http://repo.percona.com/testing/centos/6/os/noarch/percona-testing-0.0-1.noarch.rpm # rpm -Uhv http://www.percona.com/downloads/percona-release/percona-release-0.0-1.x86_64.rpm Install Percona XtraDB Cluster packages: # yum install Percona-XtraDB-Cluster-server Percona-XtraDB-Cluster-client XtraDB Cluster requires a couple of TCP ports to operate. Easiest way: # service iptables stop If you want to open only specific ports, you need to open 3306, 4444, 4567, 4568 ports. For example for 4567 port (substitute 10.0.0.1 by your IP): # iptables -A INPUT -i eth0 -p tcp -m tcp --source 10.0.0.1/24 --dport 4567 -j ACCEPT Now repeat on all XtraDB cluster nodes Create /etc/my.cnf files On the first XtraDB Cluster node (assume IP 10.0.0.10): [mysqld] datadir=/mnt/data user=mysql binlog_format=ROW wsrep_provider=/usr/lib64/libgalera_smm.so wsrep_cluster_address=gcomm:// wsrep_slave_threads=2 wsrep_cluster_name=trimethylxanthine wsrep_sst_method=rsync wsrep_node_name=node1 innodb_locks_unsafe_for_binlog=1 innodb_autoinc_lock_mode=2 On the second XtraDB Cluster node: [mysqld] datadir=/mnt/data user=mysql binlog_format=ROW wsrep_provider=/usr/lib64/libgalera_smm.so wsrep_cluster_address=gcomm://10.0.0.10 wsrep_slave_threads=2 wsrep_cluster_name=trimethylxanthine wsrep_sst_method=rsync wsrep_node_name=node2 innodb_locks_unsafe_for_binlog=1 innodb_autoinc_lock_mode=2 On the third XtraDB Cluster node: [mysqld] datadir=/mnt/data user=mysql binlog_format=ROW wsrep_provider=/usr/lib64/libgalera_smm.so wsrep_cluster_address=gcomm://10.0.0.10 wsrep_slave_threads=2 wsrep_cluster_name=trimethylxanthine wsrep_sst_method=rsync wsrep_node_name=node3 innodb_locks_unsafe_for_binlog=1 innodb_autoinc_lock_mode=2 Start mysqld on the first node: # service mysql start When all nodes are in SYNCED stage your cluster is ready! Connect to database on any node and create database: # mysql > CREATE DATABASE how2centos_test; The new database will be propagated to all nodes.","title":"Install Percona XtraDB Cluster on CentOS 6.2"},{"location":"install-percona-xtradb-cluster-on-centos-6-2/#install-perconas-centos-6-repositories","text":"# rpm -Uhv http://repo.percona.com/testing/centos/6/os/noarch/percona-testing-0.0-1.noarch.rpm # rpm -Uhv http://www.percona.com/downloads/percona-release/percona-release-0.0-1.x86_64.rpm","title":"Install Percona\u2019s CentOS 6 repositories:"},{"location":"install-percona-xtradb-cluster-on-centos-6-2/#install-percona-xtradb-cluster-packages","text":"# yum install Percona-XtraDB-Cluster-server Percona-XtraDB-Cluster-client XtraDB Cluster requires a couple of TCP ports to operate. Easiest way: # service iptables stop If you want to open only specific ports, you need to open 3306, 4444, 4567, 4568 ports. For example for 4567 port (substitute 10.0.0.1 by your IP): # iptables -A INPUT -i eth0 -p tcp -m tcp --source 10.0.0.1/24 --dport 4567 -j ACCEPT Now repeat on all XtraDB cluster nodes","title":"Install Percona XtraDB Cluster packages:"},{"location":"install-percona-xtradb-cluster-on-centos-6-2/#create-etcmycnf-files","text":"On the first XtraDB Cluster node (assume IP 10.0.0.10): [mysqld] datadir=/mnt/data user=mysql binlog_format=ROW wsrep_provider=/usr/lib64/libgalera_smm.so wsrep_cluster_address=gcomm:// wsrep_slave_threads=2 wsrep_cluster_name=trimethylxanthine wsrep_sst_method=rsync wsrep_node_name=node1 innodb_locks_unsafe_for_binlog=1 innodb_autoinc_lock_mode=2 On the second XtraDB Cluster node: [mysqld] datadir=/mnt/data user=mysql binlog_format=ROW wsrep_provider=/usr/lib64/libgalera_smm.so wsrep_cluster_address=gcomm://10.0.0.10 wsrep_slave_threads=2 wsrep_cluster_name=trimethylxanthine wsrep_sst_method=rsync wsrep_node_name=node2 innodb_locks_unsafe_for_binlog=1 innodb_autoinc_lock_mode=2 On the third XtraDB Cluster node: [mysqld] datadir=/mnt/data user=mysql binlog_format=ROW wsrep_provider=/usr/lib64/libgalera_smm.so wsrep_cluster_address=gcomm://10.0.0.10 wsrep_slave_threads=2 wsrep_cluster_name=trimethylxanthine wsrep_sst_method=rsync wsrep_node_name=node3 innodb_locks_unsafe_for_binlog=1 innodb_autoinc_lock_mode=2 Start mysqld on the first node: # service mysql start When all nodes are in SYNCED stage your cluster is ready! Connect to database on any node and create database: # mysql > CREATE DATABASE how2centos_test; The new database will be propagated to all nodes.","title":"Create /etc/my.cnf files"},{"location":"install-varnish-centos-6/","text":"This tutorial is intended for system administrators wanting to install Varnish on CentOS 6. The reader should know how to configure a web server or application server and have basic knowledge of the HTTP protocol. Once finished the reader should have a basic Varnish cache up and running with the default configuration. Varnish is a web application accelerator. You install it in front of your web application and it will speed it up significantly. Varnish web application accelerator homepage: https://www.varnish-cache.org Install the Varnish YUM Repository # rpm -Uvh http://repo.varnish-cache.org/redhat/varnish-3.0/el5/noarch/varnish-release-3.0-1.noarch.rpm Install Varnish web accelerator # yum install varnish Enable Varnish web accelerator at startup # chkconfig varnish on Basic default.vcl # vi /etc/varnish/default.vcl # This is a basic VCL configuration file for varnish. See the vcl(7) # man page for details on VCL syntax and semantics. # # Default backend definition. Set this to point to your content # server. # backend default { .host = \"127.0.0.1\"; .port = \"80\"; } Start Varnish web accelerator # service varnish start You will now have a basic Varnish web accelerator running on port 8080 Top 5 Varnish commands varnishstat Provides all the info you need to spot cache misses and errors. varnishhist Provides a histogram view of cache hits/misses varnishlog Provides detailed information on requests. varnishtop The varnishtop utility reads varnishd shared memory logs and presents a continuously updated list of the most commonly occurring log entries. varnishadm Command-line varnish administration used to reload vcl and purge urls. Managing Varnish with Puppet If you\u2019re running Puppet we have included the manifest for installing Varnish on CentOS 6. If you\u2019re not running Puppet then you can install it by following the instructions outlined in our CentOS 6 Puppet Install . This is only the manifest and doesn\u2019t include any of the files (i.e. default.vcl). class varnish::repo { Package { provider => rpm, ensure => installed } package { \"varnish-release\": source => \"http://repo.varnish-cache.org/redhat/varnish-3.0/el5/noarch/varnish-release-3.0-1.noarch.rpm\" } } class varnish::install { $packagelist = [\"varnish\"] package { $packagelist: require => Class [\"varnish::repo\"], ensure => installed } } class varnish::service { service { \"varnish\": ensure => true, enable => true, hasrestart => true, hasstatus => true, require => Class [\"varnish::install\"] } } class varnish::conf { File { require => Class [\"varnish::install\"], owner => \"root\", group => \"root\", mode => 644, notify => Class [\"varnish::service\"] } file { \"/etc/varnish/default.vcl\": source => \"puppet:///modules/varnish/default.vcl\" } file { \"/etc/sysconfig/varnish\": source => \"puppet:///modules/varnish/varnish\" } } class varnish { include varnish::repo, varnish::install, varnish::service, varnish::conf }","title":"Install Varnish CentOS 6"},{"location":"install-varnish-centos-6/#install-the-varnish-yum-repository","text":"# rpm -Uvh http://repo.varnish-cache.org/redhat/varnish-3.0/el5/noarch/varnish-release-3.0-1.noarch.rpm","title":"Install the Varnish YUM Repository"},{"location":"install-varnish-centos-6/#install-varnish-web-accelerator","text":"# yum install varnish","title":"Install Varnish web accelerator"},{"location":"install-varnish-centos-6/#enable-varnish-web-accelerator-at-startup","text":"# chkconfig varnish on","title":"Enable Varnish web accelerator at startup"},{"location":"install-varnish-centos-6/#basic-defaultvcl","text":"# vi /etc/varnish/default.vcl # This is a basic VCL configuration file for varnish. See the vcl(7) # man page for details on VCL syntax and semantics. # # Default backend definition. Set this to point to your content # server. # backend default { .host = \"127.0.0.1\"; .port = \"80\"; }","title":"Basic default.vcl"},{"location":"install-varnish-centos-6/#start-varnish-web-accelerator","text":"# service varnish start You will now have a basic Varnish web accelerator running on port 8080","title":"Start Varnish web accelerator"},{"location":"install-varnish-centos-6/#top-5-varnish-commands","text":"","title":"Top 5 Varnish commands"},{"location":"install-varnish-centos-6/#varnishstat","text":"Provides all the info you need to spot cache misses and errors.","title":"varnishstat"},{"location":"install-varnish-centos-6/#varnishhist","text":"Provides a histogram view of cache hits/misses","title":"varnishhist"},{"location":"install-varnish-centos-6/#varnishlog","text":"Provides detailed information on requests.","title":"varnishlog"},{"location":"install-varnish-centos-6/#varnishtop","text":"The varnishtop utility reads varnishd shared memory logs and presents a continuously updated list of the most commonly occurring log entries.","title":"varnishtop"},{"location":"install-varnish-centos-6/#varnishadm","text":"Command-line varnish administration used to reload vcl and purge urls.","title":"varnishadm"},{"location":"install-varnish-centos-6/#managing-varnish-with-puppet","text":"If you\u2019re running Puppet we have included the manifest for installing Varnish on CentOS 6. If you\u2019re not running Puppet then you can install it by following the instructions outlined in our CentOS 6 Puppet Install . This is only the manifest and doesn\u2019t include any of the files (i.e. default.vcl). class varnish::repo { Package { provider => rpm, ensure => installed } package { \"varnish-release\": source => \"http://repo.varnish-cache.org/redhat/varnish-3.0/el5/noarch/varnish-release-3.0-1.noarch.rpm\" } } class varnish::install { $packagelist = [\"varnish\"] package { $packagelist: require => Class [\"varnish::repo\"], ensure => installed } } class varnish::service { service { \"varnish\": ensure => true, enable => true, hasrestart => true, hasstatus => true, require => Class [\"varnish::install\"] } } class varnish::conf { File { require => Class [\"varnish::install\"], owner => \"root\", group => \"root\", mode => 644, notify => Class [\"varnish::service\"] } file { \"/etc/varnish/default.vcl\": source => \"puppet:///modules/varnish/default.vcl\" } file { \"/etc/sysconfig/varnish\": source => \"puppet:///modules/varnish/varnish\" } } class varnish { include varnish::repo, varnish::install, varnish::service, varnish::conf }","title":"Managing Varnish with Puppet"},{"location":"install-yum-priorities-centos/","text":"The Yum Priorities plugin can be used to enforce ordered protection of repositories, by associating priorities to repositories. The priorities plugin is a useful tool if properly configured, and used with an understanding of the functionality and a recognition of the limitations and potential issues. It can be used in conjunction with the \u2018exclude\u2019 and/or \u2018includepkg\u2019 options, as well as the \u2018enabled=0\u2019 option to disable a repo by default. This can let you choose which packages a less important repo will supersede those of a more important one. Install Yum Priorities # yum install yum-priorities Configure Yum Priorities # vi /etc/yum/pluginconf.d/priorities.conf Ensure the following lines exist [main] enabled=1 Save and close the file Open the CentOS base repository configuration file # vi /etc/yum.repos.d/CentOS-Base.repo Add the following text to the end of the base, updates and extras entries priority=1 Add the following line to the end of the centosplus, contrib entries priority=2 # CentOS-Base.repo # # The mirror system uses the connecting IP address of the client and the # update status of each mirror to pick mirrors that are updated to and # geographically close to the client. You should use this for CentOS updates # unless you are manually picking other mirrors. # # If the mirrorlist= does not work for you, as a fall back you can try the # remarked out baseurl= line instead. # # [base] name=CentOS-$releasever - Base mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=os #baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6 priority=1 #released updates [updates] name=CentOS-$releasever - Updates mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=updates #baseurl=http://mirror.centos.org/centos/$releasever/updates/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6 priority=1 #additional packages that may be useful [extras] name=CentOS-$releasever - Extras mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=extras #baseurl=http://mirror.centos.org/centos/$releasever/extras/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6 priority=1 #additional packages that extend functionality of existing packages [centosplus] name=CentOS-$releasever - Plus mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=centosplus #baseurl=http://mirror.centos.org/centos/$releasever/centosplus/$basearch/ gpgcheck=1 enabled=0 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6 priority=2 #contrib - packages by Centos Users [contrib] name=CentOS-$releasever - Contrib mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=contrib #baseurl=http://mirror.centos.org/centos/$releasever/contrib/$basearch/ gpgcheck=1 enabled=0 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6 priority=2","title":"Install yum priorities on CentOS"},{"location":"install-yum-priorities-centos/#install-yum-priorities","text":"# yum install yum-priorities","title":"Install Yum Priorities"},{"location":"install-yum-priorities-centos/#configure-yum-priorities","text":"# vi /etc/yum/pluginconf.d/priorities.conf Ensure the following lines exist [main] enabled=1 Save and close the file Open the CentOS base repository configuration file # vi /etc/yum.repos.d/CentOS-Base.repo Add the following text to the end of the base, updates and extras entries priority=1 Add the following line to the end of the centosplus, contrib entries priority=2 # CentOS-Base.repo # # The mirror system uses the connecting IP address of the client and the # update status of each mirror to pick mirrors that are updated to and # geographically close to the client. You should use this for CentOS updates # unless you are manually picking other mirrors. # # If the mirrorlist= does not work for you, as a fall back you can try the # remarked out baseurl= line instead. # # [base] name=CentOS-$releasever - Base mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=os #baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6 priority=1 #released updates [updates] name=CentOS-$releasever - Updates mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=updates #baseurl=http://mirror.centos.org/centos/$releasever/updates/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6 priority=1 #additional packages that may be useful [extras] name=CentOS-$releasever - Extras mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=extras #baseurl=http://mirror.centos.org/centos/$releasever/extras/$basearch/ gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6 priority=1 #additional packages that extend functionality of existing packages [centosplus] name=CentOS-$releasever - Plus mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=centosplus #baseurl=http://mirror.centos.org/centos/$releasever/centosplus/$basearch/ gpgcheck=1 enabled=0 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6 priority=2 #contrib - packages by Centos Users [contrib] name=CentOS-$releasever - Contrib mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=contrib #baseurl=http://mirror.centos.org/centos/$releasever/contrib/$basearch/ gpgcheck=1 enabled=0 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6 priority=2","title":"Configure Yum Priorities"},{"location":"installing-aide-on-centos-5-2/","text":"Source AIDE (Advanced Intrusion Detection Environment) is a free replacement for Tripwire. It does the same things as the semi-free Tripwire and more. This is a must have when maintaining the integrity of your servers. Installing Aide yum install aide Initializing Aide's Records The next thing we need to do is create the initial AIDE database. Run the following command: /usr/sbin/aide --init This will take a little bit of time to run, depending on the size of your file system and you'll have some disk churn while aide interrogates your system and creates a baseline database. Once this is done, we're going to test by doing an initial query of the system. Run the command below: cp /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz /usr/sbin/aide --check This copies the initial database to the current database, then checks them against each other. In theory you should not have any differences. If you do, investigate them. As we're still setting this up, they're likely to be mundane .viminfo files or something similar. Keep in mind that when you update applications via yum update that you may see aide go a bit nuts, just as tripwire or others would. You\u2019re replacing files on your system when you update, and this is exactly what aide is designed to warn you about. In a perfect world, you should get some output like the text below: aide --check Add the following to Crontab crontab -e # Daily AIDE integrity check 0 1 * * * /usr/sbin/aide --check | /bin/mail -s \"$HOSTNAME - Daily AIDE integrity check\" admin@example.com This runs a check once a day.","title":"Installing AIDE on CentOS 5.2"},{"location":"installing-aide-on-centos-5-2/#installing-aide","text":"yum install aide","title":"Installing Aide"},{"location":"installing-aide-on-centos-5-2/#initializing-aides-records","text":"The next thing we need to do is create the initial AIDE database. Run the following command: /usr/sbin/aide --init This will take a little bit of time to run, depending on the size of your file system and you'll have some disk churn while aide interrogates your system and creates a baseline database. Once this is done, we're going to test by doing an initial query of the system. Run the command below: cp /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz /usr/sbin/aide --check This copies the initial database to the current database, then checks them against each other. In theory you should not have any differences. If you do, investigate them. As we're still setting this up, they're likely to be mundane .viminfo files or something similar. Keep in mind that when you update applications via yum update that you may see aide go a bit nuts, just as tripwire or others would. You\u2019re replacing files on your system when you update, and this is exactly what aide is designed to warn you about. In a perfect world, you should get some output like the text below: aide --check","title":"Initializing Aide's Records"},{"location":"installing-aide-on-centos-5-2/#add-the-following-to-crontab","text":"crontab -e # Daily AIDE integrity check 0 1 * * * /usr/sbin/aide --check | /bin/mail -s \"$HOSTNAME - Daily AIDE integrity check\" admin@example.com This runs a check once a day.","title":"Add the following to Crontab"},{"location":"installing-and-upgrading-to-php-52-on-centos-and-red-hat-linux-53-x86_64/","text":"This Linux installing guide will walk you through installing PHP 5.2 (Supports the Kohana Framework) with APC, Memcached, ImageMagick and FFmpeg with AMR (3gp support) on CentOS and RHEL note: This upgrade also repairs the error \"Warning: preg_match(): Compilation failed: support for \\P, \\p, and \\X has not been compiled at offset 2 in file: /var/www/kohana_2.3.1/system/core/utf8.php on line: 65\" Preliminary Note: I am using a CentOS 5.2 x86_64 server with the RPM Forge YUM repo enabled in this tutorial: server1.example.co.za (IP 10.0.0.100) House Keeping Edit yum.conf and add the \u2018exclude\u2019 switch to the configuration and this will eliminate 32bit RPM\u2019s from being installed. You can however ignore this step if you\u2019re installing on a 32bit CentOS or RHEL system. # vi /etc/yum.conf [main] exclude=*.i386 *.i586 *.i686 # yum remove openssl.i686 glibc.i686 If you haven\u2019t installed the EPEL, IUS and RPMForge CentOS and RHEL repository, here\u2019s how: Install the EPEL i386 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm Install the RPMForge i386 YUM Repository # rpm -Uvh http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.i386.rpm Install the IUS i386 YUM Repository # rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/i386/ius-release-1.0-10.ius.el5.noarch.rpm Next we install the various packages that will be required for our PHP Linux installation # yum install php52-pear php52 php52-cli php52-common php52-devel php52-gd php52-mbstring php52-mcrypt php52-mysql php52-pdo php52-soap php52-xml php52-xmlrpc php52-bcmath php52-pecl-apc php52-pecl-memcache # yum install ImageMagick ImageMagick-devel memcached zlib-devel php-pear httpd-devel gcc mysql-devel libxslt-devel re2c ffmpeg ffmpeg-devel lame amrnd # chkconfig memcached on NB. Don\u2019t forget to read through the installing guide for FFmpeg with AMR support before continuing. PECL install the relevant .so modules required by PHP # pecl install memcache # pecl install apc # pecl install PDO # pecl install pdo_mysql # pecl install imagick # pecl install xslcache and download the source and install the .so files not available via PECL # wget http://garr.dl.sourceforge.net/sourceforge/ffmpeg-php/ffmpeg-php-0.6.0.tbz2 # tar -xjf ffmpeg-php-0.6.0.tbz2 # cd ffmpeg-php-0.6.0 # phpize # ./configure # make # make install Create inclusion files for all the .so modules # echo \"extension=xslcache.so\" > /etc/php.d/xslcache.ini # echo \"extension=apc.so\" > /etc/php.d/apc.ini # echo \"extension=pdo.so\" > /etc/php.d/pdo.ini # echo \"extension=pdo_mysql.so\" > /etc/php.d/pdo_mysql.ini # echo \"extension=memcache.so\" > /etc/php.d/memcache.ini # echo \"extension=mcrypt.so\" > /etc/php.d/mcrypt.ini # echo \"extension=imagick.so\" > /etc/php.d/imagick.ini # echo \"extension=ffmpeg.so\" > /etc/php.d/ffmpeg.ini # vi /var/www/html/phpinfo.php <?php // Show all information, defaults to INFO_ALL phpinfo(); // Show just the module information. // phpinfo(8) yields identical results. phpinfo(INFO_MODULES); ?> Restart httpd/apache and point your browser at http://your-web-server/phpinfo.php and confirm your installation.","title":"Installing and upgrading to PHP 5.2 on CentOS and RedHat Linux 5.3 x86_64"},{"location":"installing-and-upgrading-to-php-52-on-centos-and-red-hat-linux-53-x86_64/#install-the-epel-i386-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm","title":"Install the EPEL i386 YUM Repository"},{"location":"installing-and-upgrading-to-php-52-on-centos-and-red-hat-linux-53-x86_64/#install-the-rpmforge-i386-yum-repository","text":"# rpm -Uvh http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.i386.rpm","title":"Install the RPMForge i386 YUM Repository"},{"location":"installing-and-upgrading-to-php-52-on-centos-and-red-hat-linux-53-x86_64/#install-the-ius-i386-yum-repository","text":"# rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/i386/ius-release-1.0-10.ius.el5.noarch.rpm Next we install the various packages that will be required for our PHP Linux installation # yum install php52-pear php52 php52-cli php52-common php52-devel php52-gd php52-mbstring php52-mcrypt php52-mysql php52-pdo php52-soap php52-xml php52-xmlrpc php52-bcmath php52-pecl-apc php52-pecl-memcache # yum install ImageMagick ImageMagick-devel memcached zlib-devel php-pear httpd-devel gcc mysql-devel libxslt-devel re2c ffmpeg ffmpeg-devel lame amrnd # chkconfig memcached on NB. Don\u2019t forget to read through the installing guide for FFmpeg with AMR support before continuing. PECL install the relevant .so modules required by PHP # pecl install memcache # pecl install apc # pecl install PDO # pecl install pdo_mysql # pecl install imagick # pecl install xslcache and download the source and install the .so files not available via PECL # wget http://garr.dl.sourceforge.net/sourceforge/ffmpeg-php/ffmpeg-php-0.6.0.tbz2 # tar -xjf ffmpeg-php-0.6.0.tbz2 # cd ffmpeg-php-0.6.0 # phpize # ./configure # make # make install Create inclusion files for all the .so modules # echo \"extension=xslcache.so\" > /etc/php.d/xslcache.ini # echo \"extension=apc.so\" > /etc/php.d/apc.ini # echo \"extension=pdo.so\" > /etc/php.d/pdo.ini # echo \"extension=pdo_mysql.so\" > /etc/php.d/pdo_mysql.ini # echo \"extension=memcache.so\" > /etc/php.d/memcache.ini # echo \"extension=mcrypt.so\" > /etc/php.d/mcrypt.ini # echo \"extension=imagick.so\" > /etc/php.d/imagick.ini # echo \"extension=ffmpeg.so\" > /etc/php.d/ffmpeg.ini # vi /var/www/html/phpinfo.php <?php // Show all information, defaults to INFO_ALL phpinfo(); // Show just the module information. // phpinfo(8) yields identical results. phpinfo(INFO_MODULES); ?> Restart httpd/apache and point your browser at http://your-web-server/phpinfo.php and confirm your installation.","title":"Install the IUS i386 YUM Repository"},{"location":"installing-bacula-on-centos-6/","text":"Installing Bacula on CentOS 6 with Webmin interface quick start guide. The assumption for this CentOS 6 tutorial is that you are running as root and have a basic understanding of the software required but if you follow this tutorial you should be able to complete the task successfully. What is Bacula Bacula is a set of Open Source, enterprise ready, computer programs that permit you (or the system administrator) to manage backup, recovery, and verification of computer data across a network of computers of different kinds. Bacula is relatively easy to use and efficient, while offering many advanced storage management features that make it easy to find and recover lost or damaged files. In technical terms, it is an Open Source, enterprise ready, network based backup program. Bacula Website: http://www.bacula.org/en/ Install the EPEL x86_64 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm Disable SELinux This is disabled at your own risk! We dont recommend it but it makes the installtion easier. # vi /etc/sysconfig/selinux Change the following: SELINUX=enforcing to SELINUX=disabled Install the Webmin YUM Repository # cat > /etc/yum.repos.d/webmin.repo << EOF [Webmin] name=Webmin Distribution Neutral #baseurl=http://download.webmin.com/download/yum mirrorlist=http://download.webmin.com/download/yum/mirrorlist enabled=1 EOF Add the GPG Key and Install Webmin # rpm --import http://www.webmin.com/jcameron-key.asc # yum install webmin Install MySQL and Bacula # yum install mysql-devel mysql-server # yum install bacula-storage-mysql bacula-docs # yum install bacula-director-mysql bacula-console # yum install bacula-client bacula-traymonitor Start and Configure MySQL for Bacula # service mysqld start # chkconfig mysqld on Change the MySQL root password if you have a fresh install of MySQL # mysqladmin -u root password 'new-password' Now run the scripts # /usr/libexec/bacula/grant_mysql_privileges -u root -p # /usr/libexec/bacula/create_mysql_database -u root -p # /usr/libexec/bacula/make_mysql_tables -u root -p # /usr/libexec/bacula/grant_bacula_privileges -u root -p Edit the default config files Change Director password, change address and password on Client, change Storage Address and Password, change Console password: # vi /etc/bacula/bacula-dir.conf Change bacula-fd password, change bacula-mon password: # vi /etc/bacula/bacula-fd.conf Change bacula-dir password, change bacula-mon password, change Device {Archive Device to /backup # vi /etc/bacula/bacula-sd.conf Change Address and Password: # vi /etc/bacula/bconsole.conf Change Address Password and additionally change Director name to localhost # vi /etc/bacula/tray-monitor.conf Create the backup folder # mkdir /backup # chown bacula /backup Set the MySQL password for user bacula # mysql -u root -p Enter Password: mysql> UPDATE mysql.user SET password=PASSWORD ('somepassword') mysql> WHERE user='bacula'; mysql> UPDATE mysql.user SET password=PASSWORD ('somepassword') WHERE user='bacula'; mysql> FLUSH PRIVILEGES; mysql> quit Start the Bacula Services # chkconfig bacula-dir on # chkconfig bacula-fd on # chkconfig bacula-sd on # service bacula-dir start # service bacula-fd start # service bacula-sd start Now use your web browser and go to the host IP address where you installed Bacula http://10.0.0.20:10000 This will take you to the Webmin. Login using root and your password. You will find the Bacula module on the left under System","title":"Installing Bacula on CentOS 6"},{"location":"installing-bacula-on-centos-6/#what-is-bacula","text":"Bacula is a set of Open Source, enterprise ready, computer programs that permit you (or the system administrator) to manage backup, recovery, and verification of computer data across a network of computers of different kinds. Bacula is relatively easy to use and efficient, while offering many advanced storage management features that make it easy to find and recover lost or damaged files. In technical terms, it is an Open Source, enterprise ready, network based backup program. Bacula Website: http://www.bacula.org/en/","title":"What is Bacula"},{"location":"installing-bacula-on-centos-6/#install-the-epel-x86_64-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm","title":"Install the EPEL x86_64 YUM Repository"},{"location":"installing-bacula-on-centos-6/#disable-selinux","text":"This is disabled at your own risk! We dont recommend it but it makes the installtion easier. # vi /etc/sysconfig/selinux Change the following: SELINUX=enforcing to SELINUX=disabled","title":"Disable SELinux"},{"location":"installing-bacula-on-centos-6/#install-the-webmin-yum-repository","text":"# cat > /etc/yum.repos.d/webmin.repo << EOF [Webmin] name=Webmin Distribution Neutral #baseurl=http://download.webmin.com/download/yum mirrorlist=http://download.webmin.com/download/yum/mirrorlist enabled=1 EOF","title":"Install the Webmin YUM Repository"},{"location":"installing-bacula-on-centos-6/#add-the-gpg-key-and-install-webmin","text":"# rpm --import http://www.webmin.com/jcameron-key.asc # yum install webmin","title":"Add the GPG Key and Install Webmin"},{"location":"installing-bacula-on-centos-6/#install-mysql-and-bacula","text":"# yum install mysql-devel mysql-server # yum install bacula-storage-mysql bacula-docs # yum install bacula-director-mysql bacula-console # yum install bacula-client bacula-traymonitor","title":"Install MySQL and Bacula"},{"location":"installing-bacula-on-centos-6/#start-and-configure-mysql-for-bacula","text":"# service mysqld start # chkconfig mysqld on Change the MySQL root password if you have a fresh install of MySQL # mysqladmin -u root password 'new-password'","title":"Start and Configure MySQL for Bacula"},{"location":"installing-bacula-on-centos-6/#now-run-the-scripts","text":"# /usr/libexec/bacula/grant_mysql_privileges -u root -p # /usr/libexec/bacula/create_mysql_database -u root -p # /usr/libexec/bacula/make_mysql_tables -u root -p # /usr/libexec/bacula/grant_bacula_privileges -u root -p","title":"Now run the scripts"},{"location":"installing-bacula-on-centos-6/#edit-the-default-config-files","text":"Change Director password, change address and password on Client, change Storage Address and Password, change Console password: # vi /etc/bacula/bacula-dir.conf Change bacula-fd password, change bacula-mon password: # vi /etc/bacula/bacula-fd.conf Change bacula-dir password, change bacula-mon password, change Device {Archive Device to /backup # vi /etc/bacula/bacula-sd.conf Change Address and Password: # vi /etc/bacula/bconsole.conf Change Address Password and additionally change Director name to localhost # vi /etc/bacula/tray-monitor.conf Create the backup folder # mkdir /backup # chown bacula /backup","title":"Edit the default config files"},{"location":"installing-bacula-on-centos-6/#set-the-mysql-password-for-user-bacula","text":"# mysql -u root -p Enter Password: mysql> UPDATE mysql.user SET password=PASSWORD ('somepassword') mysql> WHERE user='bacula'; mysql> UPDATE mysql.user SET password=PASSWORD ('somepassword') WHERE user='bacula'; mysql> FLUSH PRIVILEGES; mysql> quit","title":"Set the MySQL password for user bacula"},{"location":"installing-bacula-on-centos-6/#start-the-bacula-services","text":"# chkconfig bacula-dir on # chkconfig bacula-fd on # chkconfig bacula-sd on # service bacula-dir start # service bacula-fd start # service bacula-sd start Now use your web browser and go to the host IP address where you installed Bacula http://10.0.0.20:10000 This will take you to the Webmin. Login using root and your password. You will find the Bacula module on the left under System","title":"Start the Bacula Services"},{"location":"installing-cacti-on-centos-5-5/","text":"In this tutorial we will be installing Cacti on CentOS 5.5 using the LCMP stack (Linux, Cherokee, MySQL and PHP). What is Cacti? Cacti is a complete network, server and application graphing solution harnessing the power of RRDtool OpenSource industry standard, high performance data logging and graphing. So before we start just some general house keeping. The base CentOS 5.5 server hostname and IP address that we\u2019ll be using in this tutorial: centos01.how2centos.com (IP 10.0.0.3) The Cacti server will eventually be available on http://cacti.how2centos.com The assumption, for this Cacti and CentOS 5.5 tutorial, is that you are running as root and have a medium understanding of the software required or you\u2019re Awesome. # yum install yum-priorities Install the RPMForge i386 YUM Repository # rpm -Uvh http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.i386.rpm Install the EPEL i386 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm Install the IUS i386 YUM Repository # rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/i386/ius-release-1.0-10.ius.el5.noarch.rpm Install Cherokee web server # yum install cherokee rrdtool Install PHP 5.3 # yum install php53u-pear php53u php53u-cli php53u-common php53u-devel php53u-gd php53u-mbstring php53u-mcrypt php53u-mysql php53u-pdo php53u-soap php53u-xml php53u-xmlrpc php53u-bcmath php53u-pecl-apc php53u-pecl-memcache php53u-snmp Install MySQL and MySQL Server # yum install mysql mysql-server Install SNMP # yum install net-snmp net-snmp-utils Install Cacti # yum install cacti Configure snmpd, move snmpd.conf and create a new one. The \u2018snmpuser\u2019 is what you\u2019ll use later in the Cacti interface. # mv /etc/snmp/snmpd.conf /etc/snmp/snmpd.conf.old # echo \"rocommunity snmpuser\" > /etc/snmp/snmpd.conf Let make sure that everything is added to runlevels 2, 3, 4 and start them up. # chkconfig mysqld on # chkconfig snmpd on # chkconfig cherokee on # service mysqld start # service snmpd start # service cherokee start Create \u2018cacti\u2019 MySQL database and grant privileges to \u2018cactiuser\u2019 with password \u2018cactipassword\u2019 # mysql Welcome to the MySQL monitor. Commands end with ; or \\g. Your MySQL connection id is 14323 Server version: 5.0.77 Source distribution Type 'help;' or '\\h' for help. Type '\\c' to clear the buffer. mysql>create database cacti; mysql>GRANT ALL ON cacti.* TO cactiuser@localhost IDENTIFIED BY 'cactipassword'; mysql>quit Import the Cacti database schema # mysql -ucactiuser -pcactipassword cacti < /var/www/cacti/cacti.sql Configure Cacti with the details above. # vi /var/www/cacti/include/config.php /* make sure these values refect your actual database/host/user/password */ $database_type = \"mysql\"; $database_default = \"cacti\"; $database_hostname = \"localhost\"; $database_username = \"cactiuser\"; $database_password = \"cactipassword\"; $database_port = \"3306\"; Once all that has been done time to get PHP 5.3 working with Cherokee and then adding the Cacti virtual server. Firstly lets get PHP 5.3 working with Cherokee # cherokee-admin -b Finally add the Cacti virtual server and browser to the URL and follow the onscreen instuctions.","title":"Installing Cacti on CentOS 5.5"},{"location":"installing-cacti-on-centos-5-5/#install-the-rpmforge-i386-yum-repository","text":"# rpm -Uvh http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.i386.rpm","title":"Install the RPMForge i386 YUM Repository"},{"location":"installing-cacti-on-centos-5-5/#install-the-epel-i386-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm","title":"Install the EPEL i386 YUM Repository"},{"location":"installing-cacti-on-centos-5-5/#install-the-ius-i386-yum-repository","text":"# rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/i386/ius-release-1.0-10.ius.el5.noarch.rpm","title":"Install the IUS i386 YUM Repository"},{"location":"installing-cacti-on-centos-5-5/#install-cherokee-web-server","text":"# yum install cherokee rrdtool","title":"Install Cherokee web server"},{"location":"installing-cacti-on-centos-5-5/#install-php-53","text":"# yum install php53u-pear php53u php53u-cli php53u-common php53u-devel php53u-gd php53u-mbstring php53u-mcrypt php53u-mysql php53u-pdo php53u-soap php53u-xml php53u-xmlrpc php53u-bcmath php53u-pecl-apc php53u-pecl-memcache php53u-snmp","title":"Install PHP 5.3"},{"location":"installing-cacti-on-centos-5-5/#install-mysql-and-mysql-server","text":"# yum install mysql mysql-server","title":"Install MySQL and MySQL Server"},{"location":"installing-cacti-on-centos-5-5/#install-snmp","text":"# yum install net-snmp net-snmp-utils","title":"Install SNMP"},{"location":"installing-cacti-on-centos-5-5/#install-cacti","text":"# yum install cacti Configure snmpd, move snmpd.conf and create a new one. The \u2018snmpuser\u2019 is what you\u2019ll use later in the Cacti interface. # mv /etc/snmp/snmpd.conf /etc/snmp/snmpd.conf.old # echo \"rocommunity snmpuser\" > /etc/snmp/snmpd.conf Let make sure that everything is added to runlevels 2, 3, 4 and start them up. # chkconfig mysqld on # chkconfig snmpd on # chkconfig cherokee on # service mysqld start # service snmpd start # service cherokee start Create \u2018cacti\u2019 MySQL database and grant privileges to \u2018cactiuser\u2019 with password \u2018cactipassword\u2019 # mysql Welcome to the MySQL monitor. Commands end with ; or \\g. Your MySQL connection id is 14323 Server version: 5.0.77 Source distribution Type 'help;' or '\\h' for help. Type '\\c' to clear the buffer. mysql>create database cacti; mysql>GRANT ALL ON cacti.* TO cactiuser@localhost IDENTIFIED BY 'cactipassword'; mysql>quit Import the Cacti database schema # mysql -ucactiuser -pcactipassword cacti < /var/www/cacti/cacti.sql Configure Cacti with the details above. # vi /var/www/cacti/include/config.php /* make sure these values refect your actual database/host/user/password */ $database_type = \"mysql\"; $database_default = \"cacti\"; $database_hostname = \"localhost\"; $database_username = \"cactiuser\"; $database_password = \"cactipassword\"; $database_port = \"3306\"; Once all that has been done time to get PHP 5.3 working with Cherokee and then adding the Cacti virtual server. Firstly lets get PHP 5.3 working with Cherokee # cherokee-admin -b Finally add the Cacti virtual server and browser to the URL and follow the onscreen instuctions.","title":"Install Cacti"},{"location":"installing-cherokee-on-centos-5-5/","text":"This tutorial is intended for system administrators wanting to install Cherokee web server on a CentOS 5.8 x86_64 Cherokee is a very fast, flexible and easy to configure web server. It supports the widespread technologies nowadays: FastCGI, SCGI, PHP, CGI, TLS and SSL encrypted connections, virtual hosts, authentication, on the fly encoding, load balancing, Apache compatible log files, and much more. Install the RPMForge x86_64 YUM Repository # rpm -Uvh http://apt.sw.be/redhat/el5/en/x86_64/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.x86_64.rpm Install the EPEL x86_64 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm # yum install yum-priorities # yum update Install MySQL and MySQL server # yum install mysql mysql-server Install RRDTool # yum install rrdtool Install Cherokee web server # yum install cherokee # chkconfig cherokee on # service cherokee start Now direct your browser to http://10.0.0.3 You should see the Cherokee placeholder page. Cherokee can be configured through a web-based control panel which we can start as follows: cherokee-admin -b (By default cherokee-admin binds only to 127.0.0.1 (localhost), with the -b parameter you can specify the network address to listen to. If no IP is provided, it will bind to all interfaces.) Output should be similar to this one: # cherokee-admin -b Login: User: admin One-time Password: gtVzmvy6Rqy9idKy Web Interface: URL: http://localhost:9090/ Cherokee Web Server 1.0.6 (Aug 6 2010): Listening on port ALL:9090, TLS disabled, IPv6 enabled, using epoll, 4096 fds system limit, max. 2041 connections, caching I/O, single thread The admin web interface can be found on http://10.0.0.3:9090/ (make sure to enter your one-time password) To stop cherokee-admin, type CTRL+C on the shell. Managing Varnish with Puppet If you\u2019re running Puppet we have included the manifest for installing Cherokee on CentOS 5. If you\u2019re not running Puppet then you can install it by following the instructions outlined in our CentOS 5 Puppet Install . This is only the manifest and doesn\u2019t include any of the files (i.e. cherokee.conf). class cherokee::repo { Package { provider => rpm, ensure => installed } package {\"epel-release\": source => \"http://download.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm\"; \"rpmforge-release\": source => \"http://apt.sw.be/redhat/el5/en/x86_64/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.x86_64.rpm\" } } class cherokee::install { $packagelist = [ \"cherokee\", \"rrdtool\", \"mysql\", \"mysql-server\", ] package { $packagelist: ensure => latest, require => Class [\"cherokee::repo\"], } } class cherokee::conf { File { owner => \"root\", group => \"root\", mode => 0644, require => Class [\"cherokee::install\"], notify => Class [\"cherokee::service\"] } file { \"/var/www/cherokee/phpinfo.php\": source => \"puppet:///modules/cherokee/phpinfo.php\" } file { \"/etc/cherokee/cherokee.conf\": source => \"puppet:///modules/cherokee/cherokee.conf\" } } class cherokee::service { $servicelist = [ \"cherokee\", \"mysqld\", ] service { $servicelist: require => Class [\"cherokee::install\"], ensure => true, enable => true, hasrestart => false, hasstatus => true } } class cherokee { include cherokee::repo, cherokee::install, cherokee::conf, cherokee::service } Links Cherokee: http://www.cherokee-project.com/ MySQL: http://www.mysql.com/ CentOS: http://centos.org/ +George Rushby","title":"Installing Cherokee on CentOS 5.8"},{"location":"installing-cherokee-on-centos-5-5/#install-the-rpmforge-x86_64-yum-repository","text":"# rpm -Uvh http://apt.sw.be/redhat/el5/en/x86_64/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.x86_64.rpm","title":"Install the RPMForge x86_64 YUM Repository"},{"location":"installing-cherokee-on-centos-5-5/#install-the-epel-x86_64-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm # yum install yum-priorities # yum update","title":"Install the EPEL x86_64 YUM Repository"},{"location":"installing-cherokee-on-centos-5-5/#install-mysql-and-mysql-server","text":"# yum install mysql mysql-server","title":"Install MySQL and MySQL server"},{"location":"installing-cherokee-on-centos-5-5/#install-rrdtool","text":"# yum install rrdtool","title":"Install RRDTool"},{"location":"installing-cherokee-on-centos-5-5/#install-cherokee-web-server","text":"# yum install cherokee # chkconfig cherokee on # service cherokee start Now direct your browser to http://10.0.0.3 You should see the Cherokee placeholder page. Cherokee can be configured through a web-based control panel which we can start as follows: cherokee-admin -b (By default cherokee-admin binds only to 127.0.0.1 (localhost), with the -b parameter you can specify the network address to listen to. If no IP is provided, it will bind to all interfaces.) Output should be similar to this one: # cherokee-admin -b Login: User: admin One-time Password: gtVzmvy6Rqy9idKy Web Interface: URL: http://localhost:9090/ Cherokee Web Server 1.0.6 (Aug 6 2010): Listening on port ALL:9090, TLS disabled, IPv6 enabled, using epoll, 4096 fds system limit, max. 2041 connections, caching I/O, single thread The admin web interface can be found on http://10.0.0.3:9090/ (make sure to enter your one-time password) To stop cherokee-admin, type CTRL+C on the shell.","title":"Install Cherokee web server"},{"location":"installing-cherokee-on-centos-5-5/#managing-varnish-with-puppet","text":"If you\u2019re running Puppet we have included the manifest for installing Cherokee on CentOS 5. If you\u2019re not running Puppet then you can install it by following the instructions outlined in our CentOS 5 Puppet Install . This is only the manifest and doesn\u2019t include any of the files (i.e. cherokee.conf). class cherokee::repo { Package { provider => rpm, ensure => installed } package {\"epel-release\": source => \"http://download.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm\"; \"rpmforge-release\": source => \"http://apt.sw.be/redhat/el5/en/x86_64/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.x86_64.rpm\" } } class cherokee::install { $packagelist = [ \"cherokee\", \"rrdtool\", \"mysql\", \"mysql-server\", ] package { $packagelist: ensure => latest, require => Class [\"cherokee::repo\"], } } class cherokee::conf { File { owner => \"root\", group => \"root\", mode => 0644, require => Class [\"cherokee::install\"], notify => Class [\"cherokee::service\"] } file { \"/var/www/cherokee/phpinfo.php\": source => \"puppet:///modules/cherokee/phpinfo.php\" } file { \"/etc/cherokee/cherokee.conf\": source => \"puppet:///modules/cherokee/cherokee.conf\" } } class cherokee::service { $servicelist = [ \"cherokee\", \"mysqld\", ] service { $servicelist: require => Class [\"cherokee::install\"], ensure => true, enable => true, hasrestart => false, hasstatus => true } } class cherokee { include cherokee::repo, cherokee::install, cherokee::conf, cherokee::service } Links Cherokee: http://www.cherokee-project.com/ MySQL: http://www.mysql.com/ CentOS: http://centos.org/ +George Rushby","title":"Managing Varnish with Puppet"},{"location":"installing-cherokee-with-php5-2-and-mysql-support-on-centos-5-3/","text":"Cherokee is a very fast, flexible and easy to configure Web Server. It supports the widespread technologies nowadays: FastCGI, SCGI, PHP, CGI, TLS and SSL encrypted connections, virtual hosts, authentication, on the fly encoding, load balancing, Apache compatible log files, and much more. This tutorial shows how you can install Cherokee on a CentOS server with PHP 5.2 support (through FastCGI) and MySQL support. Preliminary Note In this tutorial I use a base 64 bit server install with the hostname server1.example.co.za with the IP address 10.0.0.10. These settings might differ for you, so you have to replace them where appropriate. Adjust any package names if installing the EL4 or 32 bit packages. If any dependencies are unsatisfied, install the required packages and retry. Let\u2019s begin by adding some Repositories that we\u2019ll be needing # yum install yum-priorities # rpm -Uhv http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.3.6-1.el5.rf.i386.rpm # rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm # rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/i386/ius-release-1.0-8.ius.el5.noarch.rpm Installing MySQL 5 First we install MySQL 5 like this: # yum groupinstall \"MySQL Database\" You will be asked to provide a password for the MySQL root user \u2013 this password is valid for the user root@localhost as well as root@server1.example.co.za, so we don\u2019t have to specify a MySQL root password manually later on: New password for the MySQL \u201croot\u201d user: <\u2013 yourpassword Repeat password for the MySQL \"root\" user: <\u2013 yourrpassword # chkconfig mysqld on Installing Cherokee Then we\u2019ll install the Cherokee binaries and add it to startup: # yum install cherokee # chkconfig cherokee on # service cherokee start Now direct your browser to http://10.0.0.10, and you should see the Cherokee placeholder page: Cherokee can be configured through a web-based control panel which we can start as follows: cherokee-admin -b (By default cherokee-admin binds only to 127.0.0.1 (localhost), with the -b parameter you can specify the network address to listen to. If no IP is provided, it will bind to all interfaces.) Output should be similar to this one: # cherokee-admin -b Login: User: admin One-time Password: (your one-time password) Web Interface: URL: http://localhost:9090/ Cherokee Web Server 0.99.17 (Jun 14 2009): Listening on port ALL:9090, TLS disabled, IPv6 disabled, using epoll, 1024 fds system limit, max. 505 connections, caching I/O, single thread The admin web interface can be found on http://10.0.0.10:9090/ (make sure to enter your one-time password) To stop cherokee-admin, type CTRL+C on the shell. Installing PHP 5.2 with FastCGI and MySQL Support We can make PHP 5.2 work in Cherokee through FastCGI: # yum install php52-pear php52 php52-cli php52-common php52-devel php52-gd php52-mbstring php52-mcrypt php52-mysql php52-pdo php52-soap php52-xml php52-xmlrpc php52-bcmath php52-pecl-apc php52-pecl-memcache Configuring PHP 5.2 There is not much to learn to configure PHP with Cherokee. Cherokee-admin ships a one-click wizard that will do everything for you. It will look for the PHP interpreter, it will check whether it supports FastCGI, and then it\u2019ll perform all the necessary operations to set it up on Cherokee. It requires a single operation to get PHP configured on a Virtual Server: Choose the virtual server your want to configure, and click on the Behavior tab. Once in there, click on Wizards. Now select Languages and run the PHP wizard. And, that is it. If you had php-cgi installed in your system, PHP should be configured now and listed on the Behavior tab. Make sure you mark its checkbox in the Final column Save your changes and reboot! Testing PHP 5.2 and getting details about your installation The document root of the default web site is /var/www/cherokee. We will now create a PHP info file (info.php) in that directory and call it in a browser. The file will display lots of useful details about our PHP installation, such as the installed PHP version. # vi /var/www/cherokee/info.php Save the file and call that it in a browser (e.g. http://10.0.0.10/info.php): As you see, PHP 5.2 is working, and it\u2019s working through FastCGI, as shown in the Server API line. If you scroll further down, you will see all modules that are already enabled in PHP 5.2 including MySQL. Links Cherokee: http://www.cherokee-project.com/ PHP: http://www.php.net/ MySQL: http://www.mysql.com/ CentOS: http://centos.org/","title":"Installing Cherokee with PHP 5.2 and MySQL Support On CentOS 5.3"},{"location":"installing-cherokee-with-php5-2-and-mysql-support-on-centos-5-3/#installing-mysql-5","text":"First we install MySQL 5 like this: # yum groupinstall \"MySQL Database\" You will be asked to provide a password for the MySQL root user \u2013 this password is valid for the user root@localhost as well as root@server1.example.co.za, so we don\u2019t have to specify a MySQL root password manually later on: New password for the MySQL \u201croot\u201d user: <\u2013 yourpassword Repeat password for the MySQL \"root\" user: <\u2013 yourrpassword # chkconfig mysqld on","title":"Installing MySQL 5"},{"location":"installing-cherokee-with-php5-2-and-mysql-support-on-centos-5-3/#installing-cherokee","text":"Then we\u2019ll install the Cherokee binaries and add it to startup: # yum install cherokee # chkconfig cherokee on # service cherokee start Now direct your browser to http://10.0.0.10, and you should see the Cherokee placeholder page: Cherokee can be configured through a web-based control panel which we can start as follows: cherokee-admin -b (By default cherokee-admin binds only to 127.0.0.1 (localhost), with the -b parameter you can specify the network address to listen to. If no IP is provided, it will bind to all interfaces.) Output should be similar to this one: # cherokee-admin -b Login: User: admin One-time Password: (your one-time password) Web Interface: URL: http://localhost:9090/ Cherokee Web Server 0.99.17 (Jun 14 2009): Listening on port ALL:9090, TLS disabled, IPv6 disabled, using epoll, 1024 fds system limit, max. 505 connections, caching I/O, single thread The admin web interface can be found on http://10.0.0.10:9090/ (make sure to enter your one-time password) To stop cherokee-admin, type CTRL+C on the shell.","title":"Installing Cherokee"},{"location":"installing-cherokee-with-php5-2-and-mysql-support-on-centos-5-3/#installing-php-52-with-fastcgi-and-mysql-support","text":"We can make PHP 5.2 work in Cherokee through FastCGI: # yum install php52-pear php52 php52-cli php52-common php52-devel php52-gd php52-mbstring php52-mcrypt php52-mysql php52-pdo php52-soap php52-xml php52-xmlrpc php52-bcmath php52-pecl-apc php52-pecl-memcache","title":"Installing PHP 5.2 with FastCGI and MySQL Support"},{"location":"installing-cherokee-with-php5-2-and-mysql-support-on-centos-5-3/#configuring-php-52","text":"There is not much to learn to configure PHP with Cherokee. Cherokee-admin ships a one-click wizard that will do everything for you. It will look for the PHP interpreter, it will check whether it supports FastCGI, and then it\u2019ll perform all the necessary operations to set it up on Cherokee. It requires a single operation to get PHP configured on a Virtual Server: Choose the virtual server your want to configure, and click on the Behavior tab. Once in there, click on Wizards. Now select Languages and run the PHP wizard. And, that is it. If you had php-cgi installed in your system, PHP should be configured now and listed on the Behavior tab. Make sure you mark its checkbox in the Final column Save your changes and reboot!","title":"Configuring PHP 5.2"},{"location":"installing-cherokee-with-php5-2-and-mysql-support-on-centos-5-3/#testing-php-52-and-getting-details-about-your-installation","text":"The document root of the default web site is /var/www/cherokee. We will now create a PHP info file (info.php) in that directory and call it in a browser. The file will display lots of useful details about our PHP installation, such as the installed PHP version. # vi /var/www/cherokee/info.php Save the file and call that it in a browser (e.g. http://10.0.0.10/info.php): As you see, PHP 5.2 is working, and it\u2019s working through FastCGI, as shown in the Server API line. If you scroll further down, you will see all modules that are already enabled in PHP 5.2 including MySQL. Links Cherokee: http://www.cherokee-project.com/ PHP: http://www.php.net/ MySQL: http://www.mysql.com/ CentOS: http://centos.org/","title":"Testing PHP 5.2 and getting details about your installation"},{"location":"installing-denyhosts-on-centos-5-6/","text":"If you have a CentOS server with public IP address, then the server is probably vulnerable to attacks from outside. Brute force attacks are usually done by forcing entry [log in] with the variation of the username and password repeatedly. What is DenyHosts ? DenyHosts is a script intended to be run by Linux system administrators to help thwart SSH server attacks (also known as dictionary based attacks and brute force attacks). If you\u2019ve ever looked at your ssh log (/var/log/secure on CentOS) you may be alarmed to see how many hackers attempted to gain access to your server. Hopefully, none of them were successful (but then again, how would you know?). Wouldn\u2019t it be better to automatically prevent that attacker from continuing to gain entry into your system? Read more on the DenyHosts website: http://denyhosts.sourceforge.net/ Installing DenyHosts on CentOS 5.6 Install the EPEL i386 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm Now install DenyHosts # yum install denyhosts Finally add it to start-up and then start it up. # chkconfig denyhosts on # service denyhosts start Any further configuration can be done by editing the configuration file /etc/denyhosts.conf You can watch IP attackers get blacklisted in the /etc/host.deny # tail -f /etc/hosts.deny","title":"Installing DenyHosts on CentOS 5.6"},{"location":"installing-denyhosts-on-centos-5-6/#what-is-denyhosts","text":"DenyHosts is a script intended to be run by Linux system administrators to help thwart SSH server attacks (also known as dictionary based attacks and brute force attacks). If you\u2019ve ever looked at your ssh log (/var/log/secure on CentOS) you may be alarmed to see how many hackers attempted to gain access to your server. Hopefully, none of them were successful (but then again, how would you know?). Wouldn\u2019t it be better to automatically prevent that attacker from continuing to gain entry into your system? Read more on the DenyHosts website: http://denyhosts.sourceforge.net/","title":"What is DenyHosts?"},{"location":"installing-denyhosts-on-centos-5-6/#installing-denyhosts-on-centos-56","text":"","title":"Installing DenyHosts on CentOS 5.6"},{"location":"installing-denyhosts-on-centos-5-6/#install-the-epel-i386-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm Now install DenyHosts # yum install denyhosts Finally add it to start-up and then start it up. # chkconfig denyhosts on # service denyhosts start Any further configuration can be done by editing the configuration file /etc/denyhosts.conf You can watch IP attackers get blacklisted in the /etc/host.deny # tail -f /etc/hosts.deny","title":"Install the EPEL i386 YUM Repository"},{"location":"installing-ffmpeg-on-centos/","text":"FFmpeg is a complete, cross-platform solution to record, convert and stream audio and video. It includes libavcodec \u2013 the leading audio/video codec library. Install the RPMForge i386 YUM Repository # rpm -Uvh http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.i386.rpm Installing FFmpeg on CentOS # yum install ffmpeg ffmpeg-devel ffmpeg-libpostproc opencore-amr # ffmpeg --help | more FFmpeg version 0.6.1, Copyright (c) 2000-2010 the FFmpeg developers built on Dec 4 2010 15:35:31 with gcc 4.1.2 20080704 (Red Hat 4.1.2-48) configuration: --prefix=/usr --libdir=/usr/lib64 --shlibdir=/usr/lib64 --mandir=/usr/share/man --incdir=/usr/include --disable-avisynth --extra-cflags='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fPIC' --enable-avfilter --enable-avfilter-lavf --enable-libdirac --enable-libfaac --enable-libfaad --enable-libfaadbin --enable-libgsm --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libx264 --enable-gpl --enable-nonfree --enable-postproc --enable-pthreads --enable-shared --enable-swscale --enable-vdpau --enable-version3 --enable-x11grab Optional: Installing FFmpeg-php # wget http://garr.dl.sourceforge.net/sourceforge/ffmpeg-php/ffmpeg-php-0.6.0.tbz2 # tar -xjf ffmpeg-php-0.6.0.tbz2 # cd ffmpeg-php-0.6.0 # phpize # ./configure # make # make install # echo \"extension=ffmpeg.so\" > /etc/php.d/ffmpeg.ini If you get the following error when running the command make to compile FFmpeg: make: * [ffmpeg_frame.lo] Error 1** In the version 0.6.0 of ffmpeg-php you will need to modify the file: ffmpeg_frame.c and replace every instance of PIX_FMT_RGBA32 with PIX_FMT_RGB32 Using Linux text editor, vi run the following commands: # vi ffmpeg_frame.c :%s/PIX_FMT_RGBA32/PIX_FMT_RGB32 :wq! Restart the compile and install FFmpeg-Php: # phpize # ./configure # make # make install","title":"Installing FFmpeg on CentOS 5.x"},{"location":"installing-ffmpeg-on-centos/#install-the-rpmforge-i386-yum-repository","text":"# rpm -Uvh http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.i386.rpm","title":"Install the RPMForge i386 YUM Repository"},{"location":"installing-ffmpeg-on-centos/#installing-ffmpeg-on-centos","text":"# yum install ffmpeg ffmpeg-devel ffmpeg-libpostproc opencore-amr # ffmpeg --help | more FFmpeg version 0.6.1, Copyright (c) 2000-2010 the FFmpeg developers built on Dec 4 2010 15:35:31 with gcc 4.1.2 20080704 (Red Hat 4.1.2-48) configuration: --prefix=/usr --libdir=/usr/lib64 --shlibdir=/usr/lib64 --mandir=/usr/share/man --incdir=/usr/include --disable-avisynth --extra-cflags='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fPIC' --enable-avfilter --enable-avfilter-lavf --enable-libdirac --enable-libfaac --enable-libfaad --enable-libfaadbin --enable-libgsm --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libx264 --enable-gpl --enable-nonfree --enable-postproc --enable-pthreads --enable-shared --enable-swscale --enable-vdpau --enable-version3 --enable-x11grab","title":"Installing FFmpeg on CentOS"},{"location":"installing-ffmpeg-on-centos/#optional-installing-ffmpeg-php","text":"# wget http://garr.dl.sourceforge.net/sourceforge/ffmpeg-php/ffmpeg-php-0.6.0.tbz2 # tar -xjf ffmpeg-php-0.6.0.tbz2 # cd ffmpeg-php-0.6.0 # phpize # ./configure # make # make install # echo \"extension=ffmpeg.so\" > /etc/php.d/ffmpeg.ini If you get the following error when running the command make to compile FFmpeg: make: * [ffmpeg_frame.lo] Error 1** In the version 0.6.0 of ffmpeg-php you will need to modify the file: ffmpeg_frame.c and replace every instance of PIX_FMT_RGBA32 with PIX_FMT_RGB32 Using Linux text editor, vi run the following commands: # vi ffmpeg_frame.c :%s/PIX_FMT_RGBA32/PIX_FMT_RGB32 :wq! Restart the compile and install FFmpeg-Php: # phpize # ./configure # make # make install","title":"Optional: Installing FFmpeg-php"},{"location":"installing-glusterfs-on-centos-53/","text":"GlusterFS is a clustered file-system capable of scaling to several peta-bytes. It aggregates various storage bricks over Infiniband RDMA or TCP/IP interconnect into one large parallel network file system. GlusterFS is one of the most sophisticated file system in terms of features and extensibility. Prerequisites We need to add the DAG yum repo for fuse and dependencies # rpm -Uhv http://apt.sw.be/redhat/el5/en/x86_64/rpmforge/RPMS//rpmforge-release-0.3.6-1.el5.rf.x86_64.rpm Install GlusterFS dependencies # yum install make gcc gcc-c++ sshfs build-essential flex bison byacc vim wget kernel-xen-devel fuse dkms dkms-fuse openib libibverbs iftop Download the latest GlusterFS from the repo http://ftp.gluster.com/pub/gluster/glusterfs/2.0/LATEST/CentOS/ and install ! # wget http://ftp.gluster.com/pub/gluster/glusterfs/2.0/LATEST/CentOS/glusterfs-client-2.0.6-1.el5.x86_64.rpm # wget http://ftp.gluster.com/pub/gluster/glusterfs/2.0/LATEST/CentOS/glusterfs-common-2.0.6-1.el5.x86_64.rpm # wget http://ftp.gluster.com/pub/gluster/glusterfs/2.0/LATEST/CentOS/glusterfs-devel-2.0.6-1.el5.x86_64.rpm # wget http://ftp.gluster.com/pub/gluster/glusterfs/2.0/LATEST/CentOS/glusterfs-server-2.0.6-1.el5.x86_64.rpm # yum install ./* --nogpgcheck Do a yum update, to get the new kernel and updates, after the reboot we\u2019ll continue with fuse # yum update REBOOT so that changes may take affect \u2026 Install FUSE with glusterfs patches # wget http://ftp.gluster.com/pub/gluster/glusterfs/fuse/fuse-2.7.4glfs11.tar.gz # tar -zxvf fuse-2.7.4glfs11.tar.gz # cd fuse-2.7.4glfs11 # ./configure # make # make install Create the partition && reclaim space reserved for super user, we set it to 1% instead of 5% # mkfs.ext3 -I 256 /dev/sda1 # tune2fs -m 1 /dev/sda1 Add the GlusterFS partition, mine is /dev/sda1 so add below to /etc/fstab /dev/sda1 /data ext3 defaults 0 0 and create the mount point e.g # mkdir /data and mount all the shares with # mount -a Time to configure Glusterfs (the server) (should be on all nodes) Create Gluster State folders # mkdir /data/export # mkdir /data/export-ns # mkdir -p /etc/glusterfs/ # vi /etc/glusterfs/glusterfsd.vol volume posix type storage/posix option directory /data/export end-volume volume locks type features/locks subvolumes posix end-volume volume brick type performance/io-threads option thread-count 8 subvolumes locks end-volume volume posix-ns type storage/posix option directory /data/export-ns end-volume volume locks-ns type features/locks subvolumes posix-ns end-volume volume brick-ns type performance/io-threads option thread-count 8 subvolumes locks-ns end-volume volume server type protocol/server option transport-type tcp option auth.addr.brick.allow * option auth.addr.brick-ns.allow * subvolumes brick brick-ns end-volume Now configure the client (should be on all nodes) # vi /etc/glusterfs/glusterfs.vol ### Add client feature and attach to remote subvolume of server1 volume brick1 type protocol/client option transport-type tcp/client option remote-host 10.0.0.5 # IP address of the remote brick option remote-subvolume brick # name of the remote volume end-volume ### Add client feature and attach to remote subvolume of server2 volume brick2 type protocol/client option transport-type tcp/client option remote-host 10.0.0.6 # IP address of the remote brick option remote-subvolume brick # name of the remote volume end-volume ### Add client feature and attach to remote subvolume of server3 volume brick3 type protocol/client option transport-type tcp/client option remote-host 10.0.0.8 # IP address of the remote brick option remote-subvolume brick # name of the remote volume end-volume ### Add client feature and attach to remote subvolume of server4 volume brick4 type protocol/client option transport-type tcp/client option remote-host 10.0.0.9 # IP address of the remote brick option remote-subvolume brick # name of the remote volume end-volume ### The file index on server1 volume brick1-ns type protocol/client option transport-type tcp/client option remote-host 10.0.0.5 # IP address of the remote brick option remote-subvolume brick-ns # name of the remote volume end-volume ### The file index on server2 volume brick2-ns type protocol/client option transport-type tcp/client option remote-host 10.0.0.6 # IP address of the remote brick option remote-subvolume brick-ns # name of the remote volume end-volume ### The file index on server3 volume brick3-ns type protocol/client option transport-type tcp/client option remote-host 10.0.0.8 # IP address of the remote brick option remote-subvolume brick-ns # name of the remote volume end-volume ### The file index on server4 volume brick4-ns type protocol/client option transport-type tcp/client option remote-host 10.0.0.9 # IP address of the remote brick option remote-subvolume brick-ns # name of the remote volume end-volume #The replicated volume with data volume afr1 type cluster/afr subvolumes brick1 brick2 end-volume #The replicated volume with data volume afr2 type cluster/afr subvolumes brick3 brick4 end-volume #The replicated volume with indexes volume afr-ns type cluster/afr subvolumes brick1-ns brick2-ns brick3-ns brick4-ns end-volume #The unification of all afr volumes (used for > 2 servers) volume unify type cluster/unify option scheduler rr # round robin option namespace afr-ns subvolumes afr1 afr2 end-volume We are going to mount the glusterfs disk to /mnt/glusterfs/ if /mnt/ is empty, do the following # mkdir -p /mnt/glusterfs/ Disable standard Glusterfsd startup # chkconfig glusterfsd off now add these lines to /etc/rc.local # /usr/sbin/glusterfs --disable-direct-io-mode --volfile=/etc/glusterfs/glusterfsd.vol # /usr/sbin/glusterfs --disable-direct-io-mode --volfile=/etc/glusterfs/glusterfs.vol /mnt/glusterfs/ Reboot one last time and your done .. df -h should look similar to, Filesystem Size Used Avail Use% Mounted on glusterfs#/etc/glusterfs/glusterfs.vol 445G 12G 411G 3% /mnt/glusterfs/","title":"Installing GlusterFS on CentOS 5.3"},{"location":"installing-jasper-reporting-for-mysql-on-centos-5-4/","text":"What is BitNami? BitNami Native Installers automate the setup of a BitNami Stack on Windows, Linux or Mac OS X. Each installer includes all of the software necessary to run out of the box (the Stack). The process is simple; just download, click next-next-next and you are done! BitNami Stacks are completely self contained and will not interfere with other software on your system. http://bitnami.org/ What is Jasper for MySQL? JasperServer Professional is a high-performance standalone and embeddable report server that provides non-technical business users with: Drag and drop ad hoc report building Drag and drop dashboarding with live-refresh, and mash-ups with external content A rich business metadata layer for easy ad hoc query Integrated and in-memory data analysis Built-in charting and integration with third-party visualization tools Self-service parameterized web reporting Report scheduling, distribution and historical versioning A secure report and metadata repository Access to any data source including relational, XML, Hibernate, EJB, POJO, and custom Row and column level data security http://www.jaspersoft.com/jasperserver Preliminary Note: I am using a CentOS 5.4 x86_64 base installation in this tutorial server1.example.co.za (IP 10.0.0.100): CentOS 5.4 x86_64 Base installation Download and Install BitNami JasperSever Stack # wget http://bitnami.org/files/stacks/jasperserver/bitnami-jasperserver-3.5.0-0-linux-installer.bin # chmod 755 ./bitnami-jasperserver-3.5.0-0-linux-installer.bin # ./bitnami-jasperserver-3.5.0-0-linux-installer.bin ---------------------------------------------------------------------------- Welcome to the BitNami JasperServer Stack Setup Wizard. ---------------------------------------------------------------------------- Installation folder Please, choose a folder to install BitNami JasperServer Stack Select a folder [/opt/jasperserver-3.5.0-0]: ---------------------------------------------------------------------------- MySQL Information Please enter your MySQL database information: MySQL Server port [3306]: ---------------------------------------------------------------------------- MySQL Credentials Please enter your database root user password MySQL Server root password : Re-enter password : ---------------------------------------------------------------------------- Setup is now ready to begin installing BitNami JasperServer Stack on your computer. Do you want to continue? [Y/n]: In this installation I went ahead and chose all the defaults Note: if you get this error: -bash: ./bitnami-jasperserver-3.5.0-0-linux-installer.bin: /lib/ld-linux.so.2: bad ELF interpreter: No such file or directory make sure the i386 version of ibstdc++ is installed: # rpm -qa | grep ibstdc++ # yum install libstdc++ Starting and Stopping the JasperServer # ./catalina.sh start # ./catalina.sh stop Once you have started the JasperServer point your browser to the following URL to access the JasperServer GUI http://server1.example.co.za:8080/jasperserver/login.html Now your MySQL reporting can begin.","title":"Installing Jasper reporting for MySQL on CentOS 5.4"},{"location":"installing-lcmp-stack-on-centos-5-5/","text":"LCMP is an acronym for a stack of free, open source software from the first letters of Linux (operating system), Cherokee HTTP Server, MySQL and Perl/PHP/Python. These are the principal components to build a viable general purpose web server. LCMP \u2013 Linux.Cherokee.MySQL.PHP/Perl/Python In this tutorial we will be installing the following open source software components to build the LCMP stack. CentOS 5.5 (operating system), Cherokee 1.0.6 (web server), MySQL 5.0.77 (database server), PHP 5.3.3, Perl 5.8.8, Python 2.4.3 Before we start just some general house keeping. The base CentOS 5.5 server hostname and IP address in this tutorial: centos01.how2centos.com (IP 10.0.0.3) The assumption, for this CentOS 5.5 LCMP tutorial, is that you are running as root and have a medium understanding of the software required. # yum install yum-priorities Download and install the relevant YUM install repositories # rpm -Uhv http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.3.6-1.el5.rf.i386.rpm # rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm # rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/i386/ius-release-1.0-8.ius.el5.noarch.rpm Install Cherokee web server and RRDtool (allows for graphs on the vhosts) # yum install cherokee # yum install rrdtool Install MySQL server # yum install mysql mysql-server Finally install PHP, Perl and Python. Note: If you upgrading make sure you remove your previous version of PHP # yum install php53u-pear php53u php53u-cli php53u-common php53u-devel php53u-gd php53u-mbstring php53u-mcrypt php53u-mysql php53u-pdo php53u-soap php53u-xml php53u-xmlrpc php53u-bcmath php53u-pecl-apc php53u-pecl-memcache php53u-snmp # yum update perl python Make sure everything that needs to be started at boot is on # chkconfig cherokee on # chkconfig mysqld on Create a PHP info page to view your newly install LCMP Stack # vi /var/www/cherokee/phpinfo.php Copy the apc.php file (if you\u2019re using APC) to the same directory. # cp /usr/share/doc/php53-pecl-apc-3.1.4/apc.php /var/www/cherokee/ Start the required services # service mysqld start # service cherokee start Lastly we\u2019ll configure Cherokee\u2019s default vhost to use PHP (video below) # cherokee-admin -b Once that\u2019s done, visit http://your.server.address/apc.php and http://your.server.address/phpinfo.php","title":"Installing LCMP stack on CentOS 5.5"},{"location":"installing-nvidia-display-drivers-on-centos-5-x/","text":"After you have installed CentOS, you see that your Desktop is running quite a bit slower than you expected, everything is jerky and your pretty ticked off at this point in time. What you need is not a psychiatrist, but to install the drivers for your graphics card. This will solve the jerky issues you are having and save you some frustration. This post will show you how to install the NVIDIA drivers on CentOS. CentOS does not have these drivers available in its default yum repository, so you will first need to add a repository to make the drivers available for installation. Firstly you will need to update your CentOS distribution, to do this simply type the following into your console/terminal: # su -c 'yum update' Enter your root password and follow the prompts that follow to complete the update. Next we need to install the RPMForge repository so that we can download and install the NVIDIA display drivers. The repository comes in two flavors, namely 64-bit and 32-bit. Make sure you select the correct repository to install. When in doubt, select 32-bit. For 32-bit installations (i.e. CentOS 5.x 32-bit installed): # wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.5.1-1.el5.rf.i386.rpm # su -c 'rpm -Uvh rpmforge-release-0.5.1-1.el5.rf.i386.rpm' Enter your root password to complete the installation. For 64-bit installations (i.e. CentOS 5.x 64-bit installed): # wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.5.1-1.el5.rf.x86_64.rpm # su -c 'rpm -Uvh rpmforge-release-0.5.1-1.el5.rf.x86_64.rpm' Enter your root password to complete the installation. Once the repository has been installed, we can finally install the NVIDIA display driver. To do this simply enter the following into your terminal/console: For 32-bit installations (i.e. CentOS 5.x 32-bit installed): # su -c 'yum install dkms-nvidia-x11-drv.i386' Enter your root password and follow the prompts that follow. For 64-bit installations (i.e. CentOS 5.x 64-bit installed): # su -c 'yum install dkms-nvidia-x11-drv.x86_64' Enter your root password and follow the prompts that follow. Once the drivers have been installed, you can reboot your machine and experience CentOS without the jerky after effects. If you would like to customize your settings after you have rebooted, you can do so by using the NVIDIA settings applications. To open the application you can simply type the following into a console/terminal: # su -c 'nvidia-settings' Enter your root password, a dialog will appear where you can customize your display settings. If you change anything, please remember to click the SAVE Configuration button. If you get the following error \u201cYou do not appear to be using the NVIDIA X driver\u2026..\u201d, then you have not rebooted your machine, so do so now to enjoy the benefits of your NVIDIA display. If you are experiencing any problems, then please post a reply and I will help you sort it out. Thanks for taking the time to read this post. Please share it with your friends.","title":"Installing NVIDIA display drivers on CentOS 5.5"},{"location":"installing-php-5-3-3-on-centos-5-5-tutorial/","text":"Update: This tutorial will install PHP 5.3.6 In celebration of CentOS now leading the Linux distribution statistics on web servers, with almost 30% of all Linux servers, we thought it fitting that in this tutorial we will show you how to install PHP 5.3.3 (Supports the Kohana Framework) with APC and Memcached on CentOS 5.5. The assumption for this CentOS 5.5 tutorial is that you are running as root and have a basic understanding of the software required but if you follow this tutorial you should be able to complete the task successfully. Preliminary Note: I am using a CentOS 5.5 32bit server in this tutorial: centos01.how2centos.com (IP 10.0.0.3) # yum install yum-priorities Installing PHP 5.3 on CentOS 5.5 i386 Install the EPEL i386 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm Install the IUS i386 YUM Repository # rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/i386/ius-release-1.0-10.ius.el5.noarch.rpm # yum install httpd NOTE: If you have a previously installed version of PHP run this command. # yum remove php php-* # yum install php53u-pear php53u php53u-cli php53u-common php53u-devel php53u-gd php53u-mbstring php53u-mcrypt php53u-mysql php53u-pdo php53u-soap php53u-xml php53u-xmlrpc php53u-bcmath php53u-pecl-apc php53u-pecl-memcache php53u-snmp UPDATE: The above will install APC version 3.1.9 which does not have the bug mentioned below. NOTE: Version 3.1.4 of APC has a bug that will give you this error in you error.log file PHP Warning: require(): Unable to allocate memory for pool. To resolve this do the following # yum remove php53u-pecl-apc # yum update php53u-pecl-apc --enablerepo=ius-testing # vi /var/www/html/phpinfo.php # chkconfig httpd on # service httpd start Finally browse to your phpinfo.php http://10.0.0.3/phpinfo.php and view your newly configured PHP 5.3.3 Apache server.","title":"Installing PHP 5.3.3 on CentOS 5.5 Tutorial"},{"location":"installing-php-5-3-3-on-centos-5-5-tutorial/#installing-php-53-on-centos-55-i386","text":"","title":"Installing PHP 5.3 on CentOS 5.5 i386"},{"location":"installing-php-5-3-3-on-centos-5-5-tutorial/#install-the-epel-i386-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm","title":"Install the EPEL i386 YUM Repository"},{"location":"installing-php-5-3-3-on-centos-5-5-tutorial/#install-the-ius-i386-yum-repository","text":"# rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/i386/ius-release-1.0-10.ius.el5.noarch.rpm # yum install httpd NOTE: If you have a previously installed version of PHP run this command. # yum remove php php-* # yum install php53u-pear php53u php53u-cli php53u-common php53u-devel php53u-gd php53u-mbstring php53u-mcrypt php53u-mysql php53u-pdo php53u-soap php53u-xml php53u-xmlrpc php53u-bcmath php53u-pecl-apc php53u-pecl-memcache php53u-snmp UPDATE: The above will install APC version 3.1.9 which does not have the bug mentioned below. NOTE: Version 3.1.4 of APC has a bug that will give you this error in you error.log file PHP Warning: require(): Unable to allocate memory for pool. To resolve this do the following # yum remove php53u-pecl-apc # yum update php53u-pecl-apc --enablerepo=ius-testing # vi /var/www/html/phpinfo.php # chkconfig httpd on # service httpd start Finally browse to your phpinfo.php http://10.0.0.3/phpinfo.php and view your newly configured PHP 5.3.3 Apache server.","title":"Install the IUS i386 YUM Repository"},{"location":"installing-php-5-3-on-centos-5-7/","text":"The assumption for installing PHP 5.3 on CentOS 5.7 tutorial is that you are running as root and have a basic understanding of the software required but if you follow this tutorial you should be able to complete the task successfully. Install Yum Priorities For a brief overview on and how to configure Yum Priorities you can follow the instructions outlined in our Install YUM Priorities on CentOS tutorial. # yum install yum-priorities Installing PHP 5.3 on CentOS 5.7 x86_64 Install the EPEL x86_64 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm Install the IUS x86_64 YUM Repository # rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/x86_64/ius-release-1.0-10.ius.el5.noarch.rpm # yum install php53u php53u-common php53u-devel # php -v PHP 5.3.8 (cli) (built: Aug 23 2011 06:33:32) Copyright (c) 1997-2011 The PHP Group Zend Engine v2.3.0, Copyright (c) 1998-2011 Zend Technologies Installing PHP 5.3 on CentOS 5.7 i386 Install the EPEL i386 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm Install the IUS i386 YUM Repository # rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/i386/ius-release-1.0-10.ius.el5.noarch.rpm # yum install php53u php53u-common php53u-devel # php -v PHP 5.3.8 (cli) (built: Aug 23 2011 06:33:32) Copyright (c) 1997-2011 The PHP Group Zend Engine v2.3.0, Copyright (c) 1998-2011 Zend Technologies","title":"Installing PHP 5.3 on CentOS 5.7"},{"location":"installing-php-5-3-on-centos-5-7/#install-yum-priorities","text":"For a brief overview on and how to configure Yum Priorities you can follow the instructions outlined in our Install YUM Priorities on CentOS tutorial. # yum install yum-priorities","title":"Install Yum Priorities"},{"location":"installing-php-5-3-on-centos-5-7/#installing-php-53-on-centos-57-x86_64","text":"","title":"Installing PHP 5.3 on CentOS 5.7 x86_64"},{"location":"installing-php-5-3-on-centos-5-7/#install-the-epel-x86_64-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm","title":"Install the EPEL x86_64 YUM Repository"},{"location":"installing-php-5-3-on-centos-5-7/#install-the-ius-x86_64-yum-repository","text":"# rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/x86_64/ius-release-1.0-10.ius.el5.noarch.rpm # yum install php53u php53u-common php53u-devel # php -v PHP 5.3.8 (cli) (built: Aug 23 2011 06:33:32) Copyright (c) 1997-2011 The PHP Group Zend Engine v2.3.0, Copyright (c) 1998-2011 Zend Technologies","title":"Install the IUS x86_64 YUM Repository"},{"location":"installing-php-5-3-on-centos-5-7/#installing-php-53-on-centos-57-i386","text":"","title":"Installing PHP 5.3 on CentOS 5.7 i386"},{"location":"installing-php-5-3-on-centos-5-7/#install-the-epel-i386-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm","title":"Install the EPEL i386 YUM Repository"},{"location":"installing-php-5-3-on-centos-5-7/#install-the-ius-i386-yum-repository","text":"# rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/i386/ius-release-1.0-10.ius.el5.noarch.rpm # yum install php53u php53u-common php53u-devel # php -v PHP 5.3.8 (cli) (built: Aug 23 2011 06:33:32) Copyright (c) 1997-2011 The PHP Group Zend Engine v2.3.0, Copyright (c) 1998-2011 Zend Technologies","title":"Install the IUS i386 YUM Repository"},{"location":"installing-php-5-4-on-centos-5-8/","text":"This tutorial is intended for system administrators wanting to install PHP 5.4 on CentOS 5.8 The reader should know how to configure a web server or application server and have basic knowledge of the HTTP protocol. Once finished the reader should have PHP 5.4 running with the default configuration. Install Yum Priorities For a brief overview on and how to configure Yum Priorities you can follow the instructions outlined in our Install YUM Priorities on CentOS tutorial. # yum install yum-priorities Installing PHP 5.4 on CentOS 5.8 x86_64 Install the EPEL x86_64 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm Install the IUS x86_64 YUM Repository # rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/x86_64/ius-release-1.0-10.ius.el5.noarch.rpm # yum install php54 php54-common php54-devel # php -v PHP 5.4.5 (cli) (built: Jul 23 2012 10:10:54) Copyright (c) 1997-2012 The PHP Group Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies Installing PHP 5.4 on CentOS 5.8 i386 Install the EPEL i386 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm Install the IUS i386 YUM Repository # rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/i386/ius-release-1.0-10.ius.el5.noarch.rpm # yum install php54 php54-common php54-devel # php -v PHP 5.4.5 (cli) (built: Jul 23 2012 10:10:54) Copyright (c) 1997-2012 The PHP Group Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies","title":"Installing PHP 5.4 on CentOS 5.8"},{"location":"installing-php-5-4-on-centos-5-8/#install-yum-priorities","text":"For a brief overview on and how to configure Yum Priorities you can follow the instructions outlined in our Install YUM Priorities on CentOS tutorial. # yum install yum-priorities","title":"Install Yum Priorities"},{"location":"installing-php-5-4-on-centos-5-8/#installing-php-54-on-centos-58-x86_64","text":"","title":"Installing PHP 5.4 on CentOS 5.8 x86_64"},{"location":"installing-php-5-4-on-centos-5-8/#install-the-epel-x86_64-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm","title":"Install the EPEL x86_64 YUM Repository"},{"location":"installing-php-5-4-on-centos-5-8/#install-the-ius-x86_64-yum-repository","text":"# rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/x86_64/ius-release-1.0-10.ius.el5.noarch.rpm # yum install php54 php54-common php54-devel # php -v PHP 5.4.5 (cli) (built: Jul 23 2012 10:10:54) Copyright (c) 1997-2012 The PHP Group Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies","title":"Install the IUS x86_64 YUM Repository"},{"location":"installing-php-5-4-on-centos-5-8/#installing-php-54-on-centos-58-i386","text":"","title":"Installing PHP 5.4 on CentOS 5.8 i386"},{"location":"installing-php-5-4-on-centos-5-8/#install-the-epel-i386-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm","title":"Install the EPEL i386 YUM Repository"},{"location":"installing-php-5-4-on-centos-5-8/#install-the-ius-i386-yum-repository","text":"# rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/5/i386/ius-release-1.0-10.ius.el5.noarch.rpm # yum install php54 php54-common php54-devel # php -v PHP 5.4.5 (cli) (built: Jul 23 2012 10:10:54) Copyright (c) 1997-2012 The PHP Group Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies","title":"Install the IUS i386 YUM Repository"},{"location":"installing-php-5-4-on-centos-6-2/","text":"The assumption for installing PHP 5.4 on CentOS 6.2 tutorial is that you are running as root and have a basic understanding of the software required but if you follow this tutorial you should be able to complete the task successfully. Install Yum Priorities For a brief overview on and how to configure Yum Priorities you can follow the instructions outlined in our Install YUM Priorities on CentOS tutorial. # yum install yum-priorities Installing PHP 5.4 on CentOS 6.2 x86_64 Install the EPEL x86_64 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm Install the IUS x86_64 YUM Repository # rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/6/x86_64/ius-release-1.0-10.ius.el6.noarch.rpm # yum install php54 php54-common php54-devel # php -v PHP 5.4.5 (cli) (built: Jul 23 2012 10:10:54) Copyright (c) 1997-2012 The PHP Group Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies Installing PHP 5.4 on CentOS 6.2 i386 Install the EPEL i386 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm Install the IUS i386 YUM Repository # rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/6/i386/ius-release-1.0-10.ius.el6.noarch.rpm # yum install php54 php54-common php54-devel # php -v PHP 5.4.5 (cli) (built: Jul 23 2012 10:10:54) Copyright (c) 1997-2012 The PHP Group Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies","title":"Installing PHP 5.4 on CentOS 6.2"},{"location":"installing-php-5-4-on-centos-6-2/#install-yum-priorities","text":"For a brief overview on and how to configure Yum Priorities you can follow the instructions outlined in our Install YUM Priorities on CentOS tutorial. # yum install yum-priorities","title":"Install Yum Priorities"},{"location":"installing-php-5-4-on-centos-6-2/#installing-php-54-on-centos-62-x86_64","text":"","title":"Installing PHP 5.4 on CentOS 6.2 x86_64"},{"location":"installing-php-5-4-on-centos-6-2/#install-the-epel-x86_64-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm","title":"Install the EPEL x86_64 YUM Repository"},{"location":"installing-php-5-4-on-centos-6-2/#install-the-ius-x86_64-yum-repository","text":"# rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/6/x86_64/ius-release-1.0-10.ius.el6.noarch.rpm # yum install php54 php54-common php54-devel # php -v PHP 5.4.5 (cli) (built: Jul 23 2012 10:10:54) Copyright (c) 1997-2012 The PHP Group Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies","title":"Install the IUS x86_64 YUM Repository"},{"location":"installing-php-5-4-on-centos-6-2/#installing-php-54-on-centos-62-i386","text":"","title":"Installing PHP 5.4 on CentOS 6.2 i386"},{"location":"installing-php-5-4-on-centos-6-2/#install-the-epel-i386-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm","title":"Install the EPEL i386 YUM Repository"},{"location":"installing-php-5-4-on-centos-6-2/#install-the-ius-i386-yum-repository","text":"# rpm -Uvh http://dl.iuscommunity.org/pub/ius/stable/Redhat/6/i386/ius-release-1.0-10.ius.el6.noarch.rpm # yum install php54 php54-common php54-devel # php -v PHP 5.4.5 (cli) (built: Jul 23 2012 10:10:54) Copyright (c) 1997-2012 The PHP Group Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies","title":"Install the IUS i386 YUM Repository"},{"location":"installing-puppet-dashboard-on-centos-5-5/","text":"The Puppet Dashboard is a web front end that keeps you informed and in control of everything going on in your Puppet ecosystem. It currently functions as a reporting dashboard and an external node repository and will soon do much more, including having better marketing copy. Fundamentally, Dashboard lets you do two things: configure nodes using parameters, classes and groups for use as an external nodes tool; and monitor the status of nodes through real-time reporting and versioned change tracking. To learn more about the Puppet Dashboard and it\u2019s different views go read: A tour of the Puppet Dashboard Preliminary Note: I am using a CentOS 5.5 i386 base installation in this tutorial. puppetmaster.how2centos.com (IP 10.0.0.100): CentOS 5.5 i386 base installation The assumption is that you have a working knowledge of installing/configuring Puppet. If not then read this article: Installing Puppet Master and Client on CentOS Let\u2019s Begin # yum install yum-priorities # rpm -Uhv http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.3.6-1.el5.rf.i386.rpm # rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm # yum update # yum install ruby rubygems rubygem-rails rubygem-sqlite3-ruby ruby-devel ruby-mysql # yum install mysql-server # service mysqld start # chkconfig mysqld on # yum install puppet puppet-server # wget http://puppetlabs.com/downloads/dashboard/puppet-dashboard-1.0.4.tgz # tar zxvf puppet-dashboard-1.0.4.tgz # mv puppetlabs-puppet-dashboard-071acf4/ /opt/puppet-dashboard # cd /opt/puppet-dashboard # cp config/database.yml.example config/database.yml # vi config/database.yml # database.yml # ============ # # The `config/database.yml` file contains your custom settings for connecting # the Dashboard to a database. You must create the databases you plan to use # and add their connection details here to use the Dashboard. # # Format # ------ # # This file is split into sections describing different environments, each # optimized for a different use. If you're only using the Dashboard, you # only need to configure the \"production\" environment. # # Lines starting with an octothorpe (\"#\") are comments. Uncommented, # unindented lines start a new environment (e.g., \"production\"). Indented # lines below an unindented line are settings related to that environment. # # Example # ------- # # # Section describing the \"production\" environment, don't change this line: # production: # # Connect to a database named \"dashboard\": # database: dashboard # # Connect to this database as the \"root\" user: # username: root # # Connect to this database using \"mypassword\" as the password: # password: mypassword # # Use \"utf8\" as the database character encoding, don't change this line: # encoding: utf8 # # Use a MySQL database, don't change this line: # adapter: mysql # # Environments # ------------ # # The \"production\" environment is optimized for fast performance, like when # you deploy the Dashboard for use in your organization. It is used when: # * Starting a console with: script/console production # * Starting a server with: scipt/server -e production # * Running a rake task with: rake RAILS_ENV=production ... production: database: dashboard username: root password: encoding: utf8 adapter: mysql # The \"development\" environment is optimized for those developing the # Dashboard software and reloads code as it's modified. It is used when: # * Starting a console with: script/console # * Starting a server with: script/server # * Running a rake task with: rake ... development: database: dashboard username: root password: encoding: utf8 adapter: mysql # The \"test\" environment is used for running tests. WARNING: The database # defined for this will be erased and re-generated from your development # database when you run \"rake\". Do NOT set this db to the same as # \"development\" or \"production\". test: database: dashboard_test username: root password: encoding: utf8 adapter: mysql # cd /opt/puppet-dashboard # rake install # rake RAILS_ENV=production db:create # rake RAILS_ENV=production db:migrate Start up the Puppet Dashboard to see if it works # /opt/puppet-dashboard/script/server => Booting WEBrick => Rails 2.3.5 application starting on http://0.0.0.0:3000 => Call with -d to detach => Ctrl-C to shutdown server [2011-03-07 09:24:49] INFO WEBrick 1.3.1 [2011-03-07 09:24:49] INFO ruby 1.8.5 (2006-08-25) [x86_64-linux] [2011-03-07 09:24:50] INFO WEBrick::HTTPServer#start: pid=5235 port=3000 [2010-05-25 21:08:05] INFO going to shutdown ... [2010-05-25 21:08:05] INFO WEBrick::HTTPServer#start done. Exiting # vi /etc/sysconfig/puppet # The puppetmaster server PUPPET_SERVER=puppetmaster.how2centos.com # If you wish to specify the port to connect to do so here #PUPPET_PORT=8140 # Where to log to. Specify syslog to send log messages to the system log. PUPPET_LOG=/var/log/puppet/puppet.log # You may specify other parameters to the puppet client here #PUPPET_EXTRA_OPTS=--waitforcert=500 Append the following line to the Puppet Master config: PUPPETMASTER_EXTRA_OPTS=\u201d\u2013\u2013reports puppet_dashboard\u201d # vi /etc/sysconfig/puppetmaster # Location of the main manifest #PUPPETMASTER_MANIFEST=/etc/puppet/manifests/site.pp # Where to log general messages to. # Specify syslog to send log messages to the system log. #PUPPETMASTER_LOG=syslog # You may specify an alternate port or an array of ports on which # puppetmaster should listen. Default is: 8140 # If you specify more than one port, the puppetmaster ist automatically # started with the servertype set to mongrel. This might be interesting # if you'd like to run your puppetmaster in a loadbalanced cluster. # Please note: this won't setup nor start any loadbalancer. # If you'd like to run puppetmaster with mongrel as servertype but only # on one (specified) port, you have to add --servertype=mongrel to # PUPPETMASTER_EXTRA_OPTS. # Default: Empty (Puppetmaster isn't started with mongrel, nor on a # specific port) # # Please note: Due to reduced options in the rc-functions lib in RHEL/Centos # versions prior to 5, this feature won't work. Fedora versions >= 8 are # known to work. #PUPPETMASTER_PORTS=\"\" # Puppetmaster on a different port, run with standard webrick servertype #PUPPETMASTER_PORTS=\"8141\" # Example with multiple ports which will start puppetmaster with mongrel # as a servertype #PUPPETMASTER_PORTS=( 18140 18141 18142 18143 ) # You may specify other parameters to the puppetmaster here #PUPPETMASTER_EXTRA_OPTS=--no-ca PUPPETMASTER_EXTRA_OPTS=\"--reports puppet_dashboard\" Append the following line to the Puppet Client config: report = true # vi /etc/puppet/puppet.conf [main] # Where Puppet stores dynamic and growing data. # The default value is '/var/puppet'. vardir = /var/lib/puppet # The Puppet log directory. # The default value is '$vardir/log'. logdir = /var/log/puppet # Where Puppet PID files are kept. # The default value is '$vardir/run'. rundir = /var/run/puppet # Where SSL certificates are kept. # The default value is '$confdir/ssl'. ssldir = $vardir/ssl [puppetd] # The file in which puppetd stores a list of the classes # associated with the retrieved configuratiion. Can be loaded in # the separate ``puppet`` executable using the ``--loadclasses`` # option. # The default value is '$confdir/classes.txt'. classfile = $vardir/classes.txt # Where puppetd caches the local configuration. An # extension indicating the cache format is added automatically. # The default value is '$confdir/localconfig'. localconfig = $vardir/localconfig report = true # mkdir -p /var/lib/puppet/lib/puppet/reports/ # cp /opt/puppet-dashboard/ext/puppet/puppet_dashboard.rb /var/lib/puppet/lib/puppet/reports/ # service puppetmaster start # service puppet start # chkconfig puppet on # chkconfig puppetmaster on # cd /opt/puppet-dashboard # rake reports:import (in /opt/puppet-dashboard) Importing 0 reports from /var/lib/puppet/reports/ Importing: 100% |#############################################| Time: 00:00:00 0 of 0 reports imported # vi /etc/init.d/puppet-dashboard #!/bin/bash # # chkconfig: 2345 80 05 # Description: Puppet Dashboard init.d script # Hacked by : How2CentOS - http://www.how2centos.com # Get function from functions library . /etc/init.d/functions # Start the service Puppet Dashboard start() { echo -n \"Starting Puppet Dashboard: \" /usr/bin/ruby /opt/puppet-dashboard/script/server >/dev/null 2>&1 & ### Create the lock file ### touch /var/lock/subsys/puppetdb success $\"Puppet Dashboard startup\" echo } # Restart the service Puppet Dashboard stop() { echo -n \"Stopping Puppet Dashboard: \" kill -9 `ps ax | grep \"/usr/bin/ruby /opt/puppet-dashboard/script/server\" | grep -v grep | awk '{ print $1 }'` >/dev/null 2>&1 ### Now, delete the lock file ### rm -f /var/lock/subsys/puppetdb success $\"Puppet Dashboard shutdown\" echo } ### main logic ### case \"$1\" in start) start ;; stop) stop ;; status) status Puppet DB ;; restart|reload|condrestart) stop start ;; *) echo $\"Usage: $0 {start|stop|restart|reload|status}\" exit 1 esac exit 0 # chmod 755 /etc/init.d/puppet-dashboard # chkconfig --add puppet-dashboard # chkconfig puppet-dashboard on # service puppet-dashboard start Starting Puppet Dashboard: [ OK ]","title":"Installing Puppet Dashboard on CentOS 5.5"},{"location":"installing-puppet-master-with-foreman-frontend-on-centos-5-5/","text":"In this CentOS 5.5 tutorial we will be installing Foreman on a CentOS 5.5 i386 server including Puppet Master and Puppet client. The assumption is that you have a basic to medium understanding of the software required but if you follow this tutorial you should be able to complete the task successfully. A bit on the software that we\u2019ll be using: Foreman Foreman is aimed to be a Single Address For All Machines Life Cycle Management. Foreman integrates with Puppet (and acts as web front end to it). Foreman takes care of bare bone provisioning until the point puppet is running, allowing Puppet to do what it does best. Foreman shows you Systems Inventory (based on Facter) and provides real time information about hosts status based on Puppet reports. Foreman creates everything you need when adding a new machine to your network. It\u2019s goal being automatically managing everything you would normally manage manually \u2013 that would eventually include DNS, DHCP, TFTP, PuppetCA, CMDB and everything else you might consider useful. With Foreman You Can Always Rebuild Your Machines From Scratch! Foreman is designed to work in a large enterprise, where multiple domains, subnets and puppetmasters are required. http://theforeman.org/ Preliminary Note: I am using a CentOS 5.5 i386 base installation in this tutorial with root access. foreman.how2centos.com (IP 10.0.0.100): CentOS 5.5 i386 base installation Lets begin by adding additional CentOS 5.5. repositories and installing the framework required by Foreman. # yum install yum-priorities # rpm -Uhv http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.3.6-1.el5.rf.i386.rpm # rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm cat > /etc/yum.repos.d/foreman.repo << EOF [foreman] name=Foreman Repo baseurl=http://yum.theforeman.org/stable gpgcheck=0 enabled=1 EOF Lets begin installing the framework starting with Puppet Master, client and MySQL # yum install puppet-server puppet # yum install mysql mysql-server mysql-devel ruby-mysql rubygem-activerecord Let do a basic Puppet Master and client configuration. # vi /etc/puppet/puppet.conf [main] # The Puppet log directory. # The default value is '$vardir/log'. logdir = /var/log/puppet # Where Puppet PID files are kept. # The default value is '$vardir/run'. rundir = /var/run/puppet # Where SSL certificates are kept. # The default value is '$confdir/ssl'. ssldir = $vardir/ssl [puppetd] # The file in which puppetd stores a list of the classes # associated with the retrieved configuratiion. Can be loaded in # the separate ``puppet`` executable using the ``--loadclasses`` # option. # The default value is '$confdir/classes.txt'. classfile = $vardir/classes.txt # Where puppetd caches the local configuration. An # extension indicating the cache format is added automatically. # The default value is '$confdir/localconfig'. localconfig = $vardir/localconfig # Enable reporting for Foreman report = true [puppetmasterd] storeconfigs = true dbadapter = mysql dbuser = puppet dbpassword = puppet dbserver = localhost dbsocket = /var/lib/mysql/mysql.sock rrddir=/var/lib/puppet/rrd rrdinterval=$runinterval rrdgraph=true reports=log, foreman # vi /etc/sysconfig/puppet # The puppetmaster server PUPPET_SERVER=foreman.how2centos.com # If you wish to specify the port to connect to do so here #PUPPET_PORT=8140 # Where to log to. Specify syslog to send log messages to the system log. PUPPET_LOG=/var/log/puppet/puppet.log # You may specify other parameters to the puppet client here #PUPPET_EXTRA_OPTS=--waitforcert=500 # mkdir /etc/puppet/manifests/classes/ # vi /etc/puppet/manifests/site.pp import \"classes/*\" node default { include sudo } # vi /etc/puppet/manifests/classes/sudo.pp class sudo { file { \"/etc/sudoers\": owner => \"root\", group => \"root\", mode => 440, } } Start MySQL and add it to startup # service mysqld start # chkconfig mysqld on Add the Puppet Database # mysql mysql> create database puppet; mysql> grant all privileges on puppet.* to puppet@localhost identified by 'puppet'; mysql> exit Bye Install Foreman and configure the Database and enable reporting. # yum install foreman Foreman uses a database, by default, SQLite is used, if you want to use other database (e.g. MySQL) please modify the configuration file under config/database.yml. # mv /etc/foreman/database.yml /etc/foreman/database.yml.old # vi /etc/foreman/database.yml production: adapter: mysql database: puppet username: puppet password: puppet host: localhost socket: \"/var/lib/mysql/mysql.sock\" To enable reporting in Foreman you'll be required to copy foreman-report.rb to your report directory, edit the $foreman_url=, and then add it to your master puppet.conf under the main section add: # cp /usr/share/foreman/extras/puppet/foreman/files/foreman-report.rb /usr/lib/ruby/site_ruby/1.8/puppet/reports/foreman.rb # vi /usr/lib/ruby/site_ruby/1.8/puppet/reports/foreman.rb # copy this file to your report dir - e.g. /usr/lib/ruby/1.8/puppet/reports/ # add this report in your puppetmaster reports - e.g, in your puppet.conf add: # reports=log, foreman # (or any other reports you want) # URL of your Foreman installation $foreman_url=\"http://foreman.how2centos.com:3000\" require 'puppet' require 'net/http' require 'uri' Puppet::Reports.register_report(:foreman) do Puppet.settings.use(:reporting) desc \"Sends reports directly to Foreman\" def process begin uri = URI.parse($foreman_url) http = Net::HTTP.new(uri.host, uri.port) if uri.scheme == 'https' then http.use_ssl = true http.verify_mode = OpenSSL::SSL::VERIFY_NONE end req = Net::HTTP::Post.new(\"/reports/create?format=yml\") req.set_form_data({'report' => to_yaml}) response = http.request(req) rescue Exception => e raise Puppet::Error, \"Could not send report to Foreman at #{$foreman_url}/reports/create?format=yml: #{e}\" end end end Finally to initialize the database schema type: # cd /usr/share/foreman/ # RAILS_ENV=production rake db:migrate Let start, and add to startup, the various componants and browse to your newly installed Puppet Master and client with Foreman frontend. # service puppetmaster start # service puppet start # service foreman start # chkconfig puppetmaster on # chkconfig puppet on # chkconfig foreman on Point your bowser to http://foreman.how2centos.com:3000","title":"Installing Puppet Master with Foreman frontend on CentOS 5.5"},{"location":"installing-puppet-on-centos-5/","text":"Puppet is a system for automating system administration tasks. Its automation saves you countless hours of frustration, monotony and reinventing the wheel. It lets you perform administrative task from a central systems to any number of systems running any variant of operating system. For a more complete description visit Puppet Labs. Installing the Puppet CentOS 5 packages Install the Puppet Repository rpm -ivh http://yum.puppetlabs.com/el/6/products/i386/puppetlabs-release-6-7.noarch.rpm Install the Puppet Master packages yum install puppet-server Install the Puppet Client packages yum install puppet A Simple Manifest: Managing Ownership of a File Step 1: Create a minimal manifest file called site.pp in /etc/puppet/manifests with the following content vi /etc/puppet/manifests/site.pp /etc/puppet/manifests/site.pp import \"classes/*\" node default { include sudo } Step 2: Next create the sudo.pp class in /etc/puppet/manifests/classes/ with the following content vi /etc/puppet/manifests/classes/sudo.pp class sudo { file { \"/etc/sudoers\": owner => \"root\", group => \"root\", mode => 440, } } This class which will ensure that the owner, group, and mode of the /etc/sudoers file will be set consistently across all systems that belong to that class. Step 3: Start the Puppet Master service and enable startup on boot service puppetmaster start chkconfig puppetmaster on Configuring Puppet Configure the puppet client to connect to the server and enable logging. Edit the file /etc/sysconfig/puppet and uncomment the PUPPET\\_LOG and PUPPET\\_SERVER line specifying the servers address. vi /etc/sysconfig/puppet # The puppetmaster server PUPPET_SERVER=PuppetMaster # If you wish to specify the port to connect to do so here #PUPPET_PORT=8140 # Where to log to. Specify syslog to send log messages to the system log. PUPPET_LOG=/var/log/puppet/puppet.log # You may specify other parameters to the puppet client here #PUPPET_EXTRA_OPTS=--waitforcert=500 The client will automatically pull configuration from the server every 30 minutes, start it as a service and enable startup on boot service puppet start chkconfig puppet on Sign the SSL key request from the Puppet Client In order for the two systems to communicate securely we need to create signed SSL certificates. You should be logged into both the Puppet Master and Puppet machines for this next step. puppetca --list server2.example.co.za puppetca --sign server2.example.co.za Signed server2.example.co.za","title":"Installing Puppet on CentOS 5"},{"location":"installing-puppet-on-centos-5/#installing-the-puppet-centos-5-packages","text":"","title":"Installing the Puppet CentOS 5 packages"},{"location":"installing-puppet-on-centos-5/#install-the-puppet-repository","text":"rpm -ivh http://yum.puppetlabs.com/el/6/products/i386/puppetlabs-release-6-7.noarch.rpm","title":"Install the Puppet Repository"},{"location":"installing-puppet-on-centos-5/#install-the-puppet-master-packages","text":"yum install puppet-server","title":"Install the Puppet Master packages"},{"location":"installing-puppet-on-centos-5/#install-the-puppet-client-packages","text":"yum install puppet","title":"Install the Puppet Client packages"},{"location":"installing-puppet-on-centos-5/#a-simple-manifest-managing-ownership-of-a-file","text":"","title":"A Simple Manifest: Managing Ownership of a File"},{"location":"installing-puppet-on-centos-5/#step-1-create-a-minimal-manifest-file-called-sitepp-in-etcpuppetmanifests-with-the-following-content","text":"vi /etc/puppet/manifests/site.pp /etc/puppet/manifests/site.pp import \"classes/*\" node default { include sudo }","title":"Step 1: Create a minimal manifest file called site.pp in /etc/puppet/manifests with the following content"},{"location":"installing-puppet-on-centos-5/#step-2-next-create-the-sudopp-class-in-etcpuppetmanifestsclasses-with-the-following-content","text":"vi /etc/puppet/manifests/classes/sudo.pp class sudo { file { \"/etc/sudoers\": owner => \"root\", group => \"root\", mode => 440, } } This class which will ensure that the owner, group, and mode of the /etc/sudoers file will be set consistently across all systems that belong to that class.","title":"Step 2: Next create the sudo.pp class in /etc/puppet/manifests/classes/ with the following content"},{"location":"installing-puppet-on-centos-5/#step-3-start-the-puppet-master-service-and-enable-startup-on-boot","text":"service puppetmaster start chkconfig puppetmaster on","title":"Step 3: Start the Puppet Master service and enable startup on boot"},{"location":"installing-puppet-on-centos-5/#configuring-puppet","text":"Configure the puppet client to connect to the server and enable logging. Edit the file /etc/sysconfig/puppet and uncomment the PUPPET\\_LOG and PUPPET\\_SERVER line specifying the servers address. vi /etc/sysconfig/puppet # The puppetmaster server PUPPET_SERVER=PuppetMaster # If you wish to specify the port to connect to do so here #PUPPET_PORT=8140 # Where to log to. Specify syslog to send log messages to the system log. PUPPET_LOG=/var/log/puppet/puppet.log # You may specify other parameters to the puppet client here #PUPPET_EXTRA_OPTS=--waitforcert=500 The client will automatically pull configuration from the server every 30 minutes, start it as a service and enable startup on boot service puppet start chkconfig puppet on","title":"Configuring Puppet"},{"location":"installing-puppet-on-centos-5/#sign-the-ssl-key-request-from-the-puppet-client","text":"In order for the two systems to communicate securely we need to create signed SSL certificates. You should be logged into both the Puppet Master and Puppet machines for this next step. puppetca --list server2.example.co.za puppetca --sign server2.example.co.za Signed server2.example.co.za","title":"Sign the SSL key request from the Puppet Client"},{"location":"installing-redmine-subversion-on-centos-5-5/","text":"In this CentOS 5.5 tutorial we will be installing Redmine and Subversion with LDAP authentication on a CentOS 5.5 i386 server. The assumption is that you have a basic to medium understanding of Apache and MySQL but if you follow this tutorial you should be able to complete the task successfully. A bit on the software that we\u2019ll be using: Redmine Redmine is a flexible project management web application. Written using Ruby on Rails framework, it is cross-platform and cross-database. An online demo can be found here: http://demo.redmine.org/ Subversion Subversion is a free/open-source version control system. That is, Subversion manages files and directories, and the changes made to them, over time. This allows you to recover older versions of your data, or examine the history of how your data changed. http://subversion.apache.org/ Preliminary Note: I am using a CentOS 5.5 i386 base installation in this tutorial. svn.how2centos.com (IP 10.0.0.100): CentOS 5.5 i386 base installation ldap.how2centos.com (IP 10.0.0.100): CentOS 5.5 i386 base installation redmine.how2centos.com (IP 10.0.0.100): CentOS 5.5 i386 base installation Lets begin by installing the framework required by the Redmine, Subversion and LDAP platform. # yum install yum-priorities # rpm -Uhv http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.3.6-1.el5.rf.i386.rpm # rpm -Uvh http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm # yum update # yum install mysql mysql-server # yum install httpd # yum install gcc-c++ # yum install ImageMagick ImageMagick-devel # yum install subversion mod_dav_svn # yum install perl-HTML-Parser perl-SVN-Notify # yum install ruby rubygems rubygem-rails rubygem-sqlite3-ruby ruby-devel ruby-mysql Next a couple of Ruby Gems # gem install rack -v 1.0.1 # gem install cgi_multipart_eof_fix # gem install coderay # gem install thin Now lets add the software to startup and start MySQL and Apache. # thin install # chkconfig thin on # chkconfig mysqld on # chkconfig httpd on # service mysqld start # service httpd start Configure Thin # thin config -C /etc/thin/(config-name).yml -c (rails-app-root-path) --servers (number-of-threads) -e (environment) (application-name) = redmine (rails-app-root-path) = /opt/redmine (number-of-threads) = 3 (environment) = production # thin config -C /etc/thin/redmine.yml -c /opt/redmine --servers 3 -e production Download, install and configure the Redmine framework. # cd /opt/ # http://rubyforge.org/frs/download.php/73457/redmine-1.0.4.tar.gz # tar zxvf redmine-1.0.4.tar.gz # mv redmine-1.0.4 redmine # chmod -R a+rx /opt/redmine/public/ # cd /opt/redmine # chmod -R 755 files log tmp # cd /opt/redmine/config/ # cp database.yml.example database.yml # vi /opt/redmine/config/database.yml production: adapter: mysql database: redmine host: redmine username: redmine password: redmine encoding: utf8 # mysql mysql> create database redmine default character set utf8; mysql> grant all on redmine.* to redmine@localhost identified by 'redmine'; mysql> flush privileges; mysql> quit # cd /opt/redmine # RAILS_ENV=production rake config/initializers/session_store.rb # RAILS_ENV=production rake db:migrate Configure Apache and add a Redmine config file # vi /etc/httpd/conf/httpd.conf Uncomment NameVirtualHost *:80 # vi /etc/httpd/conf.d/redmine.conf <VirtualHost *:80> DocumentRoot /opt/redmine ServerName redmine.how2centos.com <Proxy balancer://redminecluster> BalancerMember http://127.0.0.1:3000 BalancerMember http://127.0.0.1:3001 BalancerMember http://127.0.0.1:3002 </Proxy> ProxyPass / balancer://redminecluster/ ProxyPassReverse / balancer://redminecluster/ ErrorLog /var/log/httpd/redmine_error.log CustomLog /var/log/httpd/redmine_access.log combined </VirtualHost> Setup Redmine to email # cp /opt/redmine/config/email.yml.example /opt/redmine/config/email.yml # vi /opt/redmine/config/email.yml production: delivery_method: :smtp smtp_settings: address: smtp.how2centos.com port: 25 domain: how2centos.com # authentication: :login # user_name: \"redmine@example.net\" # password: \"redmine\" development: delivery_method: :smtp smtp_settings: address: 127.0.0.1 port: 25 domain: how2centos.com # authentication: :login # user_name: \"redmine@example.net\" # password: \"redmine\" Start thin and Redmine # service thin start Create a Subversion repository and start the SVN deamon # svnadmin create /opt/svn/repo # svnserve -d Add a Subversion Apache configuration file # vi /etc/httpd/conf.d/svn.conf LoadModule dav_svn_module modules/mod_dav_svn.so LoadModule authz_svn_module modules/mod_authz_svn.so LDAPSharedCacheFile /root/LDAPSharedCacheFile LDAPSharedCacheSize 200000 LDAPCacheEntries 1024 LDAPCacheTTL 600 LDAPOpCacheEntries 1024 LDAPOpCacheTTL 600 <VirtualHost *:80> DocumentRoot /opt/svn ServerName svn.how2centos.com ErrorLog /var/log/httpd/svn_error.log LogLevel warn CustomLog /var/log/httpd/svn_access.log combined ServerSignature On <Location \"/\"> AuthBasicProvider ldap AuthType Basic AuthzLDAPAuthoritative off AuthName \"How2CentOS SVN server\" AuthLDAPURL \"ldap://ldap.how2centos.com/CN=Users,DC=how2centos,DC=com?sAMAccountName\" AuthLDAPBindDN \"CN=ldap,CN=Users,DC=how2centos,DC=com\" AuthLDAPBindPassword LDAPpassword require valid-user </Location> <Location \"/svn\"> DAV svn SVNParentPath /opt/svn SVNListParentPath On SVNReposName \"How2CentOS SVN Repo\" </Location> <Location /cache-info> SetHandler ldap-status </Location> </VirtualHost> # chown -R apache:apache /opt/svn/* # chmod -R 770 /opt/svn/* Restart Apache for changes to take effect # Service httpd restart Browse to newly setup Redmine and Subversion setup http://redmine.how2centos.com http://svn.how2centos.com","title":"Installing Redmine &#038; Subversion on CentOS 5.5"},{"location":"installing-smokeping-on-centos-5-5/","text":"In this CentOS 5.5 tutorial we will be installing Smokeping and SmokeTrace on a CentOS 5.5 i386 server. The assumption is that you have a basic to medium understanding of Apache but if you follow this tutorial you should be able to complete the task successfully. A bit on the software that we\u2019ll be using: Smokeping SmokePing keeps track of your network latency: Best of breed latency visualisation. Interactive graph explorer. Wide range of latency measurment plugins. Master/Slave System for distributed measurement. Highly configurable alerting system. Live Latency Charts with the most \u2018interesting\u2019 graphs. Free and OpenSource Software written in Perl written by Tobi Oetiker, the creator of MRTG and RRDtool http://oss.oetiker.ch/smokeping/ Preliminary Note: I am using a CentOS 5.5 i386 base installation in this tutorial. www.how2centos.com (IP 10.0.0.100): CentOS 5.5 i386 base installation Lets begin by installing the framework required by Smokeping. # yum install yum-priorities Install the EPEL i386 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm Install the RPMForge i386 YUM Repository # rpm -Uvh http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.i386.rpm # yum install httpd # yum install rrdtool # yum install fping # yum install echoping # yum install curl # yum install perl perl-Net-Telnet perl-Net-DNS perl-LDAP perl-libwww-perl perl-RadiusPerl perl-IO-Socket-SSL perl-Socket6 perl-CGI-SpeedyCGI # wget http://oss.oetiker.ch/smokeping/pub/smokeping-2.4.1.tar.gz # tar zxvf smokeping-2.4.1.tar.gz # mv smokeping-2.4.1 /opt/smokeping # cd /opt/smokeping # cd bin/ # cp smokeping.dist smokeping # cd ../htdocs/ # cp smokeping.cgi.dist smokeping.cgi # cp tr.cgi.dist tr.cgi # cd ../etc/ # cp config.dist config # cp basepage.html.dist basepage.html # cp smokemail.dist smokemail # cp tmail.dist tmail # cp smokeping_secrets.dist smokeping_secrets # chmod 600 /opt/smokeping/etc/smokeping_secrets # vi /opt/smokeping/bin/smokeping Replace this: #!/usr/sepp/bin/perl-5.8.4 -w # -*-perl-*- use lib qw(/usr/pack/rrdtool-1.2.23-mo/lib/perl); use lib qw(lib); use Smokeping 2.004000; Smokeping::main(\"etc/config.dist\"); With This: #!/usr/bin/perl -w # -*-perl-*- use lib qw(/usr/lib/perl5/vendor_perl/5.8.8/i386-linux-thread-multi/auto/RRDs/); use lib qw(/opt/smokeping/lib); use Smokeping 2.004000; Smokeping::main(\"/opt/smokeping/etc/config\"); or you can Patch the file: # cd /opt/smokeping/bin # vi /opt/smokeping/bin/smokeping.patch *** /opt/smokeping/bin/smokeping.dist 2008-06-10 15:08:07.000000000 +0200 --- /opt/smokeping/bin/smokeping 2010-08-04 16:43:08.000000000 +0200 *************** *** 1,12 **** ! #!/usr/sepp/bin/perl-5.8.4 -w # -*-perl-*- ! use lib qw(/usr/pack/rrdtool-1.2.23-mo/lib/perl); ! use lib qw(lib); use Smokeping 2.004000; ! ! Smokeping::main(\"etc/config.dist\"); =head1 NAME --- 1,12 ---- ! #!/usr/bin/perl -w # -*-perl-*- ! use lib qw(/usr/lib/perl5/vendor_perl/5.8.8/i386-linux-thread-multi/auto/RRDs/); ! use lib qw(/opt/smokeping/lib); use Smokeping 2.004000; ! ! Smokeping::main(\"/opt/smokeping/etc/config\"); =head1 NAME # patch -p1 -i smokeping.patch /opt/smokeping/bin/smokeping patching file /opt/smokeping/bin/smokeping # vi /opt/smokeping/htdocs/smokeping.cgi Replace this: #!/usr/sepp/bin/speedy -w # -*-perl-*- use lib qw(/usr/pack/rrdtool-1.0.33-to/lib/perl); use lib qw(/home/oetiker/data/projects/AADJ-smokeping/dist/lib); use CGI::Carp qw(fatalsToBrowser); use Smokeping 2.004000; Smokeping::cgi(\"/home/oetiker/data/projects/AADJ-smokeping/dist/etc/config\"); With this: #!/usr/bin/speedy -w # -*-perl-*- use lib qw(/usr/lib/perl5/vendor_perl/5.8.8/i386-linux-thread-multi/auto/RRDs); use lib qw(/opt/smokeping/lib); use CGI::Carp qw(fatalsToBrowser); use Smokeping 2.004000; Smokeping::cgi(\"/opt/smokeping/etc/config\"); or you can Patch the file: # cd /opt/smokeping/htdocs/ # vi /opt/smokeping/htdocs/smokeping_cgi.patch *************** *** 1,13 **** ! #!/usr/sepp/bin/speedy -w # -*-perl-*- ! use lib qw(/usr/pack/rrdtool-1.0.33-to/lib/perl); ! use lib qw(/home/oetiker/data/projects/AADJ-smokeping/dist/lib); use CGI::Carp qw(fatalsToBrowser); use Smokeping 2.004000; ! Smokeping::cgi(\"/home/oetiker/data/projects/AADJ-smokeping/dist/etc/config\"); =head1 NAME --- 1,13 ---- ! #!/usr/bin/speedy -w # -*-perl-*- ! use lib qw(/usr/lib/perl5/vendor_perl/5.8.8/i386-linux-thread-multi/auto/RRDs); ! use lib qw(/opt/smokeping/lib); use CGI::Carp qw(fatalsToBrowser); use Smokeping 2.004000; ! Smokeping::cgi(\"/opt/smokeping/etc/config\"); =head1 NAME # patch -p1 -i smokeping_cgi.patch /opt/smokeping/htdocs/smokeping.cgi patching file /opt/smokeping/htdocs/smokeping.cgi # cd /opt/smokeping/htdocs # vi /opt/smokeping/htdocs/tr.cgi Change this: #!/usr/sepp/bin/speedy-5.8.8 -w use strict; use lib qw(/home/oposs/smokeping/software/lib); use lib qw(perl); To this: #!/usr/bin/speedy -w use strict; use lib qw(/opt/smokeping/lib); use lib qw(perl); or you can Patch the file: # vi /opt/smokeping/htdocs/tr_cgi.patch *** /opt/smokeping/htdocs/tr.cgi.dist 2008-06-14 00:02:34.000000000 +0200 --- /opt/smokeping/htdocs/tr.cgi 2010-08-06 15:01:31.000000000 +0200 *************** *** 1,6 **** ! #!/usr/sepp/bin/speedy-5.8.8 -w use strict; ! use lib qw(/home/oposs/smokeping/software/lib); use lib qw(perl); use CGI; --- 1,6 ---- ! #!/usr/bin/speedy -w use strict; ! use lib qw(/opt/smokeping/lib); use lib qw(perl); use CGI; # patch -p1 -i tr_cgi.patch /opt/smokeping/htdocs/tr.cgi patching file /opt/smokeping/htdocs/tr.cgi # mkdir -p /var/www/html/smokeping/img /var/www/html/smokeping/script/ /opt/smokeping/data /opt/smokeping/var # chown -R apache:apache /var/www/html/smokeping/img # ln -s /opt/smokeping/htdocs/cropper /var/www/html/smokeping/cropper # ln -s /opt/smokeping/htdocs/resource /var/www/html/smokeping/resource # ln -s /opt/smokeping/htdocs/script/Tr.js /var/www/html/smokeping/script/Tr.js # ln -s /opt/smokeping/htdocs/smokeping.cgi /var/www/html/smokeping/smokeping.cgi # ln -s /opt/smokeping/htdocs/tr.cgi /var/www/html/smokeping/tr.cgi # chmod 4775 /bin/traceroute vi /etc/httpd/conf/httpd.conf change > #AddHandler cgi-script .cgi to > AddHandler cgi-script .cgi Under change > Options Indexes FollowSymLinks to > Options Indexes FollowSymLinks ExecCGI # vi /opt/smokeping/etc/basepage.html Change this: To this: or you can Patch the file: # cd /opt/smokeping/etc/ # vi /opt/smokeping/etc/basepage.patch 56,59c56,59 < < < < --- > > > > # patch -p1 -i basepage.patch /opt/smokeping/etc/basepage.html patching file /opt/smokeping/etc/basepage.html # vi /opt/smokeping/htdocs/tr.html Change this: To this: # ln -s /opt/smokeping/htdocs/tr.html /var/www/html/smokeping/tr.html Lets create a basic Config file for Smokeping to get started: # vi /opt/smokeping/etc/config *** General *** owner = Peter Random contact = some@address.nowhere mailhost = my.mail.host sendmail = /usr/sbin/sendmail # NOTE: do not put the Image Cache below cgi-bin # since all files under cgi-bin will be executed ... this is not # good for images. imgcache = /var/www/html/smokeping/img imgurl = http://www.how2centos.com/smokeping/img datadir = /opt/smokeping/data piddir = /opt/smokeping/var cgiurl = http://www.how2centos.com/smokeping/smokeping.cgi smokemail = /opt/smokeping/etc/smokemail tmail = /opt/smokeping/etc/tmail # specify this to get syslog logging syslogfacility = local0 # each probe is now run in its own process # disable this to revert to the old behaviour # concurrentprobes = no *** Alerts *** to = alertee@address.somewhere from = smokealert@company.xy +someloss type = loss # in percent pattern = >0%,*12*,>0%,*12*,>0% comment = loss 3 times in a row *** Database *** step = 300 pings = 20 # consfn mrhb steps total AVERAGE 0.5 1 1008 AVERAGE 0.5 12 4320 MIN 0.5 12 4320 MAX 0.5 12 4320 AVERAGE 0.5 144 720 MAX 0.5 144 720 MIN 0.5 144 720 *** Presentation *** template = /opt/smokeping/etc/basepage.html + charts menu = Charts title = The most interesting destinations ++ stddev sorter = StdDev(entries=>4) title = Top Standard Deviation menu = Std Deviation format = Standard Deviation %f ++ max sorter = Max(entries=>5) title = Top Max Roundtrip Time menu = by Max format = Max Roundtrip Time %f seconds ++ loss sorter = Loss(entries=>5) title = Top Packet Loss menu = Loss format = Packets Lost %f ++ median sorter = Median(entries=>5) title = Top Median Roundtrip Time menu = by Median format = Median RTT %f seconds + overview width = 600 height = 50 range = 10h + detail width = 600 height = 200 unison_tolerance = 2 \"Last 3 Hours\" 3h \"Last 30 Hours\" 30h \"Last 10 Days\" 10d \"Last 400 Days\" 400d #+ hierarchies #++ owner #title = Host Owner #++ location #title = Location *** Probes *** + FPing binary = /usr/sbin/fping *** Targets *** menuextra = <a target='_blank' href='/smokeping/tr.html{HOST}' class='{CLASS}' \\ onclick=\"window.open(this.href,this.target, \\ 'width=800,height=500,toolbar=no,location=no,status=no,scrollbars=no'); \\ return false;\">(TR)</a> probe = FPing menu = Top title = Network Latency Grapher remark = Welcome to the SmokePing website of xxx Company. \\ Here you will learn all about the latency of our network. + hosts menu= Targets ++ How2CentOS menu = How2CentOS.com title = How2CentOS.com alerts = someloss host = www.how2centos.com ++ CentOS menu = CentOS.org title = CentOS.org alerts = someloss host = www.centos.org Lets create a service startup script for Smokeping # vi /etc/init.d/smokeping #!/bin/bash # # chkconfig: 2345 80 05 # Description: Smokeping init.d script # Hacked by : How2CentOS - http://www.how2centos.com # Get function from functions library . /etc/init.d/functions # Start the service Smokeping start() { echo -n \"Starting Smokeping: \" /opt/smokeping/bin/smokeping >/dev/null 2>&1 ### Create the lock file ### touch /var/lock/subsys/smokeping success $\"Smokeping startup\" echo } # Restart the service Smokeping stop() { echo -n \"Stopping Smokeping: \" kill -9 `ps ax | grep \"/opt/smokeping/bin/smokeping\" | grep -v grep | awk '{ print $1 }'` >/dev/null 2>&1 && killall speedy_backend ### Now, delete the lock file ### rm -f /var/lock/subsys/smokeping success $\"Smokeping shutdown\" echo } ### main logic ### case \"$1\" in start) start ;; stop) stop ;; status) status Smokeping ;; restart|reload|condrestart) stop start ;; *) echo $\"Usage: $0 {start|stop|restart|reload|status}\" exit 1 esac exit 0 # chmod 755 /etc/init.d/smokeping Finally lets add Apache and Smokeping to startup and get them started: # chkconfig smokeping on # chkconfig httpd on # service smokeping start Starting Smokeping: [ OK ] # service httpd start Starting httpd: [ OK ] Now browse to your new installed Smokeping and Smoketrace installation http://www.how2centos.com/smokeping/smokeping.cgi","title":"Installing Smokeping on CentOS 5.5"},{"location":"installing-smokeping-on-centos-5-5/#install-the-epel-i386-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm","title":"Install the EPEL i386 YUM Repository"},{"location":"installing-smokeping-on-centos-5-5/#install-the-rpmforge-i386-yum-repository","text":"# rpm -Uvh http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.i386.rpm # yum install httpd # yum install rrdtool # yum install fping # yum install echoping # yum install curl # yum install perl perl-Net-Telnet perl-Net-DNS perl-LDAP perl-libwww-perl perl-RadiusPerl perl-IO-Socket-SSL perl-Socket6 perl-CGI-SpeedyCGI # wget http://oss.oetiker.ch/smokeping/pub/smokeping-2.4.1.tar.gz # tar zxvf smokeping-2.4.1.tar.gz # mv smokeping-2.4.1 /opt/smokeping # cd /opt/smokeping # cd bin/ # cp smokeping.dist smokeping # cd ../htdocs/ # cp smokeping.cgi.dist smokeping.cgi # cp tr.cgi.dist tr.cgi # cd ../etc/ # cp config.dist config # cp basepage.html.dist basepage.html # cp smokemail.dist smokemail # cp tmail.dist tmail # cp smokeping_secrets.dist smokeping_secrets # chmod 600 /opt/smokeping/etc/smokeping_secrets # vi /opt/smokeping/bin/smokeping Replace this: #!/usr/sepp/bin/perl-5.8.4 -w # -*-perl-*- use lib qw(/usr/pack/rrdtool-1.2.23-mo/lib/perl); use lib qw(lib); use Smokeping 2.004000; Smokeping::main(\"etc/config.dist\"); With This: #!/usr/bin/perl -w # -*-perl-*- use lib qw(/usr/lib/perl5/vendor_perl/5.8.8/i386-linux-thread-multi/auto/RRDs/); use lib qw(/opt/smokeping/lib); use Smokeping 2.004000; Smokeping::main(\"/opt/smokeping/etc/config\"); or you can Patch the file: # cd /opt/smokeping/bin # vi /opt/smokeping/bin/smokeping.patch *** /opt/smokeping/bin/smokeping.dist 2008-06-10 15:08:07.000000000 +0200 --- /opt/smokeping/bin/smokeping 2010-08-04 16:43:08.000000000 +0200 *************** *** 1,12 **** ! #!/usr/sepp/bin/perl-5.8.4 -w # -*-perl-*- ! use lib qw(/usr/pack/rrdtool-1.2.23-mo/lib/perl); ! use lib qw(lib); use Smokeping 2.004000; ! ! Smokeping::main(\"etc/config.dist\"); =head1 NAME --- 1,12 ---- ! #!/usr/bin/perl -w # -*-perl-*- ! use lib qw(/usr/lib/perl5/vendor_perl/5.8.8/i386-linux-thread-multi/auto/RRDs/); ! use lib qw(/opt/smokeping/lib); use Smokeping 2.004000; ! ! Smokeping::main(\"/opt/smokeping/etc/config\"); =head1 NAME # patch -p1 -i smokeping.patch /opt/smokeping/bin/smokeping patching file /opt/smokeping/bin/smokeping # vi /opt/smokeping/htdocs/smokeping.cgi Replace this: #!/usr/sepp/bin/speedy -w # -*-perl-*- use lib qw(/usr/pack/rrdtool-1.0.33-to/lib/perl); use lib qw(/home/oetiker/data/projects/AADJ-smokeping/dist/lib); use CGI::Carp qw(fatalsToBrowser); use Smokeping 2.004000; Smokeping::cgi(\"/home/oetiker/data/projects/AADJ-smokeping/dist/etc/config\"); With this: #!/usr/bin/speedy -w # -*-perl-*- use lib qw(/usr/lib/perl5/vendor_perl/5.8.8/i386-linux-thread-multi/auto/RRDs); use lib qw(/opt/smokeping/lib); use CGI::Carp qw(fatalsToBrowser); use Smokeping 2.004000; Smokeping::cgi(\"/opt/smokeping/etc/config\"); or you can Patch the file: # cd /opt/smokeping/htdocs/ # vi /opt/smokeping/htdocs/smokeping_cgi.patch *************** *** 1,13 **** ! #!/usr/sepp/bin/speedy -w # -*-perl-*- ! use lib qw(/usr/pack/rrdtool-1.0.33-to/lib/perl); ! use lib qw(/home/oetiker/data/projects/AADJ-smokeping/dist/lib); use CGI::Carp qw(fatalsToBrowser); use Smokeping 2.004000; ! Smokeping::cgi(\"/home/oetiker/data/projects/AADJ-smokeping/dist/etc/config\"); =head1 NAME --- 1,13 ---- ! #!/usr/bin/speedy -w # -*-perl-*- ! use lib qw(/usr/lib/perl5/vendor_perl/5.8.8/i386-linux-thread-multi/auto/RRDs); ! use lib qw(/opt/smokeping/lib); use CGI::Carp qw(fatalsToBrowser); use Smokeping 2.004000; ! Smokeping::cgi(\"/opt/smokeping/etc/config\"); =head1 NAME # patch -p1 -i smokeping_cgi.patch /opt/smokeping/htdocs/smokeping.cgi patching file /opt/smokeping/htdocs/smokeping.cgi # cd /opt/smokeping/htdocs # vi /opt/smokeping/htdocs/tr.cgi Change this: #!/usr/sepp/bin/speedy-5.8.8 -w use strict; use lib qw(/home/oposs/smokeping/software/lib); use lib qw(perl); To this: #!/usr/bin/speedy -w use strict; use lib qw(/opt/smokeping/lib); use lib qw(perl); or you can Patch the file: # vi /opt/smokeping/htdocs/tr_cgi.patch *** /opt/smokeping/htdocs/tr.cgi.dist 2008-06-14 00:02:34.000000000 +0200 --- /opt/smokeping/htdocs/tr.cgi 2010-08-06 15:01:31.000000000 +0200 *************** *** 1,6 **** ! #!/usr/sepp/bin/speedy-5.8.8 -w use strict; ! use lib qw(/home/oposs/smokeping/software/lib); use lib qw(perl); use CGI; --- 1,6 ---- ! #!/usr/bin/speedy -w use strict; ! use lib qw(/opt/smokeping/lib); use lib qw(perl); use CGI; # patch -p1 -i tr_cgi.patch /opt/smokeping/htdocs/tr.cgi patching file /opt/smokeping/htdocs/tr.cgi # mkdir -p /var/www/html/smokeping/img /var/www/html/smokeping/script/ /opt/smokeping/data /opt/smokeping/var # chown -R apache:apache /var/www/html/smokeping/img # ln -s /opt/smokeping/htdocs/cropper /var/www/html/smokeping/cropper # ln -s /opt/smokeping/htdocs/resource /var/www/html/smokeping/resource # ln -s /opt/smokeping/htdocs/script/Tr.js /var/www/html/smokeping/script/Tr.js # ln -s /opt/smokeping/htdocs/smokeping.cgi /var/www/html/smokeping/smokeping.cgi # ln -s /opt/smokeping/htdocs/tr.cgi /var/www/html/smokeping/tr.cgi # chmod 4775 /bin/traceroute vi /etc/httpd/conf/httpd.conf change > #AddHandler cgi-script .cgi to > AddHandler cgi-script .cgi Under change > Options Indexes FollowSymLinks to > Options Indexes FollowSymLinks ExecCGI # vi /opt/smokeping/etc/basepage.html Change this: To this: or you can Patch the file: # cd /opt/smokeping/etc/ # vi /opt/smokeping/etc/basepage.patch 56,59c56,59 < < < < --- > > > > # patch -p1 -i basepage.patch /opt/smokeping/etc/basepage.html patching file /opt/smokeping/etc/basepage.html # vi /opt/smokeping/htdocs/tr.html Change this: To this: # ln -s /opt/smokeping/htdocs/tr.html /var/www/html/smokeping/tr.html Lets create a basic Config file for Smokeping to get started: # vi /opt/smokeping/etc/config *** General *** owner = Peter Random contact = some@address.nowhere mailhost = my.mail.host sendmail = /usr/sbin/sendmail # NOTE: do not put the Image Cache below cgi-bin # since all files under cgi-bin will be executed ... this is not # good for images. imgcache = /var/www/html/smokeping/img imgurl = http://www.how2centos.com/smokeping/img datadir = /opt/smokeping/data piddir = /opt/smokeping/var cgiurl = http://www.how2centos.com/smokeping/smokeping.cgi smokemail = /opt/smokeping/etc/smokemail tmail = /opt/smokeping/etc/tmail # specify this to get syslog logging syslogfacility = local0 # each probe is now run in its own process # disable this to revert to the old behaviour # concurrentprobes = no *** Alerts *** to = alertee@address.somewhere from = smokealert@company.xy +someloss type = loss # in percent pattern = >0%,*12*,>0%,*12*,>0% comment = loss 3 times in a row *** Database *** step = 300 pings = 20 # consfn mrhb steps total AVERAGE 0.5 1 1008 AVERAGE 0.5 12 4320 MIN 0.5 12 4320 MAX 0.5 12 4320 AVERAGE 0.5 144 720 MAX 0.5 144 720 MIN 0.5 144 720 *** Presentation *** template = /opt/smokeping/etc/basepage.html + charts menu = Charts title = The most interesting destinations ++ stddev sorter = StdDev(entries=>4) title = Top Standard Deviation menu = Std Deviation format = Standard Deviation %f ++ max sorter = Max(entries=>5) title = Top Max Roundtrip Time menu = by Max format = Max Roundtrip Time %f seconds ++ loss sorter = Loss(entries=>5) title = Top Packet Loss menu = Loss format = Packets Lost %f ++ median sorter = Median(entries=>5) title = Top Median Roundtrip Time menu = by Median format = Median RTT %f seconds + overview width = 600 height = 50 range = 10h + detail width = 600 height = 200 unison_tolerance = 2 \"Last 3 Hours\" 3h \"Last 30 Hours\" 30h \"Last 10 Days\" 10d \"Last 400 Days\" 400d #+ hierarchies #++ owner #title = Host Owner #++ location #title = Location *** Probes *** + FPing binary = /usr/sbin/fping *** Targets *** menuextra = <a target='_blank' href='/smokeping/tr.html{HOST}' class='{CLASS}' \\ onclick=\"window.open(this.href,this.target, \\ 'width=800,height=500,toolbar=no,location=no,status=no,scrollbars=no'); \\ return false;\">(TR)</a> probe = FPing menu = Top title = Network Latency Grapher remark = Welcome to the SmokePing website of xxx Company. \\ Here you will learn all about the latency of our network. + hosts menu= Targets ++ How2CentOS menu = How2CentOS.com title = How2CentOS.com alerts = someloss host = www.how2centos.com ++ CentOS menu = CentOS.org title = CentOS.org alerts = someloss host = www.centos.org Lets create a service startup script for Smokeping # vi /etc/init.d/smokeping #!/bin/bash # # chkconfig: 2345 80 05 # Description: Smokeping init.d script # Hacked by : How2CentOS - http://www.how2centos.com # Get function from functions library . /etc/init.d/functions # Start the service Smokeping start() { echo -n \"Starting Smokeping: \" /opt/smokeping/bin/smokeping >/dev/null 2>&1 ### Create the lock file ### touch /var/lock/subsys/smokeping success $\"Smokeping startup\" echo } # Restart the service Smokeping stop() { echo -n \"Stopping Smokeping: \" kill -9 `ps ax | grep \"/opt/smokeping/bin/smokeping\" | grep -v grep | awk '{ print $1 }'` >/dev/null 2>&1 && killall speedy_backend ### Now, delete the lock file ### rm -f /var/lock/subsys/smokeping success $\"Smokeping shutdown\" echo } ### main logic ### case \"$1\" in start) start ;; stop) stop ;; status) status Smokeping ;; restart|reload|condrestart) stop start ;; *) echo $\"Usage: $0 {start|stop|restart|reload|status}\" exit 1 esac exit 0 # chmod 755 /etc/init.d/smokeping Finally lets add Apache and Smokeping to startup and get them started: # chkconfig smokeping on # chkconfig httpd on # service smokeping start Starting Smokeping: [ OK ] # service httpd start Starting httpd: [ OK ] Now browse to your new installed Smokeping and Smoketrace installation http://www.how2centos.com/smokeping/smokeping.cgi","title":"Install the RPMForge i386 YUM Repository"},{"location":"installing-ssmtp-on-centos-5-6/","text":"This tutorial will guide you through installing SSMTP on CentOS 5.6 SSMTP is an extremely simple MTA to get mail off the system to a mail hub. It contains no suid-binaries or other dangerous things \u2013 no mail spool to poke around in, and no daemons running in the background. Mail is simply forwarded to the configured mailhost. Extremely easy configuration. WARNING: the above is all it does; it does not receive mail, expand aliases or manage a queue. Firstly lets install the EPEL repository as SSMTP is not native to CentOS 5.6 base installations. Install the EPEL i386 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm Remove Sendmail as the binaries can conflict. # yum remove sendmail Now install SSMTP # yum install ssmtp SSMTP is now installed and all that is let is to configure it. For a really basic installation uncomment and replace with your mailserver and domain details mailhub and RewriteDomain # cp /etc/ssmtp/ssmtp.conf /etc/ssmtp/ssmtp.conf.orig # vi /etc/ssmtp/ssmtp.conf # # /etc/ssmtp.conf -- a config file for sSMTP sendmail. # # See the ssmtp.conf(5) man page for a more verbose explanation of the # available options. # # The person who gets all mail for userids < 500 # Make this empty to disable rewriting. root=postmaster # The place where the mail goes. The actual machine name is required # no MX records are consulted. Commonly mailhosts are named mail.domain.com # The example will fit if you are in domain.com and your mailhub is so named. mailhub=mail.how2centos.com # Example for SMTP port number 2525 # mailhub=mail.your.domain:2525 # Example for SMTP port number 25 (Standard/RFC) # mailhub=mail.your.domain # Example for SSL encrypted connection # mailhub=mail.your.domain:465 # Where will the mail seem to come from? RewriteDomain=how2centos.com # The full hostname #Hostname= # Set this to never rewrite the \"From:\" line (unless not given) and to # use that address in the \"from line\" of the envelope. #FromLineOverride=YES # Use SSL/TLS to send secure messages to server. #UseTLS=YES # Use SSL/TLS certificate to authenticate against smtp host. #UseTLSCert=YES # Use this RSA certificate. #TLSCert=/etc/pki/tls/private/ssmtp.pem # Get enhanced (*really* enhanced) debugging information in the logs # If you want to have debugging of the config file parsing, move this option # to the top of the config file and uncomment #Debug=YES","title":"Installing SSMTP on CentOS 5.6"},{"location":"installing-ssmtp-on-centos-5-6/#install-the-epel-i386-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm Remove Sendmail as the binaries can conflict. # yum remove sendmail Now install SSMTP # yum install ssmtp SSMTP is now installed and all that is let is to configure it. For a really basic installation uncomment and replace with your mailserver and domain details mailhub and RewriteDomain # cp /etc/ssmtp/ssmtp.conf /etc/ssmtp/ssmtp.conf.orig # vi /etc/ssmtp/ssmtp.conf # # /etc/ssmtp.conf -- a config file for sSMTP sendmail. # # See the ssmtp.conf(5) man page for a more verbose explanation of the # available options. # # The person who gets all mail for userids < 500 # Make this empty to disable rewriting. root=postmaster # The place where the mail goes. The actual machine name is required # no MX records are consulted. Commonly mailhosts are named mail.domain.com # The example will fit if you are in domain.com and your mailhub is so named. mailhub=mail.how2centos.com # Example for SMTP port number 2525 # mailhub=mail.your.domain:2525 # Example for SMTP port number 25 (Standard/RFC) # mailhub=mail.your.domain # Example for SSL encrypted connection # mailhub=mail.your.domain:465 # Where will the mail seem to come from? RewriteDomain=how2centos.com # The full hostname #Hostname= # Set this to never rewrite the \"From:\" line (unless not given) and to # use that address in the \"from line\" of the envelope. #FromLineOverride=YES # Use SSL/TLS to send secure messages to server. #UseTLS=YES # Use SSL/TLS certificate to authenticate against smtp host. #UseTLSCert=YES # Use this RSA certificate. #TLSCert=/etc/pki/tls/private/ssmtp.pem # Get enhanced (*really* enhanced) debugging information in the logs # If you want to have debugging of the config file parsing, move this option # to the top of the config file and uncomment #Debug=YES","title":"Install the EPEL i386 YUM Repository"},{"location":"installing-tomcat-6-on-centos-5-5-tutorial/","text":"Apache Tomcat is an open source software implementation of the Java Servlet and JavaServer Pages technologies. The Java Servlet and JavaServer Pages specifications are developed under the Java Community Process . So before we start just some general house keeping. The base CentOS 5.5 server hostname and IP address that we\u2019ll be using in this tutorial: www.how2centos.com (IP 10.0.0.3) The Tomcat 6 Server will eventually be available on http://www.how2centos.com:8080 The assumption, for this Tomcat 6 and CentOS 5.5 tutorial, is that you are running as root and have a medium understanding of the software required but if you\u2019re Awesome that\u2019s good enough. Install Yum Priorities For a brief overview on and how to configure Yum Priorities you can follow the instructions outlined in our Install YUM Priorities on CentOS tutorial. # yum install yum-priorities Install the EPEL i386 YUM Repository # rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm Install the RPMForge i386 YUM Repository # rpm -Uvh http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.i386.rpm Install the JPackage Project repository # cd /etc/yum.repos.d/ # wget http://jpackage.org/jpackage50.repo Install Java We just used the openjdk that available via the repositories but if you prefer Sun JDK the download it and install it. yum install java Install Tomcat6 # yum install tomcat6 tomcat6-webapps tomcat6-admin-webapps Add in JAVA_HOME under the CATALINA_TMPDIR reference # vi /usr/share/tomcat6/conf/tomcat6.conf JAVA_HOME=\"/usr/lib/jvm/java-1.6.0-openjdk-1.6.0.0/\" Start the Tomcat 6 service # service tomcat6 start Browser to your newly installed Tomcat6 Server (remember port 8080) http://www.how2centos.com:8080","title":"Installing Tomcat 6 on CentOS 5.5 Tutorial"},{"location":"installing-tomcat-6-on-centos-5-5-tutorial/#install-yum-priorities","text":"For a brief overview on and how to configure Yum Priorities you can follow the instructions outlined in our Install YUM Priorities on CentOS tutorial. # yum install yum-priorities","title":"Install Yum Priorities"},{"location":"installing-tomcat-6-on-centos-5-5-tutorial/#install-the-epel-i386-yum-repository","text":"# rpm -Uvh http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm","title":"Install the EPEL i386 YUM Repository"},{"location":"installing-tomcat-6-on-centos-5-5-tutorial/#install-the-rpmforge-i386-yum-repository","text":"# rpm -Uvh http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.5.2-2.el5.rf.i386.rpm","title":"Install the RPMForge i386 YUM Repository"},{"location":"installing-tomcat-6-on-centos-5-5-tutorial/#install-the-jpackage-project-repository","text":"# cd /etc/yum.repos.d/ # wget http://jpackage.org/jpackage50.repo","title":"Install the JPackage Project repository"},{"location":"installing-tomcat-6-on-centos-5-5-tutorial/#install-java","text":"We just used the openjdk that available via the repositories but if you prefer Sun JDK the download it and install it. yum install java","title":"Install Java"},{"location":"installing-tomcat-6-on-centos-5-5-tutorial/#install-tomcat6","text":"# yum install tomcat6 tomcat6-webapps tomcat6-admin-webapps Add in JAVA_HOME under the CATALINA_TMPDIR reference # vi /usr/share/tomcat6/conf/tomcat6.conf JAVA_HOME=\"/usr/lib/jvm/java-1.6.0-openjdk-1.6.0.0/\"","title":"Install Tomcat6"},{"location":"installing-tomcat-6-on-centos-5-5-tutorial/#start-the-tomcat-6-service","text":"# service tomcat6 start Browser to your newly installed Tomcat6 Server (remember port 8080) http://www.how2centos.com:8080","title":"Start the Tomcat 6 service"},{"location":"installing-videocache-on-centos-53/","text":"Videocache is a Squid URL rewriter plugin written in Python for bandwidth optimization while browsing famous video sharing portals/websites like Youtube, Metacafe etc. It helps you save bandwidth when a particular video is requested more than once from the same network/machine. http://cachevideos.com/ Preliminary Note: I\u00e2\u20ac\u2122m using a CentOS 5.3 x86_64 server base installation in this tutorial: server1.example.co.za (IP 10.0.0.100) Videocache requires following packages to work. Squid Python Python-urlgrabber Python-iniparse Apache (httpd) Web Server Installing Squid and Httpd on CentOS 5.3 # yum install httpd # yum install squid Squid Basic Configuration # vi /etc/squid/squid.conf Uncomment the following example ACL which allows access from your local network 10.0.0.0/24. Make sure you edit this to allow your internal IP network to be able to browse: # Example rule allowing access from your local networks. Adapt # to list your (internal) IP networks from where browsing should # be allowed acl our_networks src 10.0.0.0/24 http_access allow our_networks Start Squid Proxy and verify that port 3128 is open: # service squid start # netstat -tulpn | grep 3128 tcp 0 0 0.0.0.0:3128 0.0.0.0:* LISTEN 1832/(squid) Downloading and installing Videocache via RPM # wget http://cachevideos.com/sites/default/files/pub/videocache/videocache-1.9.1-1.noarch.rpm # rpm -ivh videocache-1.9.1-1.noarch.rpm Append the following configuration to the end of your Squid Proxy configuration file # vi /etc/squid/squid.conf # --BEGIN-- videocache config for squid url_rewrite_program /usr/bin/python /usr/share/videocache/videocache.py url_rewrite_children 7 acl videocache_allow_url url_regex -i \\.youtube\\.com\\/get_video\\? acl videocache_allow_url url_regex -i \\.googlevideo\\.com\\/videoplayback \\.googlevideo\\.com\\/videoplay \\.googlevideo\\.com\\/get_video\\? acl videocache_allow_url url_regex -i \\.google\\.com\\/videoplayback \\.google\\.com\\/videoplay \\.google\\.com\\/get_video\\? acl videocache_allow_url url_regex -i \\.google\\.[a-z][a-z]\\/videoplayback \\.google\\.[a-z][a-z]\\/videoplay \\.google\\.[a-z][a-z]\\/get_video\\? acl videocache_allow_url url_regex -i (25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\/videoplayback\\? acl videocache_allow_url url_regex -i (25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\/videoplay\\? acl videocache_allow_url url_regex -i (25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\/get_video\\? acl videocache_allow_url url_regex -i proxy[a-z0-9\\-][a-z0-9][a-z0-9][a-z0-9]?\\.dailymotion\\.com\\/ acl videocache_allow_url url_regex -i vid\\.akm\\.dailymotion\\.com\\/ acl videocache_allow_url url_regex -i [a-z0-9][0-9a-z][0-9a-z]?[0-9a-z]?[0-9a-z]?\\.xtube\\.com\\/(.*)flv acl videocache_allow_url url_regex -i bitcast\\.vimeo\\.com\\/vimeo\\/videos\\/ acl videocache_allow_url url_regex -i va\\.wrzuta\\.pl\\/wa[0-9][0-9][0-9][0-9]? acl videocache_allow_url url_regex -i \\.files\\.youporn\\.com\\/(.*)\\/flv\\/ acl videocache_allow_url url_regex -i \\.msn\\.com\\.edgesuite\\.net\\/(.*)\\.flv acl videocache_allow_url url_regex -i media[a-z0-9]?[a-z0-9]?[a-z0-9]?\\.tube8\\.com\\/ mobile[a-z0-9]?[a-z0-9]?[a-z0-9]?\\.tube8\\.com\\/ acl videocache_allow_url url_regex -i \\.mais\\.uol\\.com\\.br\\/(.*)\\.flv acl videocache_allow_url url_regex -i \\.video[a-z0-9]?[a-z0-9]?\\.blip\\.tv\\/(.*)\\.(flv|avi|mov|mp3|m4v|mp4|wmv|rm|ram) acl videocache_allow_url url_regex -i video\\.break\\.com\\/(.*)\\.(flv|mp4) acl videocache_allow_dom dstdomain .mccont.com dl.redtube.com .cdn.dailymotion.com acl videocache_deny_url url_regex -i http:\\/\\/[a-z][a-z]\\.youtube\\.com http:\\/\\/www\\.youtube\\.com url_rewrite_access deny videocache_deny_url url_rewrite_access allow videocache_allow_url url_rewrite_access allow videocache_allow_dom redirector_bypass on # --END-- videocache config for squid Add Squid Proxy and Apache Webserver to your startup and reboot chkconfig squid on chkconfig httpd on reboot [ad#3]","title":"Installing #Videocache on #CentOS 5.3"},{"location":"installing-webmin-on-centos-5-5-tutorial/","text":"This brief yet effective tutorial will instruct you on how to install CentOS 5.5 with Webmin, a web-based interface for system administration for Linux The assumption for this CentOS 5.5 Webmin tutorial is that you are running as root and have a basic understanding of the software required but if you follow this tutorial you should be able to complete the task successfully. Learn more about Webmin: http://www.webmin.com/ Preliminary Note: I am using a CentOS 5.5 32bit server in this tutorial: centos01.how2centos.com (IP 10.0.0.3) Let\u2019s begin by installing the GPG key with which the packages are signed # rpm --import http://www.webmin.com/jcameron-key.asc Add the Webmin YUM Repository # cat > /etc/yum.repos.d/webmin.repo << EOF [Webmin] name=Webmin Distribution Neutral baseurl=http://download.webmin.com/download/yum enabled=1 EOF or if you prefer using an editor # vi /etc/yum.repos.d/webmin.repo [Webmin] name=Webmin Distribution Neutral baseurl=http://download.webmin.com/download/yum enabled=1 Now to install Webmin # yum install webmin Finally browse to your machine on port 10000 http://centos01.how2centos.com:10000 Video: Installing Webmin on CentOS 5.5 Tutorial","title":"Installing Webmin on CentOS 5.5 Tutorial"},{"location":"installing-xen-on-centos-5x/","text":"This is a very simple installation of XEN visualization that I will be using in future posts as a reference. # yum groupinstall Virtualization Edit grub.conf to reflect the correct default Kernel # vi /etc/grub.conf # grub.conf generated by anaconda # # Note that you do not have to rerun grub after making changes to this file # NOTICE: You have a /boot partition. This means that # all kernel and initrd paths are relative to /boot/, eg. # root (hd0,0) # kernel /vmlinuz-version ro root=/dev/VolGroup00/LogVol00 # initrd /initrd-version.img #boot=/dev/sda default=0 timeout=1 splashimage=(hd0,0)/grub/splash.xpm.gz hiddenmenu title CentOS (2.6.18-92.1.10.el5xen) root (hd0,0) kernel /xen.gz-3.3.0 module /vmlinuz-2.6.18-92.1.10.el5xen ro root=/dev/VolGroup00/LogVol00 module /initrd-2.6.18-92.1.10.el5xen.img title CentOS (2.6.18-92.1.10.el5) root (hd0,0) kernel /vmlinuz-2.6.18-92.1.10.el5 ro root=/dev/VolGroup00/LogVol00 initrd /initrd-2.6.18-92.1.10.el5.img title CentOS (2.6.18-92.el5) root (hd0,0) kernel /vmlinuz-2.6.18-92.el5 ro root=/dev/VolGroup00/LogVol00 initrd /initrd-2.6.18-92.el5.img Reboot the machine for new XEN kernel to take effect # reboot After the reboot check the Kernel to reflect the change # uname -r 2.6.18-53.1.21.el5xen Install a CentOS 32 bit Virtual Machine using virt-install and your local YUM repository # virt-install -p --location=http://server1.example.co.za/centos/5/os/i386 --noautoconsole \\ --name=machine --ram=284 --file=/path/to/machine.img --file-size=5 --nographics -b xenbr0 Some useful commands # xm list # xm create vmmachine # xm console vmmachine","title":"Installing XEN on CentOS 5.x"},{"location":"ipcop-sarg-network-graphs-and-inode-issues-resolved/","text":"After many a moon I noticed that IPCop wasn\u2019t behaving like it should, so a quick glance at the System Status Graphs showed that the inodes usage was 100%. After laboriously troubleshooting the various possibilities I found that the SARG for IPCop I installed and then \u201chacked\u201d, to work with the latest version, was the culprit. This caused the inodes not to be cleaned up correctly, which in turn slowly but surely filled the partition. After removing SARG for IPCop everything returned to normal with 1% inodes usage. Remove SARG from your IPCop installation: # /var/ipcop/sarg/setup/setup -u However, it doesn\u2019t stop there. After removing SARG from the IPCop box the network traffic graphs stopped working. I ran a couple of commands from the makegraphs script which turned up this error: # /usr/bin/squid-graph -o=/home/httpd/html/sgraph --tcp-only < /var/log/squid/access.log Can't load '/usr/lib/perl5/site_perl/5.8.5/i386-linux/auto/GD/GD.so' for module GD: libfreetype.so.6: cannot open shared object file: No such file or directory at /usr/lib/perl5/5.8.5/i386-linux/DynaLoader.pm line 230. at /usr/bin/squid-graph line 16 Compilation failed in require at /usr/bin/squid-graph line 16. BEGIN failed--compilation aborted at /usr/bin/squid-graph line 16. So removing SARG removed the following files that are required for network traffic graphs to function: usr/lib/libgd.so.2 usr/lib/libgd.so.2.0.0 usr/lib/libgd.so usr/local/lib/libfreetype.so usr/local/lib/libfreetype.so.6.3.7 usr/local/lib/libfreetype.so.6 To recover these files download the SARG package, extract the archives and copy the relevant files back to their correct directories. # cd ~/ # tar zxvf sarg_ipcop_1.4.11.tar.gz # cd sarg/ # tar zxvf files.tar.gz # cd var/ipcop/sarg/setup/ # tar zxvf files.tar.gz # cp usr/lib/libgd.so.2 /usr/lib/ # cp usr/lib/libgd.so.2.0.0 /usr/lib/ # cp usr/lib/libgd.so /usr/lib/ # cp usr/local/lib/libfreetype.so /usr/local/lib/ # cp usr/local/lib/libfreetype.so.6.3.7 /usr/local/lib/ # cp usr/local/lib/libfreetype.so.6 /usr/local/lib/ # cd ~/ # rm -Rf sarg sarg_ipcop_1.4.11.tar.gz After 10 minutes your should see the network traffic graphs come to life. Moral of the story \"Don't install a plugin that is not compatible with your version of IPCop\"","title":"IPCop: SARG, Network Graphs and iNode issues resolved"},{"location":"iscsi-initiator-configuration-and-mulitipathing-guide/","text":"Installation Instructions: The initiator is actually a kernel module that is already available with the appropriate CentOS Linux installation. To use and manage the initiator, you need to install the iSCSI utilities. Notes: *Do not use the version that comes on the CentOS v5.0 install CDs. That version, iscsi-initiator-utils-6.2.0.742-0.5.el5 does not work with the EqualLogicarray. You can find targets but not connect to them. You need version iscsi-initiator-utils-6.2.0.742-0.6.el5 or greater. CentOS 5.0 requires at least one iSCSI HBA and one GbE NIC to do multipathing. You will need CentOS 5.1 or greater to take advantage of multipathing with GbE NICs. This requires version iscsi-initiator-utils-6.2.0.865-0.8.el5 or greater. # yum install iscsi-initiator-utils Once installed, run: # service iscsi start To verify that the iSCSI service will be started at boot time, the chkconfig command can be used as follows: # chkconfig --list iscsi iscsi 0:off 1:off 2:off 3:off 4:off 5:off 6:off By default, the newly added iscsi initiator is not enabled at boot, which is the reason for each of the run levels listed to have the service set to off. To enable this at boot, again use the chkconfig command as follows: # chkconfig --add iscsi # chkconfig iscsi on The above two commands first checks to be sure there are the necessary scripts to start and stop the service, and then it sets this service to be enabled for the appropriate runlevels. Then check to be sure the changes took effect: # chkconfig --list iscsi iscsi 0:off 1:off 2:on 3:on 4:on 5:on 6:off You also need to do the same for the Multipath daemon. # chkconfig --list multipathd multipathd 0:off 1:off 2:on 3:on 4:on 5:on 6:off Discovering Targets: Once you have the iscsi service running you will use the \u2018iscsiadm\u2019 utility to discover, login and logout of targets. To get a list of available targets type: # iscsiadm -m discovery -t st -p :3260 Example: # iscsiadm -m discovery -t st -p 172.23.10.240:3260 172.23.10.240:3260,1 iqn.2001-05.com.equallogic:0-8a0906-83bcb3401-16e0002fd0a46f3d-centos-test The example shows that the \u2018centos-test\u2019 volume has been found but not yet logged in. Logging into Targets Here are two ways to connect to iSCSI targets : ( #man iscsiadm for other methods) Log into all targets. # iscsiadm -m node -l Log into an individual target. # iscsiadm -m node -l -T -l -p :3260 Example: # iscsiadm -m node -l -T iqn.2001-05.com.equallogic: 83bcb3401-16e0002fd0a46f3d-centos-test -p :3260 Checking Session Status: To see the connection status run: # iscsiadm -m session -i Sample output: iscsiadm version 2.0-742 ************************************ Session (sid 1) using module tcp: ************************************ TargetName: iqn.2001-05.com.equallogic:0-8a0906-83bcb3401-16e0002fd0a46f3d-centos-test Portal Group Tag: 1 Network Portal: 172.23.10.240:3260 iSCSI Connection State: LOGGED IN Internal iscsid Session State: NO CHANGE ************************ Negotiated iSCSI params: ************************ HeaderDigest: None DataDigest: None MaxRecvDataSegmentLength: 65536 MaxXmitDataSegmentLength: 65536 FirstBurstLength: 65536 MaxBurstLength: 262144 ImmediateData: Yes InitialR2T: No axOutstandingR2T: 1 ************************ Attached SCSI devices: ************************ Host Number: 2 State: running scsi2 Channel 00 Id 0 Lun: 0 Attached scsi disk sdb State: running Logging off a target: It\u2019s the same as logging into a target, except, that you use -u instead of -l # iscsiadm -m node -u -T iqn.2001-05.com.equallogic:0-8a0906-83bcb3401-16e0002fd0a46f3d-centos-test -p :3260 Persistent Device naming: Devices using the Red Hat software initiators do not have a persistent naming scheme, and do not guarantee that a device (i.e. /dev/sdc) will always have the same device node. Persistent Naming describes mechanisms where the system identifies devices without relying on the /dev node, and provides a reference point for it that does not change at reboot. First you have to comment out the \u2018Blacklist all devices\u2019 section in /etc/multipath.conf file Note: If the example file, multipath.conf is not in /etc, copy it from /usr/share/doc/device-mapper- multipath-0.4.7/multipath.conf.synthetic and edit it as below # cp /usr/share/doc/device-mapper-multipath-0.4.7/multipath.conf.synthetic /etc/multipath.conf # Blacklist all devices by default. Remove this to enable multipathing # on the default devices. blacklist { devnode \"*\" } So it should look like this: # Blacklist all devices by default. Remove this to enable multipathing # on the default devices. # blacklist { # devnode \"*\" #} Then restart the multipathd daemon # service multipathd restart Now check that dev-mapper has configured the volume. # multipath -v2 # multipath -ll mpath0 ( 36090a01840b3bc833d6fa4d02f00e016 ) dm-2 EQLOGIC,100E-00 [size=8.0G][features=0][hwhandler=0] \\_ round-robin 0 [prio=1][active] \\_ 2:0:0:0 sdb 8:16 [active][ready] The highlighted number is the UUID of the volume. That never changes. You can use that UUID to create a persistent, friendlier name. For example you can name it the same as you called the volume on the EQL array. Again edit the /etc/multipath.conf file. Uncomment the following section and change the defaults to match your UUID and set a friendly alias name. Edit the /etc/multipath.conf file and uncomment out the following: #multipaths { # multipath { # wwid 3600508b4000156d700012000000b0000 # alias yellow # path_grouping_policy multibus # path_checker readsector0 # path_selector \"round-robin 0\" # failback manual # rr_weight priorities # no_path_retry 5 # rr_min_io 100 # } # multipath { # wwid 1DEC_____321816758474 # alias red # } #} Change the number after wwid to the UUID for your volume. Change the alias to something more friendly or use the volume name from the array. Change the rr_min_io to 10. Here\u2019s an example showing how to do more than one volume. multipaths { multipath { wwid 36090a02830f251891f74744263735281 alias centos-test path_grouping_policy multibus path_checker readsector0 path_selector \"round-robin 0\" failback manual rr_weight priorities no_path_retry 5 r rr_min_io 10 } # multipath { # wwid 36090a01840b31c74e173a4873200a02f # alias svr-vol # } } Save the file, then run: # multipath -v2 # multipath -ll centos-test (36090a02830f251891f74744263735281) dm-1 EQLOGIC,100E-00 [size=100G][features=1 queue_if_no_path][hwhandler=0] \\_ round-robin 0 [prio=0][active] \\_ 9:0:0:0 sdc 8:48 [active][ready] svr-vol (36090a01840b31c74e173a4873200a02f) dm-0 EQLOGIC,100E-00 [size=10G][features=0][hwhandler=0] \\_ round-robin 0 [prio=0][enabled] \\_ 6:0:0:0 sdb 8:16 [active][ready] # ls -l /dev/mapper total 0 crw-rw---- 1 root root 10, 63 2007-11-16 17:15 control brw-rw---- 1 root disk 254, 1 2007-11-19 15:59 centos-test brw-rw---- 1 root disk 254, 0 2007-11-19 15:58 svr-vol You should now have a persistent name to access that volume. Now create a EXT3 filesystem on that device. Example: # mke2fs -j -v /dev/mapper/centos-test Mounting iSCSI Filesystems at Boot: In order to mount a filesystem that exists on an iSCSI Volume connected through the Linux iSCSI Software initiator, you need to add a line to the /etc/fstab file. The format of this line is the same as any other device and filesystem with the exception being that you need to specify the _netdev mount option, and you want to have the last two numbers set to 0 (first is a dump parameter and the second is the fsck pass). The _netdev option delays the mounting of the filesystem on the device listed until after the network has been started and also ensures that the filesystem is unmounted before stopping the network subsystem at shutdown. An example of an /etc/fstab line for a filesystem to be mounted at boot that exists on an iSCSI Volume is as follows: /dev/mapper/centos-test /mnt/centos-test ext3 _netdev,defaults 0 0 Configuring Mulitpath Connections: To create the multiple logins needed for Linux dev-mapper to work you need to create an \u2018interface\u2019 file for each GbE interface you wish to use to connect to the array. You will have to create the \u2018iface.ethX\u2019 file in /var/lib/iscsi/ifaces. You then edit the file and add in the MAC address of the ETH0 adapter. You can get the MAC address with the following command: #ifconfig eth0 | grep HW eth0 Link encap:Ethernet HWaddr 00:50:56:97:70:70 The MAC address in this case is: 00:50:56:97:70:70 Here\u2019s an example of what the /var/lib/iscsi/ifaces/iface.eth0 looks like: To bind by hardware address set the NIC\u2019s MAC address to iface.hwaddress Example: iface.hwaddress = 00:50:56:97:70:70 Repeat for the other ports you wish to use. E.g. if you are going to use ETH1, then copy the /var/lib/iscsi/ifaces/iface.eth0 file to /var/lib/iscsi/ifaces/iface.eth1. Then edit the MAC address to reflect the MAC address of the ETH1 adapter. If you have already discovered your volumes, you now need to re-discover the target(s). #iscsiadm -m discovery -t st -p :3260 172.23.10.90:3260,1 iqn.2001-05.com.equallogic: 0-8a0906-83bcb3401-16e0002fd0a46f3d-centos-test 172.23.10.90:3260,1 iqn.2001-05.com.equallogic: 0-8a0906-83bcb3401-16e0002fd0a46f3d-centos-test You should see an entry for each interface you specified. You\u2019ll need to log into the volume. #iscsiadm -m node -l -T iqn.2001-05.com.equallogic:0-8a0906-8951f2302-815273634274741f-centos-test -p :3260 #iscsiadm -m session tcp: [3] 172.23.10.90:3260,1 iqn.2001-05.com.equallogic: 0-8a0906-83bcb3401-16e0002fd0a46f3d-centos-test tcp: [4] 172.23.10.90:3260,1 iqn.2001-05.com.equallogic: 0-8a0906-83bcb3401-16e0002fd0a46f3d-centos-test This shows that both adapters have connected to the array. Verify that the multipathing is correctly configured. #multipath -v2 #multipath -ll dw-test-vol (36090a02830f251891f74744263735281) dm-1 EQLOGIC,100E-00 [size=100G][features=1 queue_if_no_path][hwhandler=0] \\_ round-robin 0 [prio=0][active] \\_ 9:0:0:0 sdd 8:48 [active][ready] \\_ 8:0:0:0 sde 8:64 [active][ready] dw-svr-vol (36090a01840b31c74e173a4873200a02f) dm-0 EQLOGIC,100E-00 [size=10G][features=0][hwhandler=0] \\_ round-robin 0 [prio=0][enabled] \\_ 6:0:0:0 sdb 8:16 [active][ready] \\_ 7:0:0:0 sdc 8:32 [active][ready] In this example you see that there are two paths to each volume. Linux NIC Configuration: Flowcontrol Be sure that the network interfaces are configured to use Flow Control and Jumbo Frames if supported. To do this, use the ethtool utility on Red Hat. To check for Flow Control (RX/TX Pause) on your interface, use the -a option as follows: # ethtool -a Example: # ethtool -a eth0 Pause parameters for eth0: Autonegotiate: on RX: off TX: off Set Flow Control to on using the -A parameter with ethtool as follows: # ethtool -A [rx|tx] on Example: # ethtool -A eth0 rx on tx on # ethtool -a eth0 Pause parameters for eth0: Autonegotiate: on RX: on TX: on For some NICs, using ethtool will not persistently set this variable. For these NICs, see the manufacturer of the NIC for steps to configure the Flow Control setting for the NIC, or simply add the ethtool command to the end of the /etc/rc.d/rc.local file to set Flow Control for rx and tx to on. The majority of GbE NICs will detect and enable flowcontrol properly For Jumbo Frames, you can use the ifconfig utility to make the change on a running interface. Unfortunately, this change will revert back to the default on a system reboot. First, show the current setting for the interface in question using the ifconfig command using the interface name as an argument: # ifconfig eth0 eth0 Link encap:Ethernet HWaddr 00:0E:0C:70:C9:63 inet addr:172.19.51.160 Bcast:172.19.255.255 Mask:255.255.0.0 UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:236410 errors:0 dropped:0 overruns:0 frame:0 TX packets:272 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:40458683 (38.5 Mb) TX bytes:55551 (54.2 Kb) Base address:0xdca0 Memory:dfca0000-dfcc0000 The setting we are interested in is the MTU value. As we can see from the above output, this is currently set to 1500 which is not a Jumbo packet size. To change this, we need to set the mtu again using the ifconfig command as follows: # ifconfig eth0 mtu 9000 # ifconfig eth0 eth0 Link encap:Ethernet HWaddr 00:0E:0C:70:C9:63 inet addr:172.19.51.160 Bcast:172.19.255.255 Mask:255.255.0.0 UP BROADCAST RUNNING MULTICAST MTU:9000 Metric:1 RX packets:3007 errors:0 dropped:0 overruns:0 frame:0 TX packets:813 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:415532 (405.7 Kb) TX bytes:123065 (120.1 Kb) Base address:0xdca0 Memory:dfca0000-dfcc0000 To make this setting persistent, you need to add the MTU=\u201d\u201d parameter to the end of the ifcfg startup scripts for your SAN interfaces. These are found in the /etc/sysconfig/network-scripts directory. The naming format of the cfg files for your interfaces is ifcfg-. A sample output of one of these files after adding the MTU line to the file should be similar to the following # cat /etc/sysconfig/network-scripts/ifcfg-eth0 DEVICE=eth0 BOOTPROTO=none BROADCAST=172.19.255.255 IPADDR=172.19.51.160 NETMASK=255.255.0.0 NETWORK=172.19.0.0 ONBOOT=yes TYPE=Ethernet USERCTL=no PEERDNS=yes GATEWAY=172.19.0.1 MTU=\"9000\" Once the above Network changes have been made, you should reboot the host to verify that they have been made correctly and that the settings are persistent.","title":"ISCSI Initiator Configuration and Mulitipathing Guide"},{"location":"removing-all-i386-packages-from-centos-5-x86_64-server/","text":"A quick solution to duplicate packet installation. This tutorial will show you how to remove all i386 packages from CentOS 5 x86_64 server # yum remove \\*.i\\?86","title":"Remove all i386 packages from CentOS 5 x86_64"},{"location":"remus-applied-to-the-official-xen-repository/","text":"The one problem with Xen is transparent high availability of your servers, sure you can snapshot an image but thats only of you shutdown the virtual machine. How excited was I when Remus announced that it has been applied to the official Xen repository, and is expected to be included with the next major release. Bookmark this page for a soon to be released how to install Xen with Remus support on CentOS 5.4! What is Remus? Remus provides transparent, comprehensive high availability to ordinary virtual machines running on the Xen virtual machine monitor. It does this by maintaining a completely up-to-date copy of a running VM on a backup server, which automatically activates if the primary server fails. Key features: The backup VM is an exact copy of the primary VM. When failure happens, it continues running on the backup host as if failure had never occurred. The backup is completely up-to-date. Even active TCP sessions are maintained without interruption. Protection is transparent. Existing guests can be protected without modifying them in any way. For a full description and evaluation, see their NSDI paper. Visit the project: http://dsg.cs.ubc.ca/remus/","title":"Remus applied to the official Xen repository"},{"location":"seo-keyword-ranking-with-google-analytics/","text":"Google is busy beta testing their new AJAX driven search engine and with the release of this new AJAX version it\u2019s now possible, with the help of Filters, to allow Google Analytics to track the clicked position of specific keywords on a Google Keyword Search. Firstly see if you\u2019re using the new search engine, preform a search and then look at the url of the result page. This will assist you later went preforming keyword searches in Google in order to populate you Google Analytics data (most countries don\u2019t support it as of yet). Standard: AJAX driven: Adding the new filters Select the Analytics you want to start tracking and \u201c+ Add new profile\u201d Add a profile for an existing domain Choose a profile name, I just append \u201crankings\u201d onto my existing profile name Once the profile is created select \u201cEdit\u201d to begin adding your Google filters \u201c+ Add Filter\u201d to add your first Google filter Filter name: \"Ranking 1\" Filter type: \"Custom filter - Include\" Filter field: \"Campaign Medium\" Filter pattern: \"organic\" Filter name: \"Ranking 2\" Filter type: \"Custom filter - Include\" Filter field: \"Campaign Source\" Filter pattern: \"google\" Filter name: \"Ranking 3\" Filter type: \"Custom filter - Advanced\" Field A -> Extract A: \"Campaign term\", \"(.*)\" Field B -> Extract B: \"Referral\", \"cd=([0-9]+)\" Output To -> User Defined: \"$A1 (position: $B1)\" Finally a filter to add an \u201cunknown position\u201d message when the position of the searched keyword is not passed through: Filter name: \"Ranking 4\" Filter type: \"Custom filter - Search and Replace\" Filter field: \"User Defined\" Search String: \"(.*)\\(position: \\)\" Replace String: \"(position unknown)\" You can view your newly created ranking results under \u201cvisitors \u2013> user defined\u201d After a couple of hours you should start seeing the results, bearing in mind that the new search referring URL is still in beta and not available in some regions. The results will look something like this: Conclusion: The most challenging part of working with Google Analytics is waiting for your changes to take effect. Once a filter of profile setting is changed, it may be seven or more hours before the data in Google Analytics is affected. Debugging problems in Google Analytics takes time, so be patient. The more you can do to understand the implications of a change, prior to making the modification, the better. References: Yoast.com Regular Expression Filter Tester (BETA)*","title":"SEO \u2013 Keyword ranking with Google Analytics"},{"location":"setup-sftp-server-centos/","text":"What is SFTP? SFTP, is the acronym for SSH File Transfer Protocol, or Secure File Transfer Protocol, is a protocol packaged with SSH that works in a similar way as FTP but over a secure connection. The advantage is the ability to leverage a secure connection to transfer files. In almost all cases, SFTP is preferable to FTP because of its underlying security features and ability to piggy-back on an SSH connection. FTP is an insecure protocol that shouldn\u2019t be used. Enable PasswordAuthentication in the sshd config file Backup the current sshd_config # cp /etc/ssh/sshd_config /etc/ssh/sshd_config.orig Change it to READ-ONLY to ensure it don\u2019t get overwritten # chmod a-w /etc/ssh/sshd_config.orig # vim /etc/ssh/sshd_config Find the line with the phrase PasswordAuthentication and make it read: PasswordAuthentication yes Save your new sshd_config file and then restart the host machine\u2019s ssh service: # service sshd restart Stopping sshd: [ OK ] Starting sshd: [ OK ] Connect to your host and login to your user account To open an SFTP shell terminal as on the host machine, open a Terminal on your client machine and enter the following command, replacing with your host machine\u2019s IP address hostname: # sftp <username>@<hostname> Connected to host. sftp>","title":"How to setup a SFTP server on CentOS"},{"location":"setup-sftp-server-centos/#what-is-sftp","text":"SFTP, is the acronym for SSH File Transfer Protocol, or Secure File Transfer Protocol, is a protocol packaged with SSH that works in a similar way as FTP but over a secure connection. The advantage is the ability to leverage a secure connection to transfer files. In almost all cases, SFTP is preferable to FTP because of its underlying security features and ability to piggy-back on an SSH connection. FTP is an insecure protocol that shouldn\u2019t be used.","title":"What is SFTP?"},{"location":"setup-sftp-server-centos/#enable-passwordauthentication-in-the-sshd-config-file","text":"Backup the current sshd_config # cp /etc/ssh/sshd_config /etc/ssh/sshd_config.orig Change it to READ-ONLY to ensure it don\u2019t get overwritten # chmod a-w /etc/ssh/sshd_config.orig # vim /etc/ssh/sshd_config Find the line with the phrase PasswordAuthentication and make it read: PasswordAuthentication yes Save your new sshd_config file and then restart the host machine\u2019s ssh service: # service sshd restart Stopping sshd: [ OK ] Starting sshd: [ OK ]","title":"Enable PasswordAuthentication in the sshd config file"},{"location":"setup-sftp-server-centos/#connect-to-your-host-and-login-to-your-user-account","text":"To open an SFTP shell terminal as on the host machine, open a Terminal on your client machine and enter the following command, replacing with your host machine\u2019s IP address hostname: # sftp <username>@<hostname> Connected to host. sftp>","title":"Connect to your host and login to your user account"},{"location":"subversion-failed-to-get-lock-on-destination-repository/","text":"In the event that your Subversion server was powered down incorrectly or just crashed during one of its subversion mirror synchronizations you might end up with a lock on the destination repository. This basic tutorial will help you to remove the lock and continue with your synchronizations. Below is the output from the svnsync showed this: # /usr/bin/svnsync --non-interactive synchronize svn://{destination repository}/opt/svn/{repo} Failed to get lock on destination repos, currently held by 'svn.how2centos.com:fbc2c0c8-957f-0410-8a06-87f31314868b' Failed to get lock on destination repos, currently held by 'svn.how2centos.com:fbc2c0c8-957f-0410-8a06-87f31314868b' Failed to get lock on destination repos, currently held by 'svn.how2centos.com:fbc2c0c8-957f-0410-8a06-87f31314868b' Failed to get lock on destination repos, currently held by 'svn.how2centos.com:fbc2c0c8-957f-0410-8a06-87f31314868b' Failed to get lock on destination repos, currently held by 'svn.how2centos.com:fbc2c0c8-957f-0410-8a06-87f31314868b' Failed to get lock on destination repos, currently held by 'svn.how2centos.com:fbc2c0c8-957f-0410-8a06-87f31314868b' Failed to get lock on destination repos, currently held by 'svn.how2centos.com:fbc2c0c8-957f-0410-8a06-87f31314868b' Failed to get lock on destination repos, currently held by 'svn.how2centos.com:fbc2c0c8-957f-0410-8a06-87f31314868b' Failed to get lock on destination repos, currently held by 'svn.how2centos.com:fbc2c0c8-957f-0410-8a06-87f31314868b' Failed to get lock on destination repos, currently held by 'svn.how2centos.com:fbc2c0c8-957f-0410-8a06-87f31314868b' svnsync: Couldn't get lock on destination repos after 10 attempts To remove the lock you\u2019ll need to do the following: # svn propdel svn:sync-lock --revprop -r 0 svn://{destination repository}/opt/svn/{repo} # /usr/bin/svnsync --non-interactive synchronize svn://{destination repository}/opt/svn/{repo} Committed revision 1694. Copied properties for revision 1694. Committed revision 1695. Copied properties for revision 1695.","title":"Subversion: Failed to get lock on destination repository"},{"location":"svn-apache-ldap-configuration/","text":"Apache Configuration Create a Apache configuration file for Subversion vi /etc/httpd/conf.d/subversion.conf LoadModule dav_svn_module modules/mod_dav_svn.so LoadModule authz_svn_module modules/mod_authz_svn.so <Location /repos> # Enable Subversion DAV svn # Directory containing all repository for this path SVNParentPath /opt/svn/ SVNAutoversioning on # LDAP Authentication & Authorization is final; do not check other databases AuthBasicProvider ldap AuthzLDAPAuthoritative off # Do basic password authentication in the clear AuthType Basic # The name of the protected area or \"realm\" AuthName \"Subversion Repository\" # The LDAP query URL AuthLDAPURL \"ldap://<LDAPServer>:389/dc=example,dc=co.za # Require authentication for this Location Require valid-user </Location>","title":"SVN Apache LDAP configuration"},{"location":"svn-apache-ldap-configuration/#apache-configuration","text":"Create a Apache configuration file for Subversion vi /etc/httpd/conf.d/subversion.conf LoadModule dav_svn_module modules/mod_dav_svn.so LoadModule authz_svn_module modules/mod_authz_svn.so <Location /repos> # Enable Subversion DAV svn # Directory containing all repository for this path SVNParentPath /opt/svn/ SVNAutoversioning on # LDAP Authentication & Authorization is final; do not check other databases AuthBasicProvider ldap AuthzLDAPAuthoritative off # Do basic password authentication in the clear AuthType Basic # The name of the protected area or \"realm\" AuthName \"Subversion Repository\" # The LDAP query URL AuthLDAPURL \"ldap://<LDAPServer>:389/dc=example,dc=co.za # Require authentication for this Location Require valid-user </Location>","title":"Apache Configuration"},{"location":"transferring-files-using-netcat/","text":"Netcat is a great cross platform tool, it can be used for just about all things related to or involving TCP or UDP. Its most practical use is transferring files using Netcat from one machine to another via a network. Where non *nix people usually don\u2019t have SSH installed or set-up, it is much faster to transfer files using Netcat than setup SSH. Netcat is just a single executable, and works across all platforms (Windows,Mac OSX, Linux ). On the Netcat receiving end # nc -l 1234 > out.file This will start Netcat listening on port 1234. On the Netcat sending end # nc -w 3 [destination] 1234 < out.file This will connect to the receiver and begin transferring files using Netcat. If you\u2019d like to transfer files quicker (*nix only I am afraid), you can compress the file during sending process On the Netcat receiving end # nc -l -p 1234 | uncompress -c | tar xvfp - On the Netcat sending end # tar cfp - /some/dir | compress -c | nc -w 3 [destination] 1234","title":"Transferring Files using Netcat"},{"location":"transferring-files-using-netcat/#on-the-netcat-receiving-end","text":"# nc -l 1234 > out.file This will start Netcat listening on port 1234.","title":"On the Netcat receiving end"},{"location":"transferring-files-using-netcat/#on-the-netcat-sending-end","text":"# nc -w 3 [destination] 1234 < out.file This will connect to the receiver and begin transferring files using Netcat. If you\u2019d like to transfer files quicker (*nix only I am afraid), you can compress the file during sending process","title":"On the Netcat sending end"},{"location":"transferring-files-using-netcat/#on-the-netcat-receiving-end_1","text":"# nc -l -p 1234 | uncompress -c | tar xvfp -","title":"On the Netcat receiving end"},{"location":"transferring-files-using-netcat/#on-the-netcat-sending-end_1","text":"# tar cfp - /some/dir | compress -c | nc -w 3 [destination] 1234","title":"On the Netcat sending end"},{"location":"upgrading-centos-5-4-to-5-5/","text":"Before upgrading CentOS 5.4 to 5.5 it cannot be stressed enough how important it is to make a backup of your system before you do this. Actions listed in this post are written with the assumption that they will be executed by the root user running the bash or any other modern shell. Clean All Packages # yum clean all The following command will get a list of packages that are going to be updated. # yum list updates Lets begin upgrading CentOS 5.4 to 5.5 # yum update Finally reboot the server for Kernel changes to take effect # reboot Verify that CentOS 5.5 is working: # cat /etc/redhat-release CentOS release 5.5 (Final) Or you can use the lsb_release command: # lsb_release -a LSB Version: :core-3.1-ia32:core-3.1-noarch:graphics-3.1-ia32:graphics-3.1-noarch Distributor ID: CentOS Description: CentOS release 5.5 (Final) Release: 5.5 Codename: Final","title":"Upgrading CentOS 5.4 to 5.5"},{"location":"upgrading-centos-5-5-to-centos-5-6/","text":"Before upgrading CentOS 5.5 to 5.6 it cannot be stressed enough how important it is to make a backup of your system before you do this. Actions listed in this post are written with the assumption that they will be executed by the root user running the bash or any other modern shell. Clean All Packages # yum clean all The following command will get a list of packages that are going to be updated. # yum list updates Upgrade CentOS 5.5 to 5.6 # yum update Finally reboot the server for Kernel changes to take effect # reboot Verify that CentOS 5.6 is working: # cat /etc/redhat-release CentOS release 5.6 (Final) Or: # lsb_release -a LSB Version: :core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch Distributor ID: CentOS Description: CentOS release 5.6 (Final) Release: 5.6 Codename: Final Or: # rpm -q centos-release centos-release-5-6.el5.centos.1","title":"Upgrading CentOS 5.5 to CentOS 5.6"},{"location":"upgrading-centos-5-5-to-centos-5-6/#upgrade-centos-55-to-56","text":"# yum update Finally reboot the server for Kernel changes to take effect # reboot Verify that CentOS 5.6 is working: # cat /etc/redhat-release CentOS release 5.6 (Final) Or: # lsb_release -a LSB Version: :core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch Distributor ID: CentOS Description: CentOS release 5.6 (Final) Release: 5.6 Codename: Final Or: # rpm -q centos-release centos-release-5-6.el5.centos.1","title":"Upgrade CentOS 5.5 to 5.6"},{"location":"upgrading-centos-5-6-to-centos-5-7/","text":"Before upgrading CentOS 5.6 to 5.7 it cannot be stressed enough how important it is to make a backup of your system before you do this. Actions listed in this post are written with the assumption that they will be executed by the root user running the bash or any other modern shell. Clean All Packages # yum clean all The following command will get a list of packages that are going to be updated. # yum list updates Upgrade CentOS 5.6 to 5.7 # yum update Finally reboot the server for Kernel changes to take effect # reboot Verify that CentOS 5.7 is working: # cat /etc/redhat-release CentOS release 5.7 (Final) Or: # lsb_release -a LSB Version: :core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch Distributor ID: CentOS Description: CentOS release 5.7 (Final) Release: 5.7 Codename: Final Or: # rpm -q centos-release centos-release-5-7.el5.centos","title":"Upgrading CentOS 5.6 to CentOS 5.7"},{"location":"upgrading-centos-5-6-to-centos-5-7/#upgrade-centos-56-to-57","text":"# yum update Finally reboot the server for Kernel changes to take effect # reboot Verify that CentOS 5.7 is working: # cat /etc/redhat-release CentOS release 5.7 (Final) Or: # lsb_release -a LSB Version: :core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch Distributor ID: CentOS Description: CentOS release 5.7 (Final) Release: 5.7 Codename: Final Or: # rpm -q centos-release centos-release-5-7.el5.centos","title":"Upgrade CentOS 5.6 to 5.7"},{"location":"web-search-interest-for-centos-5-5/","text":"With the CentOS 5.5 release date getting closer I thought I would post, with the help of Google Insights, the Web Search Interest for CentOS 5.5. The below Google Insights graph depicts the interest for CentOS 5.5 over the last 12 months.","title":"Web Search Interest for CentOS 5.5"},{"location":"xslcache-is-in-pecl/","text":"Originally developed by NYTimes, XSLCache extension for PHP is finally in PECL repository and ready for it\u2019s first PECL-release. \u201cThe XSL Cache extension is a modification of PHP\u2019s standard XSL extension that caches the parsed XSL stylesheet representation between sessions for 2.5x boost in performance for sites that repeatedly apply the same transform. Although there is still some further work that could be done on the extension, this code is already proving beneficial in production use for a few applications on the New York Times\u2019 website.\u201d Installation, from now on, should be as simple as pecl install xslcache I have modified the linux installing guide, Installing and upgrading to PHP 5.2.9 on CentOS and Red Hat Linux 5.3 x86_64 to reflect this change.","title":"XSLCache is in PECL"}]}